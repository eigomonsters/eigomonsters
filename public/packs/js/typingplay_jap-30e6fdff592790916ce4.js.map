{"version":3,"file":"js/typingplay_jap-30e6fdff592790916ce4.js","sources":["webpack:///webpack/bootstrap","webpack:///./app/javascript/packs/typingplay_jap.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/@rails/ujs/lib/assets/compiled/rails-ujs.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///(webpack)/buildin/module.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/packs/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./app/javascript/packs/typingplay_jap.js\");\n","const { fileInputSelector } = require(\"@rails/ujs\");\n\nwindow.addEventListener('load', function(){\n\tgameStart();\n});\n\n\n  // 選択した英単語難易度によって変わるwordListの定義\n  const wordList = gon.wordListAll;\n\n  // 選択したプレイモードによって変わるplayModeの定義\n  const playMode = gon.playMode;\n\n\nfunction gameStart(){\n\n  // 表示する単語リストを定義する。\n  // chromeの場合\"ff\"が正常に動作しない。\n\n  // 表示するメーターリストを定義する。\n  const imgArray =[\n    '/assets/メーターPNG/メーター0.png',\n    '/assets/メーターPNG/メーター10_yellow.png',\n    '/assets/メーターPNG/メーター20_yellow.png',\n    '/assets/メーターPNG/メーター30_yellow.png',\n    '/assets/メーターPNG/メーター40_yellow.png',\n    '/assets/メーターPNG/メーター50_yellow.png',\n    '/assets/メーターPNG/メーター60_yellow.png',\n    '/assets/メーターPNG/メーター70_yellow.png',\n    '/assets/メーターPNG/メーター80_yellow.png',\n    '/assets/メーターPNG/メーター90_yellow.png',\n    '/assets/メーターPNG/メーター100_yellow.png',\n\t'/assets/メーターPNG/メーター10_green.png',\n    '/assets/メーターPNG/メーター20_green.png',\n    '/assets/メーターPNG/メーター30_green.png',\n    '/assets/メーターPNG/メーター40_green.png',\n    '/assets/メーターPNG/メーター50_green.png',\n    '/assets/メーターPNG/メーター60_green.png',\n    '/assets/メーターPNG/メーター70_green.png',\n    '/assets/メーターPNG/メーター80_green.png',\n    '/assets/メーターPNG/メーター90_green.png',\n    '/assets/メーターPNG/メーター100_green.png',\n\t'/assets/メーターPNG/メーター10_blue.png',\n    '/assets/メーターPNG/メーター20_blue.png',\n    '/assets/メーターPNG/メーター30_blue.png',\n    '/assets/メーターPNG/メーター40_blue.png',\n    '/assets/メーターPNG/メーター50_blue.png',\n    '/assets/メーターPNG/メーター60_blue.png',\n    '/assets/メーターPNG/メーター70_blue.png',\n    '/assets/メーターPNG/メーター80_blue.png',\n    '/assets/メーターPNG/メーター90_blue.png',\n    '/assets/メーターPNG/メーター100_blue.png',\n\t'/assets/メーターPNG/メーター10_pink.png',\n    '/assets/メーターPNG/メーター20_pink.png',\n    '/assets/メーターPNG/メーター30_pink.png',\n    '/assets/メーターPNG/メーター40_pink.png',\n    '/assets/メーターPNG/メーター50_pink.png',\n    '/assets/メーターPNG/メーター60_pink.png',\n    '/assets/メーターPNG/メーター70_pink.png',\n    '/assets/メーターPNG/メーター80_pink.png',\n    '/assets/メーターPNG/メーター90_pink.png',\n    '/assets/メーターPNG/メーター100_pink.png',\n\t'/assets/メーターPNG/メーター10_red.png',\n    '/assets/メーターPNG/メーター20_red.png',\n    '/assets/メーターPNG/メーター30_red.png',\n    '/assets/メーターPNG/メーター40_red.png',\n    '/assets/メーターPNG/メーター50_red.png',\n    '/assets/メーターPNG/メーター60_red.png',\n    '/assets/メーターPNG/メーター70_red.png',\n    '/assets/メーターPNG/メーター80_red.png',\n    '/assets/メーターPNG/メーター90_red.png',\n    '/assets/メーターPNG/メーター100_red.png'\n  ];\n\n\n  const romaMappingTableFirst = {\n    \"あ\":\"a\",\n    \"い\":\"i\",\n    \"う\":\"u\",\n    \"え\":\"e\",\n    \"お\":\"o\",\n    \"か\":\"ka\",\n    \"き\":\"ki\",\n    \"く\":\"ku\",\n    \"け\":\"ke\",\n    \"こ\":\"ko\",\n    \"さ\":\"sa\",\n    \"し\":\"si\",\n    \"す\":\"su\",\n    \"せ\":\"se\",\n    \"そ\":\"so\",\n    \"た\":\"ta\",\n    \"ち\":\"ti\",\n    \"つ\":\"tu\",\n    \"て\":\"te\",\n    \"と\":\"to\",\n    \"な\":\"na\",\n    \"に\":\"ni\",\n    \"ぬ\":\"nu\",\n    \"ね\":\"ne\",\n    \"の\":\"no\",\n    \"は\":\"ha\",\n    \"ひ\":\"hi\",\n    \"ふ\":\"hu\",\n    \"へ\":\"he\",\n    \"ほ\":\"ho\",\n    \"ま\":\"ma\",\n    \"み\":\"mi\",\n    \"む\":\"mu\",\n    \"め\":\"me\",\n    \"も\":\"mo\",\n    \"や\":\"ya\",\n    \"ゆ\":\"yu\",\n    \"よ\":\"yo\",\n    \"ら\":\"ra\",\n    \"り\":\"ri\",\n    \"る\":\"ru\",\n    \"れ\":\"re\",\n    \"ろ\":\"ro\",\n    \"わ\":\"wa\",\n    \"を\":\"wo\",\n    \"が\":\"ga\",\n    \"ぎ\":\"gi\",\n    \"ぐ\":\"gu\",\n    \"げ\":\"ge\",\n    \"ご\":\"go\",\n    \"ざ\":\"za\",\n    \"じ\":\"zi\",\n    \"ず\":\"zu\",\n    \"ぜ\":\"ze\",\n    \"ぞ\":\"zo\",\n    \"だ\":\"da\",\n    \"ぢ\":\"di\",\n    \"づ\":\"du\",\n    \"で\":\"de\",\n    \"ど\":\"do\",\n    \"ば\":\"ba\",\n    \"び\":\"bi\",\n    \"ぶ\":\"bu\",\n    \"べ\":\"be\",\n    \"ぼ\":\"bo\",\n    \"ぱ\":\"pa\",\n    \"ぴ\":\"pi\",\n    \"ぷ\":\"pu\",\n    \"ぺ\":\"pe\",\n    \"ぽ\":\"po\",\n    \"ぁ\":\"la\",\n    \"ぃ\":\"li\",\n    \"ぅ\":\"lu\",\n    \"ぇ\":\"le\",\n    \"ぉ\":\"lo\",\n    \"ゃ\":\"lya\",\n    \"ゅ\":\"lyu\",\n    \"ょ\":\"lyo\",\n    \"でゃ\":\"dha\",\n    \"でぃ\":\"dhi\",\n    \"でゅ\":\"dhu\",\n    \"でぇ\":\"dhe\",\n    \"でょ\":\"dho\",\n    \"つぁ\":\"tsa\",\n    \"つぃ\":\"tsi\",\n    \"つぇ\":\"tse\",\n    \"つぉ\":\"tso\",\n    \"てゃ\":\"tha\",\n    \"てぃ\":\"thi\",\n    \"てゅ\":\"thu\",\n    \"てぇ\":\"the\",\n    \"てょ\":\"tho\",\n    \"ふぁ\":\"fa\",\n    \"ふぃ\":\"fi\",\n    \"ふぇ\":\"fe\",\n    \"ふぉ\":\"fo\",\n    \"うぁ\":\"wha\",\n    \"うぃ\":\"wi\",\n    \"うぇ\":\"we\",\n    \"うぉ\":\"who\",\n    \"ゔぁ\":\"va\",\n    \"ゔぃ\":\"vi\",\n    \"ゔ\":\"vu\",\n    \"ゔぇ\":\"ve\",\n    \"ゔぉ\":\"vo\",\n    \"きゃ\":\"kya\",\n    \"きぃ\":\"kyi\",\n    \"きゅ\":\"kyu\",\n    \"きぇ\":\"kye\",\n    \"きょ\":\"kyo\",\n    \"ぎゃ\":\"gya\",\n    \"ぎぃ\":\"gyi\",\n    \"ぎゅ\":\"gyu\",\n    \"ぎぇ\":\"gye\",\n    \"ぎょ\":\"gyo\",\n    \"しゃ\":\"sya\",\n    \"しぃ\":\"syi\",\n    \"しゅ\":\"syu\",\n    \"しぇ\":\"sye\",\n    \"しょ\":\"syo\",\n    \"じゃ\":\"zya\",\n    \"じぃ\":\"zyi\",\n    \"じゅ\":\"zyu\",\n    \"じぇ\":\"zye\",\n    \"じょ\":\"zyo\",\n    \"ちゃ\":\"tya\",\n    \"ちぃ\":\"tyi\",\n    \"ちゅ\":\"tyu\",\n    \"ちぇ\":\"tye\",\n    \"ちょ\":\"tyo\",\n    \"ぢゃ\":\"dya\",\n    \"ぢぃ\":\"dyi\",\n    \"ぢゅ\":\"dyu\",\n    \"ぢぇ\":\"dye\",\n    \"ぢょ\":\"dyo\",\n    \"にゃ\":\"nya\",\n    \"にぃ\":\"nyi\",\n    \"にゅ\":\"nyu\",\n    \"にぇ\":\"nye\",\n    \"にょ\":\"nyo\",\n    \"ひゃ\":\"hya\",\n    \"ひぃ\":\"hyi\",\n    \"ひゅ\":\"hyu\",\n    \"ひぇ\":\"hye\",\n    \"ひょ\":\"hyo\",\n    \"びゃ\":\"bya\",\n    \"びぃ\":\"byi\",\n    \"びゅ\":\"byu\",\n    \"びぇ\":\"bye\",\n    \"びょ\":\"byo\",\n    \"ぴゃ\":\"pya\",\n    \"ぴぃ\":\"pyi\",\n    \"ぴゅ\":\"pyu\",\n    \"ぴぇ\":\"pye\",\n    \"ぴょ\":\"pyo\",\n    \"ふゃ\":\"fya\",\n    \"ふぃ\":\"fyi\",\n    \"ふゅ\":\"fyu\",\n    \"ふぇ\":\"fye\",\n    \"ふょ\":\"fyo\",\n    \"みゃ\":\"mya\",\n    \"みぃ\":\"myi\",\n    \"みゅ\":\"myu\",\n    \"みぇ\":\"mye\",\n    \"みょ\":\"myo\",\n    \"りゃ\":\"rya\",\n    \"りぃ\":\"ryi\",\n    \"りゅ\":\"ryu\",\n    \"りぇ\":\"rye\",\n    \"りょ\":\"ryo\",\n    \"くぁ\":\"kwa\",\n    \"ぐぁ\":\"gwa\",\n    \"とぅ\":\"twu\",\n    \"どぅ\":\"dwu\",\n    \"いぇ\":\"ye\"\n  };\n\n  const romaMappingTableSecond = {\n    \"い\":\"yi\",\n    \"か\":\"ca\",\n    \"く\":\"cu\",\n    \"こ\":\"co\",\n    \"し\":\"shi\",\n    \"せ\":\"ce\",\n    \"ち\":\"chi\",\n    \"つ\":\"tsu\",\n    \"ふ\":\"fu\",\n    \"じ\":\"ji\",\n    \"ぁ\":\"xa\",\n    \"ぃ\":\"xi\",\n    \"ぅ\":\"xu\",\n    \"ぇ\":\"xe\",\n    \"ぉ\":\"xo\",\n    \"ゃ\":\"xya\",\n    \"ゅ\":\"xyu\",\n    \"ょ\":\"xyo\",\n    \"しゃ\":\"sha\",\n    \"しゅ\":\"shu\",\n    \"しぇ\":\"she\",\n    \"しょ\":\"sho\",\n    \"じゃ\":\"ja\",\n    \"じぃ\":\"jyi\",\n    \"じゅ\":\"ju\",\n    \"じぇ\":\"je\",\n    \"じょ\":\"jo\",\n    \"ちゃ\":\"cha\",\n    \"ちぃ\":\"cyi\",\n    \"ちゅ\":\"chu\",\n    \"ちぇ\":\"che\",\n    \"ちょ\":\"cho\",\n    \"うぃ\":\"whi\",\n    \"うぇ\":\"whe\"\n  };\n\n  const romaMappingTableThird = {\n    \"し\":\"ci\",\n    \"じゃ\":\"jya\",\n    \"じゅ\":\"jyu\",\n    \"じぇ\":\"jye\",\n    \"じょ\":\"jyo\",\n    \"ちゃ\":\"cya\",\n    \"ちゅ\":\"cyu\",\n    \"ちぇ\":\"cye\",\n    \"ちょ\":\"cyo\"\n  };\n\n\n  // 表示するメーター初期値を定義する。\n  let bonusCountMeter = 0;\n  // 表示するメーター最大値を定義する。\n  const bonusCountMeterMax = 50;\n  // 表示するプレイ延長時間を定義する。\n  const displayBonusAddPlayTime = document.getElementById(\"displayBonusAddPlayTime\");\n  displayBonusAddPlayTime.className =  \"displayBonusAddPlayTime\";\n  // メーター最大値に達した際の延長するプレイ時間を定義する。\n  const bonusAddPlayTime = 3000;\n\n  // メーターの初期値を表示する。\n  document.getElementById(\"meterImg\").src=imgArray[bonusCountMeter];\n  // ゲーム開始までをカウントダウン変数を定義する。\n  let countDownPopup = document.getElementById(\"countDownPopup\");\n  // class属性を付与する。\n  countDownPopup.className = \"countDownPopup\";\n  // ゲーム開始までをカウントダウン変数の初期値を定義する。\n  let countDownPopupNumber = 3;\n  // ゲーム開始までをカウントダウン変数の初期値を表示する。\n  countDownPopup.textContent = countDownPopupNumber;\n\n  // ゲーム開始までをカウントダウンを1秒ごとに実施するように定義する。\n  const timerIdToStart = setInterval(countDownTimeToStart,1000);\n\n\n\n\n\n\n  // ゲーム開始までをカウントダウンを実施する処理を定義する。\n  function countDownTimeToStart(){\n\t  \t// カウントダウン文字を１ずつ減らす。\n\t\tcountDownPopupNumber = countDownPopupNumber - 1;\n\t\t//カウントダウンが0になれば、ゲームを開始する。\n\t\tif (countDownPopupNumber <= 0){\n\t\tclearInterval(timerIdToStart);\n\t\tcountDownPopup.className = \"countDownPopupAfterClose\";\n\t\ttypingPlayStart();\n\t\t} else {\n\t\tcountDownPopup.textContent = countDownPopupNumber;\n\t\t}\n  }\n\n  // ゲームを開始する処理を定義する。\n  function typingPlayStart(){\n\n    // 表示する単語を定義する。\n    const displayWord = document.getElementById(\"displayWord\");\n    displayWord.className =  \"displayWord\";\n    const displayWordEnglish = document.getElementById(\"displayWordEnglish\");\n    displayWordEnglish.className =  \"displayWordEnglish\";\n\tconst displayWordKanji = document.getElementById(\"displayWordKanji\");\n    displayWordKanji.className =  \"displayWordKanji\";\n    // 表示する単語を一文字ずつに分ける変数を定義する。\n    let charArrayInDisplayWordJap =[];\n\n\n\t// ゲーム終了を判定するフラグを定義する。\n    let playEndFlag = \"0\";\n\n\t// createDisplayWord処理を実行して問題ないかを判定するフラグを用意する。\n\t// bonusCountReset処理で200m秒内に連続で処理が発生しないようにするため。\n\tlet createDisplayWordOkFlagFromBonusCountReset = \"0\";\n\n    // 表示する単語を作成する。\n    createDisplayWord();\n\n    // プレイ開始時間を取得する。\n    const startTime = Date.now();\n    // 表示する残りのプレイ可能時間を定義する。\n    let remainPlayingTime = document.getElementById(\"remainPlayingTime\");\n    remainPlayingTime.className =  \"remainPlayingTime\";\n    // 表示するスタート時のプレイ可能時間を定義する。\n    let initialPlayingTimeMSec = 5000;\n    // スタート時に残りのプレイ可能時間の初期値を表示するためにcountDownTimeを実施する。\n    setTimeout(countDownTime,0);\n    // 1秒ごとにプレイ時間のcountDownTimeを実施するように定義する。\n    const timerId = setInterval(countDownTime,1000);\n\n    // 正解時に表示する丸を定義する。\n    document.getElementById(\"circleImg\").src= '/assets/正解○.png';\n    circleImg.classList.add('transparent');\n\n    // \"答えを見る\"ボタンを表示する。(プレイモード普通、正確重視の時のみ)\n\tif (playMode == \"普通\" || playMode == \"正確重視\" ) {\n\t\tlet answerButton = document.getElementById(\"answerButton\");\n\t\tanswerButton.innerHTML = \"答えを見る\";\n\t\tanswerButton.className = \"answerButton\";\n\t\tanswerButton.onclick = function() {\n\t\t\tfor (let i = 0; i < charArrayInDisplayWordJap.length; i++) {\n\t\t\t\tcharArrayInDisplayWordJap[i].classList.remove('transparent');\n\t\t\t}\n\t\t\tdisplayWordKanji.className =  \"displayWordKanji\";\n\t\t};\n\t};\n\n    // 表示するスコアを定義する。\n    let displayScore = document.getElementById(\"displayScore\");\n    displayScore.className =  \"displayScore\";\n    // 合計スコアの初期値を定義する。\n    let totalScore = 0;\n    // 表示するスコアに初期値を定義する。\n    displayScore.textContent = totalScore + \" P\";\n    // スコアアップする基準を定義する。\n    const refTextLengthForCountUpLevel1 = 4;\n    const addScoreLevel1 = 1000;\n    const addScoreLevel2 = 3000;\n\n    // タイプされる度にkeyDownCharCountUpを実施するように定義する。\n    document.addEventListener(`keydown`, keyDownCharCountUp);\n\n    // 表示する単語を作成する処理を定義する。\n    function createDisplayWord(){\n\t\t// すでにゲームが終了している場合、新規ワードを生成しない。ゲーム中のみ生成する。\n\t\t// ギリギリで問題に正解した場合、○を表示した後、200m秒後にワードを生成する処理が走るため。\n\t\tif(playEndFlag === \"0\"){\n\t\t\t// 表示単語を初期化する。\n\t\t\tdisplayWord.textContent = \"\";\n\t\t\t// 0〜textListsの総数間で整数値をランダムで算出する。\n\t\t\t//let randomIntegerInTotalWordList = Math.floor(Math.random() * wordList.length);\n\t\t\tlet randomIntegerInTotalWordList = Math.floor(Math.random() * 3);\n\t\t\t// 表示する単語をランダムで選定する。\n\t\t\tdisplayWordInList = wordList[randomIntegerInTotalWordList];\n\n\t\t\tlet filePath = '/assets/'+ displayWordInList.eng_word + '.mp3';\n\n\n\t\t\tconst fs = require('fs').promises\n\t\t\tasync function fileExists(filePath) {\n\t\t\ttry {\n\t\t\t\tconsole.log( \"存在します。\");\n\t\t\t\treturn (await fs.lstat(filePath)).isFile()\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log( \"存在しません。\");\n\t\t\t\treturn false\n\t\t\t}\n\t\t\t}\n\n\t\t\tfileExists(filePath)\n\t\t\t.then(res => console.log(res))\n\n\n\n\n\n\n\n\t\t\t// 英単語を生成した際に、発音させる。\n\t\t\t//pronounce(displayWordInList.eng_word);\n\t\t\t// const fs = require('fs');\n\n\t\t\t// check(filePath);\n\t\t\t// function check(filePath) {\n\t\t\t// \tif( fs.existsSync( filePath ) ){\n\t\t\t// \t\tconsole.log( \"存在します。\");\n\t\t\t// \t}else{\n\t\t\t// \t\tconsole.log( \"存在しません。\");\n\t\t\t// \t}\n\t\t\t\t// var isExist = false;\n\t\t\t\t// try {\n\t\t\t\t// \tconsole.log(\"ファイルあり\")\n\t\t\t\t//   fs.statSync(filePath);\n\t\t\t\t//   isExist = true;\n\t\t\t\t//   console.log(\"ファイルあり\")\n\t\t\t\t// } catch(err) {\n\t\t\t\t//   isExist = false;\n\t\t\t\t//   console.log(\"ファイルなし\")\n\t\t\t\t// }\n\t\t\t\t// return isExist;\n\t\t\t  //}\n\t\t\t  //console.log(isExist);\n\t\t\t// 英単語を生成した際に、発音させる。\n\t\t\t\t//function pronounce(eng_word){\n\n\n\t\t\t\t// let filepath = new File([blob], '/assets/'+ eng_word + '.mp3');\n\t\t\t\t// if (filepath.exists == true){\n\t\t\t\t// console.log(\"ファイルあり\")\n\t\t\t\t// let pronunciation = new Audio(filepath);\n\t\t\t\t// pronunciation.play();\n\t\t\t\t// } else {\n\t\t\t\t// \tconsole.log(\"ファイルなし\")\n\t\t\t\t// }\n\t\t\t//};\n\n\t\t\t// 英単語を表示させる。\n\t\t\tdisplayWordEnglish.textContent = displayWordInList.eng_word;\n\t\t\t// 日本語訳(漢字)を表示させる。\n\t\t\tdisplayWordKanji.textContent = displayWordInList.jap_trans_1;\n\t\t\t// プレイモード練習の時は、答えとして漢字を表示させ、普通、正確重視では非表示にする。\n\t\t\tif ( playMode == \"練習\" ) {\n\t\t\t\tdisplayWordKanji.className =  \"displayWordKanji\";\n\t\t\t} else if ( playMode == \"普通\" || playMode == \"正確重視\") {\n\t\t\t\tdisplayWordKanji.className =  \"transparent\";\n\t\t\t} else {\n\t\t\t\tdisplayWordKanji.className =  \"transparent\";\n\t\t\t}\n\t\t\t// 表示する単語を一文字ごとに区切り、spanタグで閉じる。\n\t\t\t// spanタグで閉じた単語を表示する。\n\t\t\tcharArrayInDisplayWordJap = displayWordInList.jap_trans_1_yomi.split(\"\").map(function(value){\n\t\t\t\t// spanタグを作成する。\n\t\t\t\tlet spanValue = document.createElement(\"span\");\n\t\t\t\t// spanタグに一文字を挿入する。\n\t\t\t\tspanValue.textContent = value;\n\t\t\t\t// 各文字に対して、transparentクラスを付与する。（プレイモード普通、正確重視のときのみ）\n\t\t\t\tif ( playMode == \"普通\" || playMode == \"正確重視\") {\n\t\t\t\t\tspanValue.className = \"transparent\";\n\t\t\t\t};\n\t\t\t\t// 表示する単語にspanタグで閉じた一文字を追加する。\n\t\t\t\tdisplayWord.appendChild(spanValue);\n\t\t\t\treturn spanValue;\n\t\t\t});\n\t\t\t//  createDisplayWord処理を実行して問題ないかを判定するフラグを用意する。\n\t\t\t// bonusCountReset処理で200m秒内に連続で処理が発生しないようにするため。\n\t\t\tcreateDisplayWordOkFlagFromBonusCountReset = \"0\";\n\t\t};\n  \t};\n\n\n    // プレイ時間をカウントダウンする処理を定義する。\n    function countDownTime(){\n\t\tconst currentTime = Date.now();\n\t\tconst diffBetweenCurrentTimeAndStartTime = currentTime - startTime;\n\t\tconst remainMSec = initialPlayingTimeMSec - diffBetweenCurrentTimeAndStartTime;\n\t\tconst remainSec = Math.ceil(remainMSec/1000);\n\t\tlet  remainSecLabel = `残り${(`00${remainSec}` ).slice( -3 )}秒`;\n\t\tif (remainMSec <= 0){\n\t\t\t// ゲーム終了後にplayEndFlagを1に更新する。\n\t\t\tplayEndFlag = \"1\";\n\t\t\t// プレイ時間のカウントダウンを止める。\n\t\t\tclearInterval(timerId);\n\t\t\t// 残り時間の表示を消す。\n\t\t\tremainSecLabel = \"\";\n\t\t\t// 現在のスコア（左上）の表示を消す。\n\t\t\tdisplayScore.textContent =\"\";\n\t\t\t// 問題の英単語の表示を消す。\n\t\t\tdisplayWordEnglish.textContent =\"\";\n\t\t\t// 解答の日本語の表示を消す。\n\t\t\tdisplayWord.textContent =\"\";\n\t\t\t// 解答の日本語訳の漢字の表示を消す。\n\t\t\tdisplayWordKanji.textContent =\"\";\n\t\t\t// 答えを見るボタンを消す。（プレイモード普通、正確重視の時のみ）\n\t\t\tif (playMode == \"普通\" || playMode == \"正確重視\") {\n\t\t\t\tanswerButton.className = \"transparent\";\n\t\t\t};\n\t\t\t// 正解時に表示される○の画像を消す。\n\t\t\tcircleImg.className = \"transparent\";\n\n\t\t\t// ゲーム終了後に終了を知らせるポップアップを作成する。\n\t\t\t// ゲーム終了を知らせるポップアップを定義する。\n\t\t\tconst closePopup = document.getElementById(\"closePopup\");\n\t\t\tclosePopup.textContent =\"終了\";\n\t\t\tclosePopup.className = \"closePopup\";\n\t\t\t// もう一度ボタンを定義する。\n\t\t\tconst restartBtn = document.getElementById(\"restartBtn\");\n\t\t\t// 戻るボタンを定義する。\n\t\t\tconst backBtn = document.getElementById(\"backBtn\");\n\t\t\t// 2秒後に得点を表示させる。また、もう一度ボタンと戻るボタンを表示させる。\n\t\t\tsetTimeout(function(){\n\t\t\t// 得点の表示\n\t\t\tclosePopup.textContent = `あなたの得点は${totalScore.toLocaleString()}点です!`;\n\t\t\tclosePopup.className = \"endResultPopup\";\n\t\t\t// もう一度ボタンの表示（transparentを消して表示させる）\n\t\t\trestartBtn.classList.remove('transparent');\n\t\t\t// 戻るボタンの表示（transparentを消して表示させる）\n\t\t\tbackBtn.classList.remove('transparent');\n\t\t\t},2000);\n\t\t}\n\t\t// 残りプレイ可能時間を更新する。\n\t\tremainPlayingTime.textContent = remainSecLabel;\n    };\n\n    // スコアをアップし、現在のtotalScoreを表示する処理を定義する。\n    function countUpScore(){\n      if (displayWord.textContent.length < refTextLengthForCountUpLevel1){\n        addPoint = addScoreLevel1;\n      } else {\n        addPoint = addScoreLevel2;\n      }\n      totalScore = totalScore + addPoint;\n      displayScore.textContent = `${totalScore.toLocaleString()} P`;\n      return totalScore;\n    }\n\n\n    // タイピングの正誤判定に使用する変数を定義する。\n    let wordLetterWithSmallLetter = \"\";\n    let wordLetterSole = \"\";\n\n    let charArrayInDisplayWordAlphaFirst = [];\n    let charArrayInDisplayWordAlphaSecond = [];\n    let charArrayInDisplayWordAlphaThird = [];\n    let charArrayInDisplayWordAlphaSole = [];\n    let charArrayInDisplayWordAlphaSoleSecond = [];\n    let charArrayInDisplayWordAlphaSoleThird = [];\n\n    let shiftAlreadyStartedCountAll = 0;\n    let shiftAlreadyStartedCountFirst = 0;\n    let shiftAlreadyStartedCountSecond = 0;\n    let shiftAlreadyStartedCountThird = 0;\n    let shiftAlreadyStartedCountSoleFirst = 0;\n    let shiftAlreadyStartedCountSoleSecond = 0;\n    let shiftAlreadyStartedCountSoleThird = 0;\n\n    let keyTempForSmallTsuPreWithNext = \"\";\n    let keyTempForSmallTsuPreFirst = \"\";\n    let keyTempForSmallTsuPreSecond = \"\";\n    let keyTempForSmallTsuPreThird = \"\";\n    let keyTempForNnPre = \"\";\n\n    // タイプした文字が表示文字と一致する場合の処理を定義する。\n    function keyDownCharCountUp(keyDownChar){\n      if(playEndFlag === \"0\"){\n      // 文字によって、文字列の最後にあるかどうかで入力形式が変わるため、\"っ\"\"ん\"は個別に処理を定義する。\n      // 先頭文字が小さい\"っ\"の場合\n      if (charArrayInDisplayWordJap[0].textContent === \"っ\") {\n          if (keyDownChar.key !== \"a\"\n          && keyDownChar.key !== \"i\"\n          && keyDownChar.key !== \"e\"\n          && keyDownChar.key !== \"o\"\n          && keyDownChar.key !== \"n\") {\n              // \"っ\"が最後の文字ではない場合、同じキーを２回連続でタイプしてOKとする。\n              if (charArrayInDisplayWordJap[1] != null){\n                  // 入力対象文字に対して、入力処理が開始していない場合\n                  if (shiftAlreadyStartedCountAll === 0 && keyDownChar.key !== \"u\") {\n                    keyTempForSmallTsuPreWithNext = keyDownChar.key;\n                    shiftAlreadyStartedCountAll = 1;\n                    correctTyping();\n                  } else {\n                      // 同じアルファベットを入力した場合、\"っ\"を入力完了にし、再度keyDownCharCountUpを実施する。\n                      if(keyDownChar.key === keyTempForSmallTsuPreWithNext && keyDownChar.key !== \"u\"){\n                        keyTempForSmallTsuPreWithNext = \"\";\n                        keyTempForSmallTsuPreFirst = \"\";\n                        keyTempForSmallTsuPreSecond = \"\";\n                        keyTempForSmallTsuPreThird = \"\";\n                        charArrayInDisplayWordJap[0].className = \"add_red\";\n                        charArrayInDisplayWordJap.shift();\n                        shiftAlreadyStartedCountAll = 0;\n                        correctTyping();\n                        keyDownCharCountUp(keyDownChar);\n                      // 異なる場合は前回入力アルファベットに入力したアルファベットを上書き\n                      } else {\n                          if (keyDownChar.key === \"t\" && (keyTempForSmallTsuPreFirst === \"l\" || keyTempForSmallTsuPreFirst === \"x\")){\n                          } else if ((keyDownChar.key === \"u\" || keyDownChar.key === \"s\") && keyTempForSmallTsuPreSecond === \"t\"\n                                  && (keyTempForSmallTsuPreFirst === \"l\" || keyTempForSmallTsuPreFirst === \"x\")){\n                          } else {\n                            bonusCountReset();\n                          };\n                          if (keyDownChar.key !== \"u\"){\n                          keyTempForSmallTsuPreWithNext = keyDownChar.key;\n                          };\n                      };\n                  };\n              };\n\n              // 先頭文字が小さい\"っ\"の場合(上記の2連続同一キータイプにより\"っ\"の入力処理が完了した場合に、下記処理が開始するのを防ぐために条件分岐を設定)\n              if (charArrayInDisplayWordJap[0].textContent === \"っ\") {\n              // \"っ\"の単独入力を可能にする。\n                  if(keyDownChar.key === \"l\" || keyDownChar.key === \"x\"){\n                      keyTempForSmallTsuPreFirst = keyDownChar.key;\n                      if (keyTempForSmallTsuPreWithNext !== \"l\"\n                      && keyTempForSmallTsuPreWithNext !== \"x\"){\n                      correctTyping();\n                      };\n                  };\n                  if ((keyTempForSmallTsuPreFirst === \"l\" || keyTempForSmallTsuPreFirst === \"x\")\n                      && keyDownChar.key === \"t\") {\n                      keyTempForSmallTsuPreSecond = keyDownChar.key;\n                      correctTyping();\n                  };\n                  if ((keyTempForSmallTsuPreFirst === \"l\" || keyTempForSmallTsuPreFirst === \"x\")\n                  && keyTempForSmallTsuPreSecond === \"t\" && keyDownChar.key === \"s\") {\n                      keyTempForSmallTsuPreThird = keyDownChar.key;\n                      correctTyping();\n                  };\n                  if ((keyTempForSmallTsuPreFirst === \"l\" || keyTempForSmallTsuPreFirst === \"x\")\n                  && keyTempForSmallTsuPreSecond === \"t\" && keyDownChar.key === \"u\") {\n                      keyTempForSmallTsuPreWithNext = \"\";\n                      keyTempForSmallTsuPreFirst = \"\";\n                      keyTempForSmallTsuPreSecond = \"\";\n                      keyTempForSmallTsuPreThird = \"\";\n                      charArrayInDisplayWordJap[0].className = \"add_red\";\n                      charArrayInDisplayWordJap.shift();\n                      shiftAlreadyStartedCountAll = 0;\n                      correctTyping();\n                  };\n              };\n          } else {\n            // \"a\"\"i\"\"e\"\"o\"\"n\"が入力された時点でNGとする。\n            bonusCountReset();\n          };\n\n      // 先頭文字が\"ん\"の場合、かつ次の文字あり、その文字が母音でない場合は \"n\"+\"n以外の子音\"でもOKとする。\n      // それ以外の場合は、マッピング表の通り\"nn\"\"xn\"でしか入力できない。\n      } else if (charArrayInDisplayWordJap[0].textContent === \"ん\"){\n                  if (shiftAlreadyStartedCountAll === 0){\n                    if (keyDownChar.key === \"n\" || keyDownChar.key === \"x\"){\n                        keyTempForNnPre = keyDownChar.key;\n                        shiftAlreadyStartedCountAll = 1;\n                        correctTyping();\n                    } else {\n                      bonusCountReset();\n                    };\n                  } else {\n                      if (keyTempForNnPre === \"n\"){\n                        if(charArrayInDisplayWordJap[1] != null){\n                          if (charArrayInDisplayWordJap[1].textContent !== \"あ\"\n                          && charArrayInDisplayWordJap[1].textContent !== \"い\"\n                          && charArrayInDisplayWordJap[1].textContent !== \"う\"\n                          && charArrayInDisplayWordJap[1].textContent !== \"え\"\n                          && charArrayInDisplayWordJap[1].textContent !== \"お\"){\n                              if(keyDownChar.key !== \"a\"\n                              && keyDownChar.key !== \"i\"\n                              && keyDownChar.key !== \"u\"\n                              && keyDownChar.key !== \"e\"\n                              && keyDownChar.key !== \"o\"){\n                                keyTempForNnPre = \"\";\n                                charArrayInDisplayWordJap[0].className = \"add_red\";\n                                charArrayInDisplayWordJap.shift();\n                                shiftAlreadyStartedCountAll = 0;\n                                correctTyping();\n                                if(keyDownChar.key !== \"n\"){\n                                keyDownCharCountUp(keyDownChar);\n                                };\n                              } else {\n                                  bonusCountReset();\n                              };\n                          };\n                        } else {\n                          if (keyDownChar.key === \"n\"){\n                            keyTempForNnPre = \"\";\n                            charArrayInDisplayWordJap[0].className = \"add_red\";\n                            charArrayInDisplayWordJap.shift();\n                            shiftAlreadyStartedCountAll = 0;\n                            correctTyping();\n                          } else {\n                              bonusCountReset();\n                          };\n                        };\n                    } else if (keyTempForNnPre === \"x\"){\n                        if(keyDownChar.key === \"n\"){\n                          keyTempForNnPre = \"\";\n                          charArrayInDisplayWordJap[0].className = \"add_red\";\n                          charArrayInDisplayWordJap.shift();\n                          shiftAlreadyStartedCountAll = 0;\n                          correctTyping();\n                        } else {\n                          bonusCountReset();\n                        };\n                    };\n                };\n        // \"っ\"\"ん\"以外の文字の場合\n        } else {\n            // 入力対象文字をアルファベットに分解する。\n                // 入力対象文字に対して、入力処理が開始していない場合\n                if (shiftAlreadyStartedCountAll === 0 ){\n                  // 2文字目が存在する場合(最後の文字でない場合)\n                  if(charArrayInDisplayWordJap[1] != null){\n                    // 2文字を一緒に入力するパターンに対応する処理を定義する。\n                    wordLetterWithSmallLetter = charArrayInDisplayWordJap[0].textContent + charArrayInDisplayWordJap[1].textContent;\n                  // 文字をローマ字に変換し、アルファベットごとに分ける。\n                  // 2文字に対して、ローマ字変換パターン１をsplitする。\n                  if (romaMappingTableFirst[wordLetterWithSmallLetter] != null){\n                  charArrayInDisplayWordAlphaFirst = romaMappingTableFirst[wordLetterWithSmallLetter].split(\"\").map(function(value){\n                    let spanValue = document.createElement(\"span\");\n                    spanValue.textContent = value;\n                    return spanValue;\n                  })};\n                  // 2文字に対してローマ字変換パターン２が存在する場合はsplitする。\n                  if (romaMappingTableSecond[wordLetterWithSmallLetter] != null){\n                    charArrayInDisplayWordAlphaSecond = romaMappingTableSecond[wordLetterWithSmallLetter].split(\"\").map(function(value){\n                    let spanValue = document.createElement(\"span\");\n                    spanValue.textContent = value;\n                    return spanValue;\n                    });\n                  };\n                  // 2文字に対してローマ字変換パターン３が存在する場合はsplitする。\n                  if (romaMappingTableThird[wordLetterWithSmallLetter] != null){\n                    charArrayInDisplayWordAlphaThird = romaMappingTableThird[wordLetterWithSmallLetter].split(\"\").map(function(value){\n                    let spanValue = document.createElement(\"span\");\n                    spanValue.textContent = value;\n                    return spanValue;\n                    });\n                  };\n                };\n\n                  // 1文字のみを先に入力するパターンに対応する処理を定義する。\n                  wordLetterSole = charArrayInDisplayWordJap[0].textContent;\n                  // 1文字目のみ対して、ローマ字変換パターン１をsplitする。\n                  // 母音の場合はsplit不可のため処理を分ける。\n                  if (wordLetterSole !== \"あ\"\n                      && wordLetterSole !== \"い\"\n                      && wordLetterSole !== \"う\"\n                      && wordLetterSole !== \"え\"\n                      && wordLetterSole !== \"お\"){\n                  charArrayInDisplayWordAlphaSole = romaMappingTableFirst[wordLetterSole].split(\"\").map(function(value){\n                    let spanValue = document.createElement(\"span\");\n                    spanValue.textContent = value;\n                    return spanValue;\n                  })} else {\n                      let spanValue = document.createElement(\"span\");\n                      spanValue.textContent = romaMappingTableFirst[wordLetterSole];\n                      charArrayInDisplayWordAlphaSole = [spanValue];\n                  };\n\n                  // 1文字目のみ対してローマ字変換パターン２が存在する場合はsplitする。\n                  if (romaMappingTableSecond[wordLetterSole] != null){\n                    charArrayInDisplayWordAlphaSoleSecond = romaMappingTableSecond[wordLetterSole].split(\"\").map(function(value){\n                    let spanValue = document.createElement(\"span\");\n                    spanValue.textContent = value;\n                    return spanValue;\n                    });\n                  };\n                  // 1文字目のみ対してローマ字変換パターン３が存在する場合はsplitする。\n                  if (romaMappingTableThird[wordLetterSole] != null){\n                    charArrayInDisplayWordAlphaSoleThird = romaMappingTableThird[wordLetterSole].split(\"\").map(function(value){\n                    let spanValue = document.createElement(\"span\");\n                    spanValue.textContent = value;\n                    return spanValue;\n                    });\n                  };\n                };\n\n        // 文字入力によるアルファベットに対する処理を開始する。\n            // 文字の入力開始前である場合\n              if (shiftAlreadyStartedCountAll === 0){\n                // 2文字目が存在する場合(最後の文字でない場合)\n                if(charArrayInDisplayWordJap[1] != null){\n                // 2文字に対してタイプキーがローマ字変換パターン１に該当する場合\n                if (romaMappingTableFirst[wordLetterWithSmallLetter] != null){\n                if(keyDownChar.key === charArrayInDisplayWordAlphaFirst[0].textContent) {\n                  charArrayInDisplayWordAlphaFirst.shift();\n                  shiftAlreadyStartedCountAll = 1;\n                  shiftAlreadyStartedCountFirst = 1;\n                  if(charArrayInDisplayWordAlphaFirst.length === 0){\n                    charArrayInDisplayWordJap[0].className = \"add_red\";\n                    charArrayInDisplayWordJap[1].className = \"add_red\";\n                    charArrayInDisplayWordJap.shift();\n                    charArrayInDisplayWordJap.shift();\n                    shiftAlreadyStartedCountAll = 0;\n                }}};\n                // 2文字に対してタイプキーがローマ字変換パターン２に該当する場合\n                if (romaMappingTableSecond[wordLetterWithSmallLetter] != null){\n                    if(keyDownChar.key === charArrayInDisplayWordAlphaSecond[0].textContent){\n                      charArrayInDisplayWordAlphaSecond.shift();\n                      shiftAlreadyStartedCountAll = 1;\n                      shiftAlreadyStartedCountSecond = 1;\n                      if(charArrayInDisplayWordAlphaSecond.length === 0){\n                        charArrayInDisplayWordJap[0].className = \"add_red\";\n                        charArrayInDisplayWordJap[1].className = \"add_red\";\n                        charArrayInDisplayWordJap.shift();\n                        charArrayInDisplayWordJap.shift();\n                        shiftAlreadyStartedCountAll = 0;\n                }}};\n                // 2文字に対してタイプキーがローマ字変換パターン３に該当する場合\n                if (romaMappingTableThird[wordLetterWithSmallLetter] != null){\n                    if(keyDownChar.key === charArrayInDisplayWordAlphaThird[0].textContent){\n                      charArrayInDisplayWordAlphaThird.shift();\n                      shiftAlreadyStartedCountAll = 1;\n                      shiftAlreadyStartedCountThird = 1;\n                      if(charArrayInDisplayWordAlphaThird.length === 0){\n                        charArrayInDisplayWordJap[0].className = \"add_red\";\n                        charArrayInDisplayWordJap[1].className = \"add_red\";\n                        charArrayInDisplayWordJap.shift();\n                        charArrayInDisplayWordJap.shift();\n                        shiftAlreadyStartedCountAll = 0;\n                }}}};\n\n                // 1文字目のみに対してタイプキーがローマ字変換パターン１に該当する場合\n                if(keyDownChar.key === charArrayInDisplayWordAlphaSole[0].textContent) {\n                    charArrayInDisplayWordAlphaSole.shift();\n                    shiftAlreadyStartedCountAll = 1;\n                    shiftAlreadyStartedCountSoleFirst = 1;\n                  if(charArrayInDisplayWordAlphaSole.length === 0){\n                    charArrayInDisplayWordJap[0].className = \"add_red\";\n                    charArrayInDisplayWordJap.shift();\n                    shiftAlreadyStartedCountAll = 0;\n                  }};\n                // 1文字目のみに対してタイプキーがローマ字変換パターン２に該当する場合\n                if (romaMappingTableSecond[wordLetterSole] != null){\n                    if(keyDownChar.key === charArrayInDisplayWordAlphaSoleSecond[0].textContent\n                      && charArrayInDisplayWordAlphaSole.length !== 0){\n                      charArrayInDisplayWordAlphaSoleSecond.shift();\n                      shiftAlreadyStartedCountAll = 1;\n                      shiftAlreadyStartedCountSoleSecond = 1;\n                      if(charArrayInDisplayWordAlphaSoleSecond.length === 0){\n                        charArrayInDisplayWordJap[0].className = \"add_red\";\n                        charArrayInDisplayWordJap.shift();\n                        shiftAlreadyStartedCountAll = 0;\n                    }}};\n                // 1文字目のみに対してタイプキーがローマ字変換パターン３に該当する場合\n                if (romaMappingTableThird[wordLetterSole] != null){\n                    if(keyDownChar.key === charArrayInDisplayWordAlphaSoleThird[0].textContent\n                      && charArrayInDisplayWordAlphaSole.length !== 0\n                      && charArrayInDisplayWordAlphaSoleSecond.length !== 0){\n                      charArrayInDisplayWordAlphaSoleThird.shift();\n                      shiftAlreadyStartedCountAll = 1;\n                      shiftAlreadyStartedCountSoleThird = 1;\n                      if(charArrayInDisplayWordAlphaSoleThird.length === 0){\n                        charArrayInDisplayWordJap[0].className = \"add_red\";\n                        charArrayInDisplayWordJap.shift();\n                        shiftAlreadyStartedCountAll = 0;\n                      }}};\n\n                // タイプキーがローマ字変換パターン１〜３のいずれかに該当する場合\n                if (shiftAlreadyStartedCountFirst === 1\n                    || shiftAlreadyStartedCountSecond === 1\n                    || shiftAlreadyStartedCountThird === 1\n                    || shiftAlreadyStartedCountSoleFirst === 1\n                    || shiftAlreadyStartedCountSoleSecond === 1\n                    || shiftAlreadyStartedCountSoleThird === 1) {\n                  correctTyping();\n                } else {\n                  bonusCountReset();\n                };\n\n                // 文字入力が完了している場合、カウントを0にする。\n                if (shiftAlreadyStartedCountAll === 0){\n                  shiftAlreadyStartedCountFirst = 0;\n                  shiftAlreadyStartedCountSecond = 0;\n                  shiftAlreadyStartedCountThird = 0;\n                  shiftAlreadyStartedCountSoleFirst = 0;\n                  shiftAlreadyStartedCountSoleSecond = 0;\n                  shiftAlreadyStartedCountSoleThird = 0;\n                };\n\n\n      // すでに1つのアルファベットを入力済みの場合\n      } else if (shiftAlreadyStartedCountAll === 1){\n        // 2文字目が存在する場合(最後の文字でない場合)\n        if(charArrayInDisplayWordJap[1] != null){\n              // 2文字に対してタイプキーがローマ字変換パターン１に該当する場合\n              if(shiftAlreadyStartedCountFirst === 1){\n              if(keyDownChar.key === charArrayInDisplayWordAlphaFirst[0].textContent) {\n                charArrayInDisplayWordAlphaFirst.shift();\n                shiftAlreadyStartedCountAll = 2;\n                shiftAlreadyStartedCountFirst = 2;\n                if(charArrayInDisplayWordAlphaFirst.length === 0){\n                  charArrayInDisplayWordJap[0].className = \"add_red\";\n                  charArrayInDisplayWordJap[1].className = \"add_red\";\n                  charArrayInDisplayWordJap.shift();\n                  charArrayInDisplayWordJap.shift();\n                  shiftAlreadyStartedCountAll = 0;\n              }}};\n              // 2文字に対してタイプキーがローマ字変換パターン２に該当する場合\n              if (romaMappingTableSecond[wordLetterWithSmallLetter] != null){\n                if(shiftAlreadyStartedCountSecond === 1){\n                  if(keyDownChar.key === charArrayInDisplayWordAlphaSecond[0].textContent){\n                    charArrayInDisplayWordAlphaSecond.shift();\n                    shiftAlreadyStartedCountAll = 2;\n                    shiftAlreadyStartedCountSecond = 2;\n                    if(charArrayInDisplayWordAlphaSecond.length === 0){\n                      charArrayInDisplayWordJap[0].className = \"add_red\";\n                      charArrayInDisplayWordJap[1].className = \"add_red\";\n                      charArrayInDisplayWordJap.shift();\n                      charArrayInDisplayWordJap.shift();\n                      shiftAlreadyStartedCountAll = 0;\n              }}}};\n              // 2文字に対してタイプキーがローマ字変換パターン３に該当する場合\n              if (romaMappingTableThird[wordLetterWithSmallLetter] != null){\n                if(shiftAlreadyStartedCountThird === 1){\n                  if(keyDownChar.key === charArrayInDisplayWordAlphaThird[0].textContent){\n                    charArrayInDisplayWordAlphaThird.shift();\n                    shiftAlreadyStartedCountAll = 2;\n                    shiftAlreadyStartedCountThird = 2;\n                    if(charArrayInDisplayWordAlphaThird.length === 0){\n                      charArrayInDisplayWordJap[0].className = \"add_red\";\n                      charArrayInDisplayWordJap[1].className = \"add_red\";\n                      charArrayInDisplayWordJap.shift();\n                      charArrayInDisplayWordJap.shift();\n                      shiftAlreadyStartedCountAll = 0;\n              }}}}};\n\n              // 1文字目のみに対してタイプキーがローマ字変換パターン１に該当する場合\n              if(shiftAlreadyStartedCountSoleFirst === 1){\n              if(keyDownChar.key === charArrayInDisplayWordAlphaSole[0].textContent) {\n                  charArrayInDisplayWordAlphaSole.shift();\n                  shiftAlreadyStartedCountAll = 2;\n                  shiftAlreadyStartedCountSoleFirst = 2;\n                if(charArrayInDisplayWordAlphaSole.length === 0){\n                  charArrayInDisplayWordJap[0].className = \"add_red\";\n                  charArrayInDisplayWordJap.shift();\n                  shiftAlreadyStartedCountAll = 0;\n                }}};\n              // 1文字目のみに対してタイプキーがローマ字変換パターン２に該当する場合\n              if (romaMappingTableSecond[wordLetterSole] != null){\n                if(shiftAlreadyStartedCountSoleSecond === 1){\n                  if(keyDownChar.key === charArrayInDisplayWordAlphaSoleSecond[0].textContent){\n                    charArrayInDisplayWordAlphaSoleSecond.shift();\n                    shiftAlreadyStartedCountAll = 2;\n                    shiftAlreadyStartedCountSoleSecond = 2;\n                    if(charArrayInDisplayWordAlphaSoleSecond.length === 0){\n                      charArrayInDisplayWordJap[0].className = \"add_red\";\n                      charArrayInDisplayWordJap.shift();\n                      shiftAlreadyStartedCountAll = 0;\n                  }}}};\n              // 1文字目のみに対してタイプキーがローマ字変換パターン３に該当する場合\n              if (romaMappingTableThird[wordLetterSole] != null){\n                if(shiftAlreadyStartedCountSoleThird === 1){\n                  if(keyDownChar.key === charArrayInDisplayWordAlphaSoleThird[0].textContent){\n                    charArrayInDisplayWordAlphaSoleThird.shift();\n                    shiftAlreadyStartedCountAll = 2;\n                    shiftAlreadyStartedCountSoleThird = 2;\n                    if(charArrayInDisplayWordAlphaSoleThird.length === 0){\n                      charArrayInDisplayWordJap[0].className = \"add_red\";\n                      charArrayInDisplayWordJap.shift();\n                      shiftAlreadyStartedCountAll = 0;\n                    }}}};\n\n\n\n              // タイプキーがローマ字変換パターン１〜３のいずれかに該当する場合\n              if (shiftAlreadyStartedCountFirst === 2\n                || shiftAlreadyStartedCountSecond === 2\n                || shiftAlreadyStartedCountThird === 2\n                || shiftAlreadyStartedCountSoleFirst === 2\n                || shiftAlreadyStartedCountSoleSecond === 2\n                || shiftAlreadyStartedCountSoleThird === 2) {\n                correctTyping();\n              } else {\n                bonusCountReset();\n              };\n\n                // 文字入力が完了している場合、カウントを0にする。\n                if (shiftAlreadyStartedCountAll === 0){\n                  shiftAlreadyStartedCountFirst = 0;\n                  shiftAlreadyStartedCountSecond = 0;\n                  shiftAlreadyStartedCountThird = 0;\n                  shiftAlreadyStartedCountSoleFirst = 0;\n                  shiftAlreadyStartedCountSoleSecond = 0;\n                  shiftAlreadyStartedCountSoleThird = 0;\n                };\n\n\n        // すでに2つのアルファベットを入力済みの場合\n        } else if (shiftAlreadyStartedCountAll === 2){\n          // 2文字目が存在する場合(最後の文字でない場合)\n          if(charArrayInDisplayWordJap[1] != null){\n              // 2文字に対してタイプキーがローマ字変換パターン１に該当する場合\n              if(shiftAlreadyStartedCountFirst === 2){\n              if(keyDownChar.key === charArrayInDisplayWordAlphaFirst[0].textContent) {\n                charArrayInDisplayWordAlphaFirst.shift();\n                shiftAlreadyStartedCountAll = 3;\n                shiftAlreadyStartedCountFirst = 3;\n                if(charArrayInDisplayWordAlphaFirst.length === 0){\n                  charArrayInDisplayWordJap[0].className = \"add_red\";\n                  charArrayInDisplayWordJap[1].className = \"add_red\";\n                  charArrayInDisplayWordJap.shift();\n                  charArrayInDisplayWordJap.shift();\n                  shiftAlreadyStartedCountAll = 0;\n              }}};\n              // 2文字に対してタイプキーがローマ字変換パターン２に該当する場合\n              if (romaMappingTableSecond[wordLetterWithSmallLetter] != null){\n                if(shiftAlreadyStartedCountSecond === 2){\n                  if(keyDownChar.key === charArrayInDisplayWordAlphaSecond[0].textContent){\n                    charArrayInDisplayWordAlphaSecond.shift();\n                    shiftAlreadyStartedCountAll = 3;\n                    shiftAlreadyStartedCountSecond = 3;\n                    if(charArrayInDisplayWordAlphaSecond.length === 0){\n                      charArrayInDisplayWordJap[0].className = \"add_red\";\n                      charArrayInDisplayWordJap[1].className = \"add_red\";\n                      charArrayInDisplayWordJap.shift();\n                      charArrayInDisplayWordJap.shift();\n                      shiftAlreadyStartedCountAll = 0;\n              }}}};\n              // 2文字に対してタイプキーがローマ字変換パターン３に該当する場合\n              if (romaMappingTableThird[wordLetterWithSmallLetter] != null){\n                if(shiftAlreadyStartedCountThird === 2){\n                  if(keyDownChar.key === charArrayInDisplayWordAlphaThird[0].textContent){\n                    charArrayInDisplayWordAlphaThird.shift();\n                    shiftAlreadyStartedCountAll = 3;\n                    shiftAlreadyStartedCountThird = 3;\n                    if(charArrayInDisplayWordAlphaThird.length === 0){\n                      charArrayInDisplayWordJap[0].className = \"add_red\";\n                      charArrayInDisplayWordJap[1].className = \"add_red\";\n                      charArrayInDisplayWordJap.shift();\n                      charArrayInDisplayWordJap.shift();\n                      shiftAlreadyStartedCountAll = 0;\n              }}}}};\n\n              // 1文字目のみに対してタイプキーがローマ字変換パターン１に該当する場合\n              if(shiftAlreadyStartedCountSoleFirst === 2){\n              if(keyDownChar.key === charArrayInDisplayWordAlphaSole[0].textContent) {\n                  charArrayInDisplayWordAlphaSole.shift();\n                  shiftAlreadyStartedCountAll = 3;\n                  shiftAlreadyStartedCountSoleFirst = 3;\n                if(charArrayInDisplayWordAlphaSole.length === 0){\n                  charArrayInDisplayWordJap[0].className = \"add_red\";\n                  charArrayInDisplayWordJap.shift();\n                  shiftAlreadyStartedCountAll = 0;\n                }}};\n              // 1文字目のみに対してタイプキーがローマ字変換パターン２に該当する場合\n              if (romaMappingTableSecond[wordLetterSole] != null){\n                if(shiftAlreadyStartedCountSoleSecond === 2){\n                  if(keyDownChar.key === charArrayInDisplayWordAlphaSoleSecond[0].textContent){\n                    charArrayInDisplayWordAlphaSoleSecond.shift();\n                    shiftAlreadyStartedCountAll = 3;\n                    shiftAlreadyStartedCountSoleSecond = 3;\n                    if(charArrayInDisplayWordAlphaSoleSecond.length === 0){\n                      charArrayInDisplayWordJap[0].className = \"add_red\";\n                      charArrayInDisplayWordJap.shift();\n                      shiftAlreadyStartedCountAll = 0;\n                  }}}};\n              // 1文字目のみに対してタイプキーがローマ字変換パターン３に該当する場合\n              if (romaMappingTableThird[wordLetterSole] != null){\n                if(shiftAlreadyStartedCountSoleThird === 2){\n                  if(keyDownChar.key === charArrayInDisplayWordAlphaSoleThird[0].textContent){\n                    charArrayInDisplayWordAlphaSoleThird.shift();\n                    shiftAlreadyStartedCountAll = 3;\n                    shiftAlreadyStartedCountSoleThird = 3;\n                    if(charArrayInDisplayWordAlphaSoleThird.length === 0){\n                      charArrayInDisplayWordJap[0].className = \"add_red\";\n                      charArrayInDisplayWordJap.shift();\n                      shiftAlreadyStartedCountAll = 0;\n                    }}}};\n\n            // タイプキーがローマ字変換パターン１〜３のいずれかに該当する場合\n            if (shiftAlreadyStartedCountFirst === 3\n              || shiftAlreadyStartedCountSecond === 3\n              || shiftAlreadyStartedCountThird === 3\n              || shiftAlreadyStartedCountSoleFirst === 3\n              || shiftAlreadyStartedCountSoleSecond === 3\n              || shiftAlreadyStartedCountSoleThird === 3) {\n              correctTyping();\n            } else {\n              bonusCountReset();\n            };\n\n              // 文字入力が完了している場合、カウントを0にする。\n              if (shiftAlreadyStartedCountAll === 0){\n                shiftAlreadyStartedCountFirst = 0;\n                shiftAlreadyStartedCountSecond = 0;\n                shiftAlreadyStartedCountThird = 0;\n                shiftAlreadyStartedCountSoleFirst = 0;\n                shiftAlreadyStartedCountSoleSecond = 0;\n                shiftAlreadyStartedCountSoleThird = 0;\n              };\n            }\n          }\n        }\n      };\n\n\t// タイプした文字が解答文字と一致する場合の共通処理を定義する。\n    function correctTyping(){\n      // メーターを更新する。\n      bonusCountMeter = bonusCountMeter +1;\n      // メーターがメーター最大値以上になった場合、メーターを初期化し、プレイ可能時間を延長する。\n      if(bonusCountMeter >= bonusCountMeterMax){\n        bonusCountMeter = 0;\n        // 初期プレイ時間を更新することで、残りプレイ可能時間を延長する。\n        initialPlayingTimeMSec = initialPlayingTimeMSec +bonusAddPlayTime;\n        // 延長した残りプレイ時間を表示する。\n        displayBonusAddPlayTime.textContent = \"+ \" + Math.ceil(bonusAddPlayTime/1000) + \"秒\";\n        // 延長した残りプレイ時間をフェードアウトする。\n        displayBonusAddPlayTime.classList.add('fadeout');\n        // fadeoutのclassを取り除くことで、2回目以降も延長した残りプレイ時間が表示されるようにする。\n        setTimeout(function(){\n          displayBonusAddPlayTime.textContent = \"\";\n          displayBonusAddPlayTime.classList.remove('fadeout');\n        }, 2000);\n      };\n      // 更新したメーターを表示する。\n      document.getElementById(\"meterImg\").src=imgArray[bonusCountMeter];\n      // 表示文字全てタイプした場合、スコアアップ処理を実施し、次の表示文字を作成する処理を実施する。\n      if(charArrayInDisplayWordJap.length === 0) {\n        countUpScore();\n        circleImg.classList.add('circle');\n        circleImg.classList.remove('transparent');\n\t\tdisplayWordKanji.classList.add('add_gray');\n\t\tdisplayWordKanji.classList.add('displayWordKanji');\n\t\tdisplayWordKanji.classList.remove('transparent');\n        setTimeout(createDisplayWord,200);\n        setTimeout(function(){\n          circleImg.classList.add('transparent');\n          circleImg.classList.remove('circle');\n    \t}, 200);\n      };\n    };\n\n\t// タイプした文字が表示文字と不一致の場合の処理を定義する。（プレイモードが正確重視の場合のみ）\n\t// 不正解の単語の答えを表示し、次の単語を生成する処理。\n\t// メーターを0にリセットする処理。\n\t// createDisplayWord処理が200m秒に連続で生じないためにbonusCountResetにフラグを用意する。\n    function bonusCountReset(){\n\t\tif (playMode == \"正確重視\" && createDisplayWordOkFlagFromBonusCountReset == \"0\") {\n\t\t\tfor (let i = 0; i < charArrayInDisplayWordJap.length; i++) {\n\t\t\t\tcharArrayInDisplayWordJap[i].classList.add('add_gray');\n\t\t\t\tcharArrayInDisplayWordJap[i].classList.remove('transparent');\n\t\t\t}\n\t\t\tdisplayWordKanji.classList.add('add_gray');\n\t\t\tdisplayWordKanji.classList.add('displayWordKanji');\n\t\t\tdisplayWordKanji.classList.remove('transparent');\n\t\t\tcreateDisplayWordOkFlagFromBonusCountReset = \"1\";\n\t\t\tsetTimeout(createDisplayWord,200); //createDisplayWord処理実行後にcreateDisplayWordOkFlagFromBonusCountReset==0に戻す。\n\t\t\tbonusCountMeter = 0;\n\t\t\tdocument.getElementById(\"meterImg\").src=imgArray[bonusCountMeter];\n\t\t};\n    };\n\n\t// // 英単語を生成した際に、発音させる。\n\n  };\n};\n","module.exports = require(\"regenerator-runtime\");\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*\nUnobtrusive JavaScript\nhttps://github.com/rails/rails/blob/main/actionview/app/assets/javascripts\nReleased under the MIT license\n */\n;\n(function () {\n  var context = this;\n  (function () {\n    (function () {\n      this.Rails = {\n        linkClickSelector: 'a[data-confirm], a[data-method], a[data-remote]:not([disabled]), a[data-disable-with], a[data-disable]',\n        buttonClickSelector: {\n          selector: 'button[data-remote]:not([form]), button[data-confirm]:not([form])',\n          exclude: 'form button'\n        },\n        inputChangeSelector: 'select[data-remote], input[data-remote], textarea[data-remote]',\n        formSubmitSelector: 'form',\n        formInputClickSelector: 'form input[type=submit], form input[type=image], form button[type=submit], form button:not([type]), input[type=submit][form], input[type=image][form], button[type=submit][form], button[form]:not([type])',\n        formDisableSelector: 'input[data-disable-with]:enabled, button[data-disable-with]:enabled, textarea[data-disable-with]:enabled, input[data-disable]:enabled, button[data-disable]:enabled, textarea[data-disable]:enabled',\n        formEnableSelector: 'input[data-disable-with]:disabled, button[data-disable-with]:disabled, textarea[data-disable-with]:disabled, input[data-disable]:disabled, button[data-disable]:disabled, textarea[data-disable]:disabled',\n        fileInputSelector: 'input[name][type=file]:not([disabled])',\n        linkDisableSelector: 'a[data-disable-with], a[data-disable]',\n        buttonDisableSelector: 'button[data-remote][data-disable-with], button[data-remote][data-disable]'\n      };\n    }).call(this);\n  }).call(context);\n  var Rails = context.Rails;\n  (function () {\n    (function () {\n      var nonce;\n      nonce = null;\n\n      Rails.loadCSPNonce = function () {\n        var ref;\n        return nonce = (ref = document.querySelector(\"meta[name=csp-nonce]\")) != null ? ref.content : void 0;\n      };\n\n      Rails.cspNonce = function () {\n        return nonce != null ? nonce : Rails.loadCSPNonce();\n      };\n    }).call(this);\n    (function () {\n      var expando, m;\n      m = Element.prototype.matches || Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector;\n\n      Rails.matches = function (element, selector) {\n        if (selector.exclude != null) {\n          return m.call(element, selector.selector) && !m.call(element, selector.exclude);\n        } else {\n          return m.call(element, selector);\n        }\n      };\n\n      expando = '_ujsData';\n\n      Rails.getData = function (element, key) {\n        var ref;\n        return (ref = element[expando]) != null ? ref[key] : void 0;\n      };\n\n      Rails.setData = function (element, key, value) {\n        if (element[expando] == null) {\n          element[expando] = {};\n        }\n\n        return element[expando][key] = value;\n      };\n\n      Rails.$ = function (selector) {\n        return Array.prototype.slice.call(document.querySelectorAll(selector));\n      };\n    }).call(this);\n    (function () {\n      var $, csrfParam, csrfToken;\n      $ = Rails.$;\n\n      csrfToken = Rails.csrfToken = function () {\n        var meta;\n        meta = document.querySelector('meta[name=csrf-token]');\n        return meta && meta.content;\n      };\n\n      csrfParam = Rails.csrfParam = function () {\n        var meta;\n        meta = document.querySelector('meta[name=csrf-param]');\n        return meta && meta.content;\n      };\n\n      Rails.CSRFProtection = function (xhr) {\n        var token;\n        token = csrfToken();\n\n        if (token != null) {\n          return xhr.setRequestHeader('X-CSRF-Token', token);\n        }\n      };\n\n      Rails.refreshCSRFTokens = function () {\n        var param, token;\n        token = csrfToken();\n        param = csrfParam();\n\n        if (token != null && param != null) {\n          return $('form input[name=\"' + param + '\"]').forEach(function (input) {\n            return input.value = token;\n          });\n        }\n      };\n    }).call(this);\n    (function () {\n      var CustomEvent, fire, matches, preventDefault;\n      matches = Rails.matches;\n      CustomEvent = window.CustomEvent;\n\n      if (typeof CustomEvent !== 'function') {\n        CustomEvent = function CustomEvent(event, params) {\n          var evt;\n          evt = document.createEvent('CustomEvent');\n          evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n          return evt;\n        };\n\n        CustomEvent.prototype = window.Event.prototype;\n        preventDefault = CustomEvent.prototype.preventDefault;\n\n        CustomEvent.prototype.preventDefault = function () {\n          var result;\n          result = preventDefault.call(this);\n\n          if (this.cancelable && !this.defaultPrevented) {\n            Object.defineProperty(this, 'defaultPrevented', {\n              get: function get() {\n                return true;\n              }\n            });\n          }\n\n          return result;\n        };\n      }\n\n      fire = Rails.fire = function (obj, name, data) {\n        var event;\n        event = new CustomEvent(name, {\n          bubbles: true,\n          cancelable: true,\n          detail: data\n        });\n        obj.dispatchEvent(event);\n        return !event.defaultPrevented;\n      };\n\n      Rails.stopEverything = function (e) {\n        fire(e.target, 'ujs:everythingStopped');\n        e.preventDefault();\n        e.stopPropagation();\n        return e.stopImmediatePropagation();\n      };\n\n      Rails.delegate = function (element, selector, eventType, handler) {\n        return element.addEventListener(eventType, function (e) {\n          var target;\n          target = e.target;\n\n          while (!(!(target instanceof Element) || matches(target, selector))) {\n            target = target.parentNode;\n          }\n\n          if (target instanceof Element && handler.call(target, e) === false) {\n            e.preventDefault();\n            return e.stopPropagation();\n          }\n        });\n      };\n    }).call(this);\n    (function () {\n      var AcceptHeaders, CSRFProtection, createXHR, cspNonce, fire, prepareOptions, processResponse;\n      cspNonce = Rails.cspNonce, CSRFProtection = Rails.CSRFProtection, fire = Rails.fire;\n      AcceptHeaders = {\n        '*': '*/*',\n        text: 'text/plain',\n        html: 'text/html',\n        xml: 'application/xml, text/xml',\n        json: 'application/json, text/javascript',\n        script: 'text/javascript, application/javascript, application/ecmascript, application/x-ecmascript'\n      };\n\n      Rails.ajax = function (options) {\n        var xhr;\n        options = prepareOptions(options);\n        xhr = createXHR(options, function () {\n          var ref, response;\n          response = processResponse((ref = xhr.response) != null ? ref : xhr.responseText, xhr.getResponseHeader('Content-Type'));\n\n          if (Math.floor(xhr.status / 100) === 2) {\n            if (typeof options.success === \"function\") {\n              options.success(response, xhr.statusText, xhr);\n            }\n          } else {\n            if (typeof options.error === \"function\") {\n              options.error(response, xhr.statusText, xhr);\n            }\n          }\n\n          return typeof options.complete === \"function\" ? options.complete(xhr, xhr.statusText) : void 0;\n        });\n\n        if (options.beforeSend != null && !options.beforeSend(xhr, options)) {\n          return false;\n        }\n\n        if (xhr.readyState === XMLHttpRequest.OPENED) {\n          return xhr.send(options.data);\n        }\n      };\n\n      prepareOptions = function prepareOptions(options) {\n        options.url = options.url || location.href;\n        options.type = options.type.toUpperCase();\n\n        if (options.type === 'GET' && options.data) {\n          if (options.url.indexOf('?') < 0) {\n            options.url += '?' + options.data;\n          } else {\n            options.url += '&' + options.data;\n          }\n        }\n\n        if (AcceptHeaders[options.dataType] == null) {\n          options.dataType = '*';\n        }\n\n        options.accept = AcceptHeaders[options.dataType];\n\n        if (options.dataType !== '*') {\n          options.accept += ', */*; q=0.01';\n        }\n\n        return options;\n      };\n\n      createXHR = function createXHR(options, done) {\n        var xhr;\n        xhr = new XMLHttpRequest();\n        xhr.open(options.type, options.url, true);\n        xhr.setRequestHeader('Accept', options.accept);\n\n        if (typeof options.data === 'string') {\n          xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\n        }\n\n        if (!options.crossDomain) {\n          xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n          CSRFProtection(xhr);\n        }\n\n        xhr.withCredentials = !!options.withCredentials;\n\n        xhr.onreadystatechange = function () {\n          if (xhr.readyState === XMLHttpRequest.DONE) {\n            return done(xhr);\n          }\n        };\n\n        return xhr;\n      };\n\n      processResponse = function processResponse(response, type) {\n        var parser, script;\n\n        if (typeof response === 'string' && typeof type === 'string') {\n          if (type.match(/\\bjson\\b/)) {\n            try {\n              response = JSON.parse(response);\n            } catch (error) {}\n          } else if (type.match(/\\b(?:java|ecma)script\\b/)) {\n            script = document.createElement('script');\n            script.setAttribute('nonce', cspNonce());\n            script.text = response;\n            document.head.appendChild(script).parentNode.removeChild(script);\n          } else if (type.match(/\\b(xml|html|svg)\\b/)) {\n            parser = new DOMParser();\n            type = type.replace(/;.+/, '');\n\n            try {\n              response = parser.parseFromString(response, type);\n            } catch (error) {}\n          }\n        }\n\n        return response;\n      };\n\n      Rails.href = function (element) {\n        return element.href;\n      };\n\n      Rails.isCrossDomain = function (url) {\n        var e, originAnchor, urlAnchor;\n        originAnchor = document.createElement('a');\n        originAnchor.href = location.href;\n        urlAnchor = document.createElement('a');\n\n        try {\n          urlAnchor.href = url;\n          return !((!urlAnchor.protocol || urlAnchor.protocol === ':') && !urlAnchor.host || originAnchor.protocol + '//' + originAnchor.host === urlAnchor.protocol + '//' + urlAnchor.host);\n        } catch (error) {\n          e = error;\n          return true;\n        }\n      };\n    }).call(this);\n    (function () {\n      var matches, toArray;\n      matches = Rails.matches;\n\n      toArray = function toArray(e) {\n        return Array.prototype.slice.call(e);\n      };\n\n      Rails.serializeElement = function (element, additionalParam) {\n        var inputs, params;\n        inputs = [element];\n\n        if (matches(element, 'form')) {\n          inputs = toArray(element.elements);\n        }\n\n        params = [];\n        inputs.forEach(function (input) {\n          if (!input.name || input.disabled) {\n            return;\n          }\n\n          if (matches(input, 'fieldset[disabled] *')) {\n            return;\n          }\n\n          if (matches(input, 'select')) {\n            return toArray(input.options).forEach(function (option) {\n              if (option.selected) {\n                return params.push({\n                  name: input.name,\n                  value: option.value\n                });\n              }\n            });\n          } else if (input.checked || ['radio', 'checkbox', 'submit'].indexOf(input.type) === -1) {\n            return params.push({\n              name: input.name,\n              value: input.value\n            });\n          }\n        });\n\n        if (additionalParam) {\n          params.push(additionalParam);\n        }\n\n        return params.map(function (param) {\n          if (param.name != null) {\n            return encodeURIComponent(param.name) + \"=\" + encodeURIComponent(param.value);\n          } else {\n            return param;\n          }\n        }).join('&');\n      };\n\n      Rails.formElements = function (form, selector) {\n        if (matches(form, 'form')) {\n          return toArray(form.elements).filter(function (el) {\n            return matches(el, selector);\n          });\n        } else {\n          return toArray(form.querySelectorAll(selector));\n        }\n      };\n    }).call(this);\n    (function () {\n      var allowAction, fire, stopEverything;\n      fire = Rails.fire, stopEverything = Rails.stopEverything;\n\n      Rails.handleConfirm = function (e) {\n        if (!allowAction(this)) {\n          return stopEverything(e);\n        }\n      };\n\n      Rails.confirm = function (message, element) {\n        return confirm(message);\n      };\n\n      allowAction = function allowAction(element) {\n        var answer, callback, message;\n        message = element.getAttribute('data-confirm');\n\n        if (!message) {\n          return true;\n        }\n\n        answer = false;\n\n        if (fire(element, 'confirm')) {\n          try {\n            answer = Rails.confirm(message, element);\n          } catch (error) {}\n\n          callback = fire(element, 'confirm:complete', [answer]);\n        }\n\n        return answer && callback;\n      };\n    }).call(this);\n    (function () {\n      var disableFormElement, disableFormElements, disableLinkElement, enableFormElement, enableFormElements, enableLinkElement, formElements, getData, isXhrRedirect, matches, setData, stopEverything;\n      matches = Rails.matches, getData = Rails.getData, setData = Rails.setData, stopEverything = Rails.stopEverything, formElements = Rails.formElements;\n\n      Rails.handleDisabledElement = function (e) {\n        var element;\n        element = this;\n\n        if (element.disabled) {\n          return stopEverything(e);\n        }\n      };\n\n      Rails.enableElement = function (e) {\n        var element;\n\n        if (e instanceof Event) {\n          if (isXhrRedirect(e)) {\n            return;\n          }\n\n          element = e.target;\n        } else {\n          element = e;\n        }\n\n        if (matches(element, Rails.linkDisableSelector)) {\n          return enableLinkElement(element);\n        } else if (matches(element, Rails.buttonDisableSelector) || matches(element, Rails.formEnableSelector)) {\n          return enableFormElement(element);\n        } else if (matches(element, Rails.formSubmitSelector)) {\n          return enableFormElements(element);\n        }\n      };\n\n      Rails.disableElement = function (e) {\n        var element;\n        element = e instanceof Event ? e.target : e;\n\n        if (matches(element, Rails.linkDisableSelector)) {\n          return disableLinkElement(element);\n        } else if (matches(element, Rails.buttonDisableSelector) || matches(element, Rails.formDisableSelector)) {\n          return disableFormElement(element);\n        } else if (matches(element, Rails.formSubmitSelector)) {\n          return disableFormElements(element);\n        }\n      };\n\n      disableLinkElement = function disableLinkElement(element) {\n        var replacement;\n\n        if (getData(element, 'ujs:disabled')) {\n          return;\n        }\n\n        replacement = element.getAttribute('data-disable-with');\n\n        if (replacement != null) {\n          setData(element, 'ujs:enable-with', element.innerHTML);\n          element.innerHTML = replacement;\n        }\n\n        element.addEventListener('click', stopEverything);\n        return setData(element, 'ujs:disabled', true);\n      };\n\n      enableLinkElement = function enableLinkElement(element) {\n        var originalText;\n        originalText = getData(element, 'ujs:enable-with');\n\n        if (originalText != null) {\n          element.innerHTML = originalText;\n          setData(element, 'ujs:enable-with', null);\n        }\n\n        element.removeEventListener('click', stopEverything);\n        return setData(element, 'ujs:disabled', null);\n      };\n\n      disableFormElements = function disableFormElements(form) {\n        return formElements(form, Rails.formDisableSelector).forEach(disableFormElement);\n      };\n\n      disableFormElement = function disableFormElement(element) {\n        var replacement;\n\n        if (getData(element, 'ujs:disabled')) {\n          return;\n        }\n\n        replacement = element.getAttribute('data-disable-with');\n\n        if (replacement != null) {\n          if (matches(element, 'button')) {\n            setData(element, 'ujs:enable-with', element.innerHTML);\n            element.innerHTML = replacement;\n          } else {\n            setData(element, 'ujs:enable-with', element.value);\n            element.value = replacement;\n          }\n        }\n\n        element.disabled = true;\n        return setData(element, 'ujs:disabled', true);\n      };\n\n      enableFormElements = function enableFormElements(form) {\n        return formElements(form, Rails.formEnableSelector).forEach(enableFormElement);\n      };\n\n      enableFormElement = function enableFormElement(element) {\n        var originalText;\n        originalText = getData(element, 'ujs:enable-with');\n\n        if (originalText != null) {\n          if (matches(element, 'button')) {\n            element.innerHTML = originalText;\n          } else {\n            element.value = originalText;\n          }\n\n          setData(element, 'ujs:enable-with', null);\n        }\n\n        element.disabled = false;\n        return setData(element, 'ujs:disabled', null);\n      };\n\n      isXhrRedirect = function isXhrRedirect(event) {\n        var ref, xhr;\n        xhr = (ref = event.detail) != null ? ref[0] : void 0;\n        return (xhr != null ? xhr.getResponseHeader(\"X-Xhr-Redirect\") : void 0) != null;\n      };\n    }).call(this);\n    (function () {\n      var stopEverything;\n      stopEverything = Rails.stopEverything;\n\n      Rails.handleMethod = function (e) {\n        var csrfParam, csrfToken, form, formContent, href, link, method;\n        link = this;\n        method = link.getAttribute('data-method');\n\n        if (!method) {\n          return;\n        }\n\n        href = Rails.href(link);\n        csrfToken = Rails.csrfToken();\n        csrfParam = Rails.csrfParam();\n        form = document.createElement('form');\n        formContent = \"<input name='_method' value='\" + method + \"' type='hidden' />\";\n\n        if (csrfParam != null && csrfToken != null && !Rails.isCrossDomain(href)) {\n          formContent += \"<input name='\" + csrfParam + \"' value='\" + csrfToken + \"' type='hidden' />\";\n        }\n\n        formContent += '<input type=\"submit\" />';\n        form.method = 'post';\n        form.action = href;\n        form.target = link.target;\n        form.innerHTML = formContent;\n        form.style.display = 'none';\n        document.body.appendChild(form);\n        form.querySelector('[type=\"submit\"]').click();\n        return stopEverything(e);\n      };\n    }).call(this);\n    (function () {\n      var ajax,\n          fire,\n          getData,\n          isCrossDomain,\n          isRemote,\n          matches,\n          serializeElement,\n          setData,\n          stopEverything,\n          slice = [].slice;\n      matches = Rails.matches, getData = Rails.getData, setData = Rails.setData, fire = Rails.fire, stopEverything = Rails.stopEverything, ajax = Rails.ajax, isCrossDomain = Rails.isCrossDomain, serializeElement = Rails.serializeElement;\n\n      isRemote = function isRemote(element) {\n        var value;\n        value = element.getAttribute('data-remote');\n        return value != null && value !== 'false';\n      };\n\n      Rails.handleRemote = function (e) {\n        var button, data, dataType, element, method, url, withCredentials;\n        element = this;\n\n        if (!isRemote(element)) {\n          return true;\n        }\n\n        if (!fire(element, 'ajax:before')) {\n          fire(element, 'ajax:stopped');\n          return false;\n        }\n\n        withCredentials = element.getAttribute('data-with-credentials');\n        dataType = element.getAttribute('data-type') || 'script';\n\n        if (matches(element, Rails.formSubmitSelector)) {\n          button = getData(element, 'ujs:submit-button');\n          method = getData(element, 'ujs:submit-button-formmethod') || element.method;\n          url = getData(element, 'ujs:submit-button-formaction') || element.getAttribute('action') || location.href;\n\n          if (method.toUpperCase() === 'GET') {\n            url = url.replace(/\\?.*$/, '');\n          }\n\n          if (element.enctype === 'multipart/form-data') {\n            data = new FormData(element);\n\n            if (button != null) {\n              data.append(button.name, button.value);\n            }\n          } else {\n            data = serializeElement(element, button);\n          }\n\n          setData(element, 'ujs:submit-button', null);\n          setData(element, 'ujs:submit-button-formmethod', null);\n          setData(element, 'ujs:submit-button-formaction', null);\n        } else if (matches(element, Rails.buttonClickSelector) || matches(element, Rails.inputChangeSelector)) {\n          method = element.getAttribute('data-method');\n          url = element.getAttribute('data-url');\n          data = serializeElement(element, element.getAttribute('data-params'));\n        } else {\n          method = element.getAttribute('data-method');\n          url = Rails.href(element);\n          data = element.getAttribute('data-params');\n        }\n\n        ajax({\n          type: method || 'GET',\n          url: url,\n          data: data,\n          dataType: dataType,\n          beforeSend: function beforeSend(xhr, options) {\n            if (fire(element, 'ajax:beforeSend', [xhr, options])) {\n              return fire(element, 'ajax:send', [xhr]);\n            } else {\n              fire(element, 'ajax:stopped');\n              return false;\n            }\n          },\n          success: function success() {\n            var args;\n            args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n            return fire(element, 'ajax:success', args);\n          },\n          error: function error() {\n            var args;\n            args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n            return fire(element, 'ajax:error', args);\n          },\n          complete: function complete() {\n            var args;\n            args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n            return fire(element, 'ajax:complete', args);\n          },\n          crossDomain: isCrossDomain(url),\n          withCredentials: withCredentials != null && withCredentials !== 'false'\n        });\n        return stopEverything(e);\n      };\n\n      Rails.formSubmitButtonClick = function (e) {\n        var button, form;\n        button = this;\n        form = button.form;\n\n        if (!form) {\n          return;\n        }\n\n        if (button.name) {\n          setData(form, 'ujs:submit-button', {\n            name: button.name,\n            value: button.value\n          });\n        }\n\n        setData(form, 'ujs:formnovalidate-button', button.formNoValidate);\n        setData(form, 'ujs:submit-button-formaction', button.getAttribute('formaction'));\n        return setData(form, 'ujs:submit-button-formmethod', button.getAttribute('formmethod'));\n      };\n\n      Rails.preventInsignificantClick = function (e) {\n        var data, insignificantMetaClick, link, metaClick, method, nonPrimaryMouseClick;\n        link = this;\n        method = (link.getAttribute('data-method') || 'GET').toUpperCase();\n        data = link.getAttribute('data-params');\n        metaClick = e.metaKey || e.ctrlKey;\n        insignificantMetaClick = metaClick && method === 'GET' && !data;\n        nonPrimaryMouseClick = e.button != null && e.button !== 0;\n\n        if (nonPrimaryMouseClick || insignificantMetaClick) {\n          return e.stopImmediatePropagation();\n        }\n      };\n    }).call(this);\n    (function () {\n      var $, CSRFProtection, delegate, disableElement, enableElement, fire, formSubmitButtonClick, getData, handleConfirm, handleDisabledElement, handleMethod, handleRemote, loadCSPNonce, preventInsignificantClick, refreshCSRFTokens;\n      fire = Rails.fire, delegate = Rails.delegate, getData = Rails.getData, $ = Rails.$, refreshCSRFTokens = Rails.refreshCSRFTokens, CSRFProtection = Rails.CSRFProtection, loadCSPNonce = Rails.loadCSPNonce, enableElement = Rails.enableElement, disableElement = Rails.disableElement, handleDisabledElement = Rails.handleDisabledElement, handleConfirm = Rails.handleConfirm, preventInsignificantClick = Rails.preventInsignificantClick, handleRemote = Rails.handleRemote, formSubmitButtonClick = Rails.formSubmitButtonClick, handleMethod = Rails.handleMethod;\n\n      if (typeof jQuery !== \"undefined\" && jQuery !== null && jQuery.ajax != null) {\n        if (jQuery.rails) {\n          throw new Error('If you load both jquery_ujs and rails-ujs, use rails-ujs only.');\n        }\n\n        jQuery.rails = Rails;\n        jQuery.ajaxPrefilter(function (options, originalOptions, xhr) {\n          if (!options.crossDomain) {\n            return CSRFProtection(xhr);\n          }\n        });\n      }\n\n      Rails.start = function () {\n        if (window._rails_loaded) {\n          throw new Error('rails-ujs has already been loaded!');\n        }\n\n        window.addEventListener('pageshow', function () {\n          $(Rails.formEnableSelector).forEach(function (el) {\n            if (getData(el, 'ujs:disabled')) {\n              return enableElement(el);\n            }\n          });\n          return $(Rails.linkDisableSelector).forEach(function (el) {\n            if (getData(el, 'ujs:disabled')) {\n              return enableElement(el);\n            }\n          });\n        });\n        delegate(document, Rails.linkDisableSelector, 'ajax:complete', enableElement);\n        delegate(document, Rails.linkDisableSelector, 'ajax:stopped', enableElement);\n        delegate(document, Rails.buttonDisableSelector, 'ajax:complete', enableElement);\n        delegate(document, Rails.buttonDisableSelector, 'ajax:stopped', enableElement);\n        delegate(document, Rails.linkClickSelector, 'click', preventInsignificantClick);\n        delegate(document, Rails.linkClickSelector, 'click', handleDisabledElement);\n        delegate(document, Rails.linkClickSelector, 'click', handleConfirm);\n        delegate(document, Rails.linkClickSelector, 'click', disableElement);\n        delegate(document, Rails.linkClickSelector, 'click', handleRemote);\n        delegate(document, Rails.linkClickSelector, 'click', handleMethod);\n        delegate(document, Rails.buttonClickSelector, 'click', preventInsignificantClick);\n        delegate(document, Rails.buttonClickSelector, 'click', handleDisabledElement);\n        delegate(document, Rails.buttonClickSelector, 'click', handleConfirm);\n        delegate(document, Rails.buttonClickSelector, 'click', disableElement);\n        delegate(document, Rails.buttonClickSelector, 'click', handleRemote);\n        delegate(document, Rails.inputChangeSelector, 'change', handleDisabledElement);\n        delegate(document, Rails.inputChangeSelector, 'change', handleConfirm);\n        delegate(document, Rails.inputChangeSelector, 'change', handleRemote);\n        delegate(document, Rails.formSubmitSelector, 'submit', handleDisabledElement);\n        delegate(document, Rails.formSubmitSelector, 'submit', handleConfirm);\n        delegate(document, Rails.formSubmitSelector, 'submit', handleRemote);\n        delegate(document, Rails.formSubmitSelector, 'submit', function (e) {\n          return setTimeout(function () {\n            return disableElement(e);\n          }, 13);\n        });\n        delegate(document, Rails.formSubmitSelector, 'ajax:send', disableElement);\n        delegate(document, Rails.formSubmitSelector, 'ajax:complete', enableElement);\n        delegate(document, Rails.formInputClickSelector, 'click', preventInsignificantClick);\n        delegate(document, Rails.formInputClickSelector, 'click', handleDisabledElement);\n        delegate(document, Rails.formInputClickSelector, 'click', handleConfirm);\n        delegate(document, Rails.formInputClickSelector, 'click', formSubmitButtonClick);\n        document.addEventListener('DOMContentLoaded', refreshCSRFTokens);\n        document.addEventListener('DOMContentLoaded', loadCSPNonce);\n        return window._rails_loaded = true;\n      };\n\n      if (window.Rails === Rails && fire(document, 'rails:attachBindings')) {\n        Rails.start();\n      }\n    }).call(this);\n  }).call(this);\n\n  if ((typeof module === \"undefined\" ? \"undefined\" : _typeof(module)) === \"object\" && module.exports) {\n    module.exports = Rails;\n  } else if (typeof define === \"function\" && define.amd) {\n    define(Rails);\n  }\n}).call(this);","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AClFA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAukLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCA;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;AAaaA;AAAA;AAAA;AAAA;AAAA;AAEA;AAFA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAKA;AALA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAdrrlyuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}