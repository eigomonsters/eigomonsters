{"version":3,"file":"js/typingplay-ea512c5e80c96d68d088.js","sources":["webpack:///webpack/bootstrap","webpack:///./app/javascript/packs/typingplay.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/packs/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./app/javascript/packs/typingplay.js\");\n","window.addEventListener('load', function(){\n\n const wordList = [\n   \"aaa\",\n   \"bbb\",\n   \"ccc\",\n   \"ddd\",\n   \"eeeeee\",\n   \"ffffff\",\n   \"gggggg\",\n   \"hhhhhh\"\n ];\n\n// 表示単語を定義\nconst displayWord = document.getElementById(\"displayWord\");\n\nlet checkTexts =[];\n\ncreateText();\n\n\nfunction createText(){\n  // 表示単語を初期化する。\n  // displayWord.textContent = \"\";\n\n  // 0〜textListsの総数の整数値をランダムで算出する。\n  let randomIntegerInTotalWordList = Math.floor(Math.random() * wordList.length);\n  \n  checkTexts = wordList[randomIntegerInTotalWordList].split(\"\").map(function(value){\n      // 例) spanValue = <span>a</span>\n      let spanValue = document.createElement(\"span\");\n      let test = value;\n      // 例) value = a\n      // spanValue.textContent = value;\n      // \"\"のdisplayWordに<span>a</span>を追加する。\n      // displayWord.appendChild(spanValue);\n      // return spanValue;\n     });\n}\n\n\n// let time = document.getElementById(\"time\");\n\n// let playingTime = 6000;\n\n// const closePopup = document.getElementById(\"closePopup\");\n\n// let endFlag = \"0\";\n\n// const startTime = Date.now();\n// const countDown = function(){\n//   const currentTime = Date.now();\n//   const difference = currentTime - startTime;\n//   const remainMSec = playingTime - difference;\n//   const remainSec = Math.ceil(remainMSec/1000);\n//   let  label = `残り${remainSec}秒`;\n//   if (remainMSec <= 0){\n//     clearInterval(timerId);\n//     label = \"\";\n//     const totalScore = score - addPoint;\n//     point.textContent =\"\";\n//     point.className = \"transparent\";\n//     p.textContent =\"\";\n//     p.className =\"transparent\";\n\n//     endFlag = \"1\";\n\n//     closePopup.textContent =\"終了\";\n//     closePopup.className = \"closePopup\";\n//     setTimeout(function(){\n//       closePopup.textContent = `あなたの得点は${totalScore}点です!`;\n//       closePopup.className = \"endPopup\";\n//     },1000);\n//     }\n//     time.textContent = label;\n\n// }\n\n// setTimeout(countDown,0);\n// const timerId = setInterval(countDown,1000);\n\n\n\n// let point = document.getElementById(\"point\");\n\n// let score = 0;\n\n// const textLength = 4;\n// const addPointLevel1 = 1;\n// const addPointLevel2 = 3;\n\n// setTimeout(countPoint,0);\n\n// function countPoint(){\n//   point.textContent = score;\n//     if (checkTexts.length < textLength){\n//       addPoint = addPointLevel1;\n//     } else{\n//       addPoint = addPointLevel2;\n//     }\n//   score = score + addPoint;\n//   return score;\n// }\n\n\n// document.addEventListener(`keydown`, keyDown);\n\n// let bonusCount = 0;\n// const bonusCountMax = 10;\n\n\n// function keyDown(e){\n// if(e.key === checkTexts[0].textContent && endFlag===\"0\") {\n//     checkTexts[0].className = \"add_red\";\n//     bonusCount = bonusCount +1;\n\n//     checkTexts.shift();\n\n//     if(bonusCount >= bonusCountMax){\n//       playingTime = playingTime +3000;\n//       bonusCount =0;\n//     }\n\n//     if(checkTexts.length === 0) createText(),countPoint();\n//   } else if(endFlag===\"0\"){\n//     bonusCount =0;\n//   }\n//       document.getElementById(\"meterImg\").src=imgArray[bonusCount];\n//    }\n\n//  const imgArray =[\n//    '/assets/メーターPNG/メーター0.png',\n//    '/assets/メーターPNG/メーター10.png',\n//    '/assets/メーターPNG/メーター20.png',\n//    '/assets/メーターPNG/メーター30.png',\n//    '/assets/メーターPNG/メーター40.png',\n//    '/assets/メーターPNG/メーター50.png',\n//    '/assets/メーターPNG/メーター60.png',\n//    '/assets/メーターPNG/メーター70.png',\n//    '/assets/メーターPNG/メーター80.png',\n//    '/assets/メーターPNG/メーター90.png',\n//    '/assets/メーターPNG/メーター100.png'\n//  ]\n\n//  document.getElementById(\"meterImg\").src=imgArray[bonusCount];\n\n})\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClFA;AAEA;AACA;AAWA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAIA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;A","sourceRoot":""}