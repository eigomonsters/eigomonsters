{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nwindow.addEventListener('load', function () {\n  var _romaMappingTable;\n\n  // 表示する単語リストを定義する。\n  // chromeの場合\"ff\"が正常に動作しない。\n  var wordList = gon.wordListAll; // 表示するメーターリストを定義する。\n\n  var imgArray = ['/assets/メーターPNG/メーター0.png', '/assets/メーターPNG/メーター10.png', '/assets/メーターPNG/メーター20.png', '/assets/メーターPNG/メーター30.png', '/assets/メーターPNG/メーター40.png', '/assets/メーターPNG/メーター50.png', '/assets/メーターPNG/メーター60.png', '/assets/メーターPNG/メーター70.png', '/assets/メーターPNG/メーター80.png', '/assets/メーターPNG/メーター90.png', '/assets/メーターPNG/メーター100.png'];\n  var romaMappingTable = (_romaMappingTable = {\n    \"あ\": \"a\",\n    \"い\": \"i\",\n    \"う\": \"u\",\n    \"え\": \"e\",\n    \"お\": \"o\",\n    \"か\": \"ka\",\n    \"き\": \"ki\",\n    \"く\": \"ku\",\n    \"け\": \"ke\",\n    \"こ\": \"ko\",\n    \"さ\": \"sa\",\n    \"し\": \"si\",\n    \"す\": \"su\",\n    \"せ\": \"se\",\n    \"そ\": \"so\",\n    \"た\": \"ta\",\n    \"ち\": \"ti\",\n    \"つ\": \"tu\",\n    \"て\": \"te\",\n    \"と\": \"to\",\n    \"な\": \"na\",\n    \"に\": \"ni\",\n    \"ぬ\": \"nu\",\n    \"ね\": \"ne\",\n    \"の\": \"no\",\n    \"は\": \"ha\",\n    \"ひ\": \"hi\",\n    \"ふ\": \"hu\",\n    \"へ\": \"he\",\n    \"ほ\": \"ho\",\n    \"ま\": \"ma\",\n    \"み\": \"mi\",\n    \"む\": \"mu\",\n    \"め\": \"me\",\n    \"も\": \"mo\",\n    \"や\": \"ya\",\n    \"ゆ\": \"yu\",\n    \"よ\": \"yo\",\n    \"ら\": \"ra\",\n    \"り\": \"ri\",\n    \"る\": \"ru\",\n    \"れ\": \"re\",\n    \"ろ\": \"ro\",\n    \"わ\": \"wa\",\n    \"を\": \"wo\",\n    \"ん\": \"nn\",\n    \"が\": \"ga\",\n    \"ぎ\": \"gi\",\n    \"ぐ\": \"gu\",\n    \"げ\": \"ge\",\n    \"ご\": \"go\",\n    \"ざ\": \"za\",\n    \"じ\": \"zi\",\n    \"ず\": \"zu\",\n    \"ぜ\": \"ze\",\n    \"ぞ\": \"zo\",\n    \"だ\": \"da\",\n    \"ぢ\": \"di\",\n    \"づ\": \"du\",\n    \"で\": \"de\",\n    \"ど\": \"do\",\n    \"ば\": \"ba\",\n    \"び\": \"bi\",\n    \"ぶ\": \"bu\",\n    \"べ\": \"be\",\n    \"ぼ\": \"bo\",\n    \"ぱ\": \"pa\",\n    \"ぴ\": \"pi\",\n    \"ぷ\": \"pu\",\n    \"ぺ\": \"pe\",\n    \"ぽ\": \"po\",\n    \"ぁ\": \"la\",\n    \"ぃ\": \"li\",\n    \"ぅ\": \"lu\",\n    \"ぇ\": \"le\",\n    \"ぉ\": \"lo\",\n    \"ゃ\": \"lya\",\n    \"ゅ\": \"lyu\",\n    \"ょ\": \"lyo\",\n    \"でゃ\": \"dha\",\n    \"でぃ\": \"dhi\",\n    \"でゅ\": \"dhu\",\n    \"でぇ\": \"dhe\",\n    \"でょ\": \"dho\",\n    \"つぁ\": \"tsa\",\n    \"つぃ\": \"tsi\",\n    \"つぇ\": \"tse\",\n    \"つぉ\": \"tso\",\n    \"てゃ\": \"tha\",\n    \"てぃ\": \"thi\",\n    \"てゅ\": \"thu\",\n    \"てぇ\": \"the\",\n    \"てょ\": \"tho\",\n    \"ふぁ\": \"fa\",\n    \"ふぃ\": \"fi\",\n    \"ふぇ\": \"fe\",\n    \"ふぉ\": \"fo\",\n    \"うぁ\": \"wha\",\n    \"うぃ\": \"wi\",\n    \"うぇ\": \"we\",\n    \"うぉ\": \"who\",\n    \"ゔぁ\": \"va\",\n    \"ゔぃ\": \"vi\",\n    \"ゔ\": \"vu\",\n    \"ゔぇ\": \"ve\",\n    \"ゔぉ\": \"vo\",\n    \"きゃ\": \"kya\",\n    \"きぃ\": \"kyi\",\n    \"きゅ\": \"kyu\",\n    \"きぇ\": \"kye\",\n    \"きょ\": \"kyo\",\n    \"ぎゃ\": \"gya\",\n    \"ぎぃ\": \"gyi\",\n    \"ぎゅ\": \"gyu\",\n    \"ぎぇ\": \"gye\",\n    \"ぎょ\": \"gyo\",\n    \"しゃ\": \"sya\",\n    \"しぃ\": \"syi\",\n    \"しゅ\": \"syu\",\n    \"しぇ\": \"sye\",\n    \"しょ\": \"syo\",\n    \"じゃ\": \"zya\",\n    \"じぃ\": \"zyi\",\n    \"じゅ\": \"zyu\",\n    \"じぇ\": \"zye\",\n    \"じょ\": \"zyo\",\n    \"ちゃ\": \"tya\",\n    \"ちぃ\": \"tyi\",\n    \"ちゅ\": \"tyu\",\n    \"ちぇ\": \"tye\",\n    \"ちょ\": \"tyo\",\n    \"ぢゃ\": \"dya\",\n    \"ぢぃ\": \"dyi\",\n    \"ぢゅ\": \"dyu\",\n    \"ぢぇ\": \"dye\",\n    \"ぢょ\": \"dyo\",\n    \"にゃ\": \"nya\",\n    \"にぃ\": \"nyi\",\n    \"にゅ\": \"nyu\",\n    \"にぇ\": \"nye\",\n    \"にょ\": \"nyo\",\n    \"ひゃ\": \"hya\",\n    \"ひぃ\": \"hyi\",\n    \"ひゅ\": \"hyu\",\n    \"ひぇ\": \"hye\",\n    \"ひょ\": \"hyo\",\n    \"びゃ\": \"bya\",\n    \"びぃ\": \"byi\",\n    \"びゅ\": \"byu\",\n    \"びぇ\": \"bye\",\n    \"びょ\": \"byo\",\n    \"ぴゃ\": \"pya\",\n    \"ぴぃ\": \"pyi\",\n    \"ぴゅ\": \"pyu\",\n    \"ぴぇ\": \"pye\",\n    \"ぴょ\": \"pyo\",\n    \"ふゃ\": \"fya\"\n  }, _defineProperty(_romaMappingTable, \"\\u3075\\u3043\", \"fyi\"), _defineProperty(_romaMappingTable, \"ふゅ\", \"fyu\"), _defineProperty(_romaMappingTable, \"\\u3075\\u3047\", \"fye\"), _defineProperty(_romaMappingTable, \"ふょ\", \"fyo\"), _defineProperty(_romaMappingTable, \"みゃ\", \"mya\"), _defineProperty(_romaMappingTable, \"みぃ\", \"myi\"), _defineProperty(_romaMappingTable, \"みゅ\", \"myu\"), _defineProperty(_romaMappingTable, \"みぇ\", \"mye\"), _defineProperty(_romaMappingTable, \"みょ\", \"myo\"), _defineProperty(_romaMappingTable, \"りゃ\", \"rya\"), _defineProperty(_romaMappingTable, \"りぃ\", \"ryi\"), _defineProperty(_romaMappingTable, \"りゅ\", \"ryu\"), _defineProperty(_romaMappingTable, \"りぇ\", \"rye\"), _defineProperty(_romaMappingTable, \"りょ\", \"ryo\"), _defineProperty(_romaMappingTable, \"くぁ\", \"kwa\"), _defineProperty(_romaMappingTable, \"ぐぁ\", \"gwa\"), _defineProperty(_romaMappingTable, \"とぅ\", \"twu\"), _defineProperty(_romaMappingTable, \"どぅ\", \"dwu\"), _defineProperty(_romaMappingTable, \"いぇ\", \"ye\"), _romaMappingTable);\n  var romaMappingTableSecond = {\n    \"い\": \"yi\",\n    \"か\": \"ca\",\n    \"く\": \"cu\",\n    \"こ\": \"co\",\n    \"し\": \"shi\",\n    \"せ\": \"ce\",\n    \"ち\": \"chi\",\n    \"つ\": \"tsu\",\n    \"ふ\": \"fu\",\n    \"じ\": \"ji\",\n    \"ぁ\": \"xa\",\n    \"ぃ\": \"xi\",\n    \"ぅ\": \"xu\",\n    \"ぇ\": \"xe\",\n    \"ぉ\": \"xo\",\n    \"ゃ\": \"xya\",\n    \"ゅ\": \"xyu\",\n    \"ょ\": \"xyo\",\n    \"しゃ\": \"sha\",\n    \"しゅ\": \"shu\",\n    \"しぇ\": \"she\",\n    \"しょ\": \"sho\",\n    \"じゃ\": \"ja\",\n    \"じぃ\": \"jyi\",\n    \"じゅ\": \"ju\",\n    \"じぇ\": \"je\",\n    \"じょ\": \"jo\",\n    \"ちゃ\": \"cha\",\n    \"ちぃ\": \"cyi\",\n    \"ちゅ\": \"chu\",\n    \"ちぇ\": \"che\",\n    \"ちょ\": \"cho\",\n    \"うぃ\": \"whi\",\n    \"うぇ\": \"whe\",\n    \"ん\": \"xn\"\n  };\n  var romaMappingTableThird = {\n    \"し\": \"ci\",\n    \"じゃ\": \"jya\",\n    \"じゅ\": \"jyu\",\n    \"じぇ\": \"jye\",\n    \"じょ\": \"jyo\",\n    \"ちゃ\": \"cya\",\n    \"ちゅ\": \"cyu\",\n    \"ちぇ\": \"cye\",\n    \"ちょ\": \"cyo\"\n  }; // 表示するメーター初期値を定義する。\n\n  var bonusCountMeter = 0; // 表示するメーター最大値を定義する。\n\n  var bonusCountMeterMax = 10; // メーターの初期値を表示する。\n\n  document.getElementById(\"meterImg\").src = imgArray[bonusCountMeter]; // 表示するプレイ延長時間を定義する。\n\n  var displayBonusAddPlayTime = document.getElementById(\"displayBonusAddPlayTime\");\n  displayBonusAddPlayTime.className = \"displayBonusAddPlayTime\"; // メーター最大値に達した際の延長するプレイ時間を定義する。\n\n  var bonusAddPlayTime = 3000; // ゲーム開始までをカウントダウン変数を定義する。\n\n  var countDownPopup = document.getElementById(\"countDownPopup\"); // class属性を付与する。\n\n  countDownPopup.className = \"countDownPopup\"; // ゲーム開始までをカウントダウン変数の初期値を定義する。\n\n  var countDownPopupNumber = 3; // ゲーム開始までをカウントダウン変数の初期値を表示する。\n\n  countDownPopup.textContent = countDownPopupNumber; // ゲーム開始までをカウントダウンを1秒ごとに実施するように定義する。\n\n  var timerIdToStart = setInterval(countDownTimeToStart, 1000); // ゲーム開始までをカウントダウンを実施する処理を定義する。\n\n  function countDownTimeToStart() {\n    countDownPopupNumber = countDownPopupNumber - 1;\n\n    if (countDownPopupNumber <= 0) {\n      clearInterval(timerIdToStart);\n      countDownPopup.remove();\n      typingPlayStart();\n    } else {\n      countDownPopup.textContent = countDownPopupNumber;\n    }\n  } // ゲームを開始する処理を定義する。\n\n\n  function typingPlayStart() {\n    // 表示する単語を定義する。\n    var displayWord = document.getElementById(\"displayWord\");\n    displayWord.className = \"displayWord\";\n    var displayWordEnglish = document.getElementById(\"displayWordEnglish\");\n    displayWordEnglish.className = \"displayWordEnglish\"; // 表示する単語を一文字ずつに分ける変数を定義する。\n\n    var charArrayInDisplayWordJap = []; // 表示する単語を作成する。\n\n    createDisplayWord(); // プレイ開始時間を取得する。\n\n    var startTime = Date.now(); // 表示する残りのプレイ可能時間を定義する。\n\n    var remainPlayingTime = document.getElementById(\"remainPlayingTime\");\n    remainPlayingTime.className = \"remainPlayingTime\"; // 表示するスタート時のプレイ可能時間を定義する。\n\n    var initialPlayingTimeMSec = 120000; // スタート時に残りのプレイ可能時間の初期値を表示するためにcountDownTimeを実施する。\n\n    setTimeout(countDownTime, 0); // 1秒ごとにcountDownTimeを実施するように定義する。\n\n    var timerId = setInterval(countDownTime, 1000); // 表示するスコアを定義する。\n\n    var displayScore = document.getElementById(\"displayScore\");\n    displayScore.className = \"displayScore\"; // 合計スコアの初期値を定義する。\n\n    var totalScore = 0; // 表示するスコアに初期値を定義する。\n\n    displayScore.textContent = totalScore + \" P\"; // スコアアップする基準を定義する。\n\n    var refTextLengthForCountUpLevel1 = 4;\n    var addScoreLevel1 = 1000;\n    var addScoreLevel2 = 3000; // タイプされる度にkeyDownCharCountUpを実施するように定義する。\n\n    document.addEventListener(\"keydown\", keyDownCharCountUp); // ゲーム終了を判定するフラグを定義する。\n\n    var playEndFlag = \"0\"; // 表示する単語を作成する処理を定義する。\n\n    function createDisplayWord() {\n      // 表示単語を初期化する。\n      displayWord.textContent = \"\"; // 0〜textListsの総数間で整数値をランダムで算出する。\n\n      var randomIntegerInTotalWordList = Math.floor(Math.random() * wordList.length); // 表示する単語をランダムで選定する。\n\n      displayWordInList = wordList[randomIntegerInTotalWordList]; // 英単語を表示させる。\n\n      displayWordEnglish.textContent = displayWordInList.eng_word; // 表示する単語を一文字ごとに区切り、spanタグで閉じる。\n      // spanタグで閉じた単語を表示する。\n\n      charArrayInDisplayWordJap = displayWordInList.jap_trans_1_yomi.split(\"\").map(function (value) {\n        // spanタグを作成する。\n        var spanValue = document.createElement(\"span\"); // spanタグに一文字を挿入する。\n\n        spanValue.textContent = value; // 表示する単語にspanタグで閉じた一文字を追加する。\n\n        displayWord.appendChild(spanValue);\n        return spanValue;\n      });\n    } // プレイ時間をカウントダウンする処理を定義する。\n\n\n    function countDownTime() {\n      var currentTime = Date.now();\n      var diffBetweenCurrentTimeAndStartTime = currentTime - startTime;\n      var remainMSec = initialPlayingTimeMSec - diffBetweenCurrentTimeAndStartTime;\n      var remainSec = Math.ceil(remainMSec / 1000);\n      var remainSecLabel = \"\\u6B8B\\u308A\".concat(\"00\".concat(remainSec).slice(-3), \"\\u79D2\");\n\n      if (remainMSec <= 0) {\n        clearInterval(timerId);\n        remainSecLabel = \"\";\n        displayScore.textContent = \"\";\n        displayWord.textContent = \"\";\n        displayWordEnglish.textContent = \"\"; // ゲーム終了後にplayEndFlagを1に更新する。\n\n        playEndFlag = \"1\"; // ゲーム終了後に終了を知らせるポップアップを作成する。\n        // ゲーム終了を知らせるポップアップを定義する。\n\n        var closePopup = document.getElementById(\"closePopup\");\n        closePopup.textContent = \"終了\";\n        closePopup.className = \"closePopup\"; // 戻るボタンを定義する。\n\n        var backBtn = document.getElementById(\"backBtn\"); // もう一度ボタンを定義する。\n\n        var restartBtn = document.getElementById(\"restartBtn\"); // 2秒後に得点を表示させる。また、もう一度ボタンと戻るボタンを表示させる。\n\n        setTimeout(function () {\n          closePopup.textContent = \"\\u3042\\u306A\\u305F\\u306E\\u5F97\\u70B9\\u306F\".concat(totalScore.toLocaleString(), \"\\u70B9\\u3067\\u3059!\");\n          closePopup.className = \"endResultPopup\";\n          restartBtn.innerHTML = \"<a href='../'>もう一度遊ぶ</a>\";\n          restartBtn.className = \"restartBtn\";\n          backBtn.innerHTML = \"<a href='../'>タイトルに戻る</a>\";\n          backBtn.className = \"backBtn\";\n        }, 2000);\n      } // 残りプレイ可能時間を更新する。\n\n\n      remainPlayingTime.textContent = remainSecLabel;\n    } // スコアをアップし、現在のtotalScoreを表示する処理を定義する。\n\n\n    function countUpScore() {\n      if (displayWord.textContent.length < refTextLengthForCountUpLevel1) {\n        addPoint = addScoreLevel1;\n      } else {\n        addPoint = addScoreLevel2;\n      }\n\n      totalScore = totalScore + addPoint;\n      displayScore.textContent = \"\".concat(totalScore.toLocaleString(), \" P\");\n      return totalScore;\n    }\n\n    var charArrayInDisplayWordAlpha = [];\n    var charArrayInDisplayWordAlphaSole = [];\n    var charArrayInDisplayWordAlphaSecond = [];\n    var charArrayInDisplayWordAlphaSoleSecond = [];\n    var charArrayInDisplayWordAlphaThird = [];\n    var charArrayInDisplayWordAlphaSoleThird = [];\n    var shiftAlreadyStartedFlag = 0;\n    var shiftAlreadyStartedFlagSoleSecondThird = 0;\n    var keyTempForSmallTsuSoleFlag = 0;\n    var keyTempForSmallTsu = \"\";\n    var keyTempForNN = \"\"; // タイプした文字が表示文字と一致する場合の処理を定義する。\n\n    function keyDownCharCountUp(keyDownChar) {\n      // 最後の文字でない場合\n      if (charArrayInDisplayWordJap[1] != null) {\n        // 2文字目が小さい文字である場合(\"っ\"は除く)\n        if (charArrayInDisplayWordJap[1].textContent === \"ぁ\" || charArrayInDisplayWordJap[1].textContent === \"ぃ\" || charArrayInDisplayWordJap[1].textContent === \"ぅ\" || charArrayInDisplayWordJap[1].textContent === \"ぇ\" || charArrayInDisplayWordJap[1].textContent === \"ぉ\" || charArrayInDisplayWordJap[1].textContent === \"ゃ\" || charArrayInDisplayWordJap[1].textContent === \"ゅ\" || charArrayInDisplayWordJap[1].textContent === \"ょ\") {\n          var wordLetter = charArrayInDisplayWordJap[0].textContent + charArrayInDisplayWordJap[1].textContent;\n          var wordLetterSole = charArrayInDisplayWordJap[0].textContent;\n\n          if (shiftAlreadyStartedFlag === 0) {\n            charArrayInDisplayWordAlpha = romaMappingTable[wordLetter].split(\"\").map(function (value) {\n              var spanValue = document.createElement(\"span\");\n              spanValue.textContent = value;\n              return spanValue;\n            });\n            charArrayInDisplayWordAlphaSole = romaMappingTable[wordLetterSole].split(\"\").map(function (value) {\n              var spanValue = document.createElement(\"span\");\n              spanValue.textContent = value;\n              return spanValue;\n            });\n          }\n\n          ;\n\n          if (keyDownChar.key === charArrayInDisplayWordAlpha[0].textContent || keyDownChar.key === charArrayInDisplayWordAlphaSole[0].textContent) {\n            if (keyDownChar.key === charArrayInDisplayWordAlpha[0].textContent) {\n              charArrayInDisplayWordAlpha.shift();\n              shiftAlreadyStartedFlag = 1;\n\n              if (charArrayInDisplayWordAlpha.length === 0) {\n                charArrayInDisplayWordJap[0].className = \"add_red\";\n                charArrayInDisplayWordJap[1].className = \"add_red\";\n                charArrayInDisplayWordJap.shift();\n                charArrayInDisplayWordJap.shift();\n                shiftAlreadyStartedFlag = 0;\n              }\n\n              ;\n            }\n\n            ;\n\n            if (keyDownChar.key === charArrayInDisplayWordAlphaSole[0].textContent) {\n              charArrayInDisplayWordAlphaSole.shift();\n              shiftAlreadyStartedFlag = 1;\n\n              if (charArrayInDisplayWordAlphaSole.length === 0) {\n                charArrayInDisplayWordJap[0].className = \"add_red\";\n                charArrayInDisplayWordJap.shift();\n                shiftAlreadyStartedFlag = 0;\n              }\n\n              ;\n            }\n\n            ;\n            correctTyping();\n          } else {\n            bonusCountReset();\n          }\n\n          ; // 先頭が母音の場合\n        } else if (charArrayInDisplayWordJap[0].textContent === \"あ\" || charArrayInDisplayWordJap[0].textContent === \"い\" || charArrayInDisplayWordJap[0].textContent === \"う\" || charArrayInDisplayWordJap[0].textContent === \"え\" || charArrayInDisplayWordJap[0].textContent === \"お\") {\n          var _wordLetter = charArrayInDisplayWordJap[0].textContent;\n\n          if (shiftAlreadyStartedFlag === 0) {\n            if (keyDownChar.key === romaMappingTable[_wordLetter]) {\n              charArrayInDisplayWordJap[0].className = \"add_red\";\n              charArrayInDisplayWordJap.shift();\n              correctTyping();\n            } else {\n              bonusCountReset();\n            }\n\n            ;\n          }\n\n          ; // 小さい\"っ\"の場合\n        } else if (charArrayInDisplayWordJap[0].textContent === \"っ\") {\n          if (keyDownChar.key !== \"a\" && keyDownChar.key !== \"i\" && keyDownChar.key !== \"u\" && keyDownChar.key !== \"e\" && keyDownChar.key !== \"o\" && keyDownChar.key !== \"n\") {\n            if (shiftAlreadyStartedFlag === 0) {\n              keyTempForSmallTsu = keyDownChar.key;\n              shiftAlreadyStartedFlag = 1;\n            } else {\n              if (keyDownChar.key === keyTempForSmallTsu) {\n                keyTempForSmallTsu = \"\";\n                charArrayInDisplayWordJap[0].className = \"add_red\";\n                charArrayInDisplayWordJap.shift();\n                shiftAlreadyStartedFlag = 0;\n                keyTempForSmallTsuSoleFlag = 0;\n                keyDownCharCountUp(keyDownChar);\n                correctTyping();\n              } else if ((keyTempForSmallTsu === \"l\" || keyTempForSmallTsu === \"x\") && keyDownChar.key === \"t\") {\n                keyTempForSmallTsu = keyDownChar.key;\n                keyTempForSmallTsuSoleFlag = 1;\n                correctTyping();\n              } else if (keyTempForSmallTsu === \"t\" && keyDownChar.key === \"s\") {\n                keyTempForSmallTsu = keyDownChar.key;\n                correctTyping();\n              } else {\n                keyTempForSmallTsu = keyDownChar.key;\n                bonusCountReset();\n              }\n\n              ;\n            }\n\n            ;\n          } else if (keyTempForSmallTsuSoleFlag === 1 && keyDownChar.key === \"u\") {\n            keyTempForSmallTsu = \"\";\n            charArrayInDisplayWordJap[0].className = \"add_red\";\n            charArrayInDisplayWordJap.shift();\n            shiftAlreadyStartedFlag = 0;\n            keyTempForSmallTsuSoleFlag = 0;\n            correctTyping();\n          } else {\n            keyTempForSmallTsu = keyDownChar.key;\n            bonusCountReset();\n          }\n\n          ; // \"ん\"の場合、かつ次の文字が母音でない場合は\"n\"+\"n以外の子音\"でもOKとする。\n        } else if (charArrayInDisplayWordJap[0].textContent === \"ん\" && charArrayInDisplayWordJap[1].textContent !== \"あ\" && charArrayInDisplayWordJap[1].textContent !== \"い\" && charArrayInDisplayWordJap[1].textContent !== \"う\" && charArrayInDisplayWordJap[1].textContent !== \"え\" && charArrayInDisplayWordJap[1].textContent !== \"お\" && shiftAlreadyStartedFlag === 1 && keyTempForNN !== \"x\") {\n          if (keyDownChar.key !== \"a\" && keyDownChar.key !== \"i\" && keyDownChar.key !== \"u\" && keyDownChar.key !== \"e\" && keyDownChar.key !== \"o\") {\n            charArrayInDisplayWordAlpha.shift();\n            charArrayInDisplayWordJap[0].className = \"add_red\";\n            charArrayInDisplayWordJap.shift();\n            shiftAlreadyStartedFlag = 0;\n\n            if (keyDownChar.key !== \"n\") {\n              keyDownCharCountUp(keyDownChar);\n            }\n\n            correctTyping();\n          } else {\n            bonusCountReset();\n          }\n\n          ; // 上記以外の文字の場合\n        } else {\n          var _wordLetter2 = charArrayInDisplayWordJap[0].textContent; // ローマ字変換の複数パターンをsplitする。\n\n          if (shiftAlreadyStartedFlag === 0) {\n            // ローマ字変換パターン１をsplitする。\n            charArrayInDisplayWordAlpha = romaMappingTable[_wordLetter2].split(\"\").map(function (value) {\n              var spanValue = document.createElement(\"span\");\n              spanValue.textContent = value;\n              return spanValue;\n            }); // ローマ字変換パターン２が存在する場合はsplitする。\n\n            if (romaMappingTableSecond[_wordLetter2] != null) {\n              charArrayInDisplayWordAlphaSecond = romaMappingTableSecond[_wordLetter2].split(\"\").map(function (value) {\n                var spanValue = document.createElement(\"span\");\n                spanValue.textContent = value;\n                return spanValue;\n              });\n            }\n\n            ; // ローマ字変換パターン３が存在する場合はsplitする。\n\n            if (romaMappingTableThird[_wordLetter2] != null) {\n              charArrayInDisplayWordAlphaThird = romaMappingTableThird[_wordLetter2].split(\"\").map(function (value) {\n                var spanValue = document.createElement(\"span\");\n                spanValue.textContent = value;\n                return spanValue;\n              });\n            }\n\n            ;\n          }\n\n          ; // タイプキーがローマ字変換パターン１に該当する場合\n\n          if (keyDownChar.key === charArrayInDisplayWordAlpha[0].textContent) {\n            charArrayInDisplayWordAlpha.shift();\n            shiftAlreadyStartedFlag = 1;\n            shiftAlreadyStartedFlagSoleSecondThird = 1;\n\n            if (charArrayInDisplayWordAlpha.length === 0) {\n              charArrayInDisplayWordJap[0].className = \"add_red\";\n              charArrayInDisplayWordJap.shift();\n              shiftAlreadyStartedFlag = 0;\n            }\n          }\n\n          ; // タイプキーがローマ字変換パターン２に該当する場合\n\n          if (romaMappingTableSecond[_wordLetter2] != null) {\n            if (keyDownChar.key === charArrayInDisplayWordAlphaSecond[0].textContent && charArrayInDisplayWordAlpha.length !== 0) {\n              charArrayInDisplayWordAlphaSecond.shift();\n              shiftAlreadyStartedFlag = 1;\n              shiftAlreadyStartedFlagSoleSecondThird = 1;\n\n              if (charArrayInDisplayWordAlphaSecond.length === 0) {\n                charArrayInDisplayWordJap[0].className = \"add_red\";\n                charArrayInDisplayWordJap.shift();\n                shiftAlreadyStartedFlag = 0;\n              }\n            }\n          }\n\n          ; // タイプキーがローマ字変換パターン３に該当する場合\n\n          if (romaMappingTableThird[_wordLetter2] != null) {\n            if (keyDownChar.key === charArrayInDisplayWordAlphaThird[0].textContent && charArrayInDisplayWordAlpha.length !== 0 && charArrayInDisplayWordAlphaSecond.length !== 0) {\n              charArrayInDisplayWordAlphaThird.shift();\n              shiftAlreadyStartedFlag = 1;\n              shiftAlreadyStartedFlagSoleSecondThird = 1;\n\n              if (charArrayInDisplayWordAlphaThird.length === 0) {\n                charArrayInDisplayWordJap[0].className = \"add_red\";\n                charArrayInDisplayWordJap.shift();\n                shiftAlreadyStartedFlag = 0;\n              }\n            }\n          }\n\n          ; // タイプキーがローマ字変換パターン１〜３のいずれかに該当する場合\n\n          if (shiftAlreadyStartedFlagSoleSecondThird === 1) {\n            correctTyping();\n            shiftAlreadyStartedFlagSoleSecondThird = 0; // \"ん\"の入力文字先頭が\"x\"の場合、\"ん\"の条件を分岐するのに使用する。\n\n            if (keyDownChar.key === \"x\") {\n              keyTempForNN = keyDownChar.key;\n            }\n\n            ;\n          } else {\n            bonusCountReset();\n          }\n\n          ;\n        }\n\n        ;\n        ; // 最後の文字である場合\n        // 母音である場合\n      } else if (charArrayInDisplayWordJap[0].textContent === \"あ\" || charArrayInDisplayWordJap[0].textContent === \"い\" || charArrayInDisplayWordJap[0].textContent === \"う\" || charArrayInDisplayWordJap[0].textContent === \"え\" || charArrayInDisplayWordJap[0].textContent === \"お\") {\n        var _wordLetter3 = charArrayInDisplayWordJap[0].textContent;\n\n        if (shiftAlreadyStartedFlag === 0) {\n          if (keyDownChar.key === romaMappingTable[_wordLetter3]) {\n            charArrayInDisplayWordJap[0].className = \"add_red\";\n            charArrayInDisplayWordJap.shift();\n            correctTyping();\n          } else {\n            bonusCountReset();\n          }\n\n          ;\n        }\n\n        ; // 小さい\"っ\"の場合\n      } else if (charArrayInDisplayWordJap[0].textContent === \"っ\") {\n        if (keyDownChar.key !== \"a\" && keyDownChar.key !== \"i\" && keyDownChar.key !== \"u\" && keyDownChar.key !== \"e\" && keyDownChar.key !== \"o\" && keyDownChar.key !== \"n\") {\n          if (shiftAlreadyStartedFlag === 0) {\n            keyTempForSmallTsu = keyDownChar.key;\n            shiftAlreadyStartedFlag = 1;\n          } else {\n            if (keyDownChar.key === keyTempForSmallTsu) {\n              keyTempForSmallTsu = \"\";\n              charArrayInDisplayWordJap[0].className = \"add_red\";\n              charArrayInDisplayWordJap.shift();\n              shiftAlreadyStartedFlag = 0;\n              keyTempForSmallTsuSoleFlag = 0;\n              correctTyping();\n            } else if ((keyTempForSmallTsu === \"l\" || keyTempForSmallTsu === \"x\") && keyDownChar.key === \"t\") {\n              keyTempForSmallTsu = keyDownChar.key;\n              keyTempForSmallTsuSoleFlag = 1;\n              correctTyping();\n            } else if (keyTempForSmallTsu === \"t\" && keyDownChar.key === \"s\") {\n              keyTempForSmallTsu = keyDownChar.key;\n              correctTyping();\n            } else {\n              keyTempForSmallTsu = keyDownChar.key;\n              bonusCountReset();\n            }\n\n            ;\n          }\n\n          ;\n        } else if (keyTempForSmallTsuSoleFlag === 1 && keyDownChar.key === \"u\") {\n          keyTempForSmallTsu = \"\";\n          charArrayInDisplayWordJap[0].className = \"add_red\";\n          charArrayInDisplayWordJap.shift();\n          shiftAlreadyStartedFlag = 0;\n          keyTempForSmallTsuSoleFlag = 0;\n          correctTyping();\n        } else {\n          keyTempForSmallTsu = keyDownChar.key;\n          bonusCountReset();\n        }\n\n        ; // 上記以外の場合\n      } else {\n        var _wordLetter4 = charArrayInDisplayWordJap[0].textContent; // ローマ字変換の複数パターンをsplitする。\n\n        if (shiftAlreadyStartedFlag === 0) {\n          // ローマ字変換パターン１をsplitする。\n          charArrayInDisplayWordAlpha = romaMappingTable[_wordLetter4].split(\"\").map(function (value) {\n            var spanValue = document.createElement(\"span\");\n            spanValue.textContent = value;\n            return spanValue;\n          }); // ローマ字変換パターン２が存在する場合はsplitする。\n\n          if (romaMappingTableSecond[_wordLetter4] != null) {\n            charArrayInDisplayWordAlphaSecond = romaMappingTableSecond[_wordLetter4].split(\"\").map(function (value) {\n              var spanValue = document.createElement(\"span\");\n              spanValue.textContent = value;\n              return spanValue;\n            });\n          }\n\n          ; // ローマ字変換パターン３が存在する場合はsplitする。\n\n          if (romaMappingTableThird[_wordLetter4] != null) {\n            charArrayInDisplayWordAlphaThird = romaMappingTableThird[_wordLetter4].split(\"\").map(function (value) {\n              var spanValue = document.createElement(\"span\");\n              spanValue.textContent = value;\n              return spanValue;\n            });\n          }\n\n          ;\n        }\n\n        ; // タイプキーがローマ字変換パターン１に該当する場合\n\n        if (keyDownChar.key === charArrayInDisplayWordAlpha[0].textContent) {\n          charArrayInDisplayWordAlpha.shift();\n          shiftAlreadyStartedFlag = 1;\n          shiftAlreadyStartedFlagSoleSecondThird = 1;\n\n          if (charArrayInDisplayWordAlpha.length === 0) {\n            charArrayInDisplayWordJap[0].className = \"add_red\";\n            charArrayInDisplayWordJap.shift();\n            shiftAlreadyStartedFlag = 0;\n          }\n        }\n\n        ; // タイプキーがローマ字変換パターン２に該当する場合\n\n        if (romaMappingTableSecond[_wordLetter4] != null) {\n          if (keyDownChar.key === charArrayInDisplayWordAlphaSecond[0].textContent && charArrayInDisplayWordAlpha.length !== 0) {\n            charArrayInDisplayWordAlphaSecond.shift();\n            shiftAlreadyStartedFlag = 1;\n            shiftAlreadyStartedFlagSoleSecondThird = 1;\n\n            if (charArrayInDisplayWordAlphaSecond.length === 0) {\n              charArrayInDisplayWordJap[0].className = \"add_red\";\n              charArrayInDisplayWordJap.shift();\n              shiftAlreadyStartedFlag = 0;\n            }\n          }\n        }\n\n        ; // タイプキーがローマ字変換パターン３に該当する場合\n\n        if (romaMappingTableThird[_wordLetter4] != null) {\n          if (keyDownChar.key === charArrayInDisplayWordAlphaThird[0].textContent && charArrayInDisplayWordAlpha.length !== 0 && charArrayInDisplayWordAlphaSecond.length !== 0) {\n            charArrayInDisplayWordAlphaThird.shift();\n            shiftAlreadyStartedFlag = 1;\n            shiftAlreadyStartedFlagSoleSecondThird = 1;\n\n            if (charArrayInDisplayWordAlphaThird.length === 0) {\n              charArrayInDisplayWordJap[0].className = \"add_red\";\n              charArrayInDisplayWordJap.shift();\n              shiftAlreadyStartedFlag = 0;\n            }\n          }\n        }\n\n        ; // タイプキーがローマ字変換パターン１〜３のいずれかに該当する場合\n\n        if (shiftAlreadyStartedFlagSoleSecondThird === 1) {\n          correctTyping();\n          shiftAlreadyStartedFlagSoleSecondThird = 0;\n        } else {\n          bonusCountReset();\n        }\n\n        ;\n      }\n\n      ;\n    }\n\n    ;\n\n    function correctTyping() {\n      // メーターを更新する。\n      bonusCountMeter = bonusCountMeter + 1; // 表示文字全てタイプした場合、スコアアップ処理を実施し、次の表示文字を作成する処理を実施する。\n\n      if (charArrayInDisplayWordJap.length === 0) countUpScore(), createDisplayWord(); // メーターがメーター最大値以上になった場合、メーターを初期化し、プレイ可能時間を延長する。\n\n      if (bonusCountMeter >= bonusCountMeterMax) {\n        bonusCountMeter = 0; // 初期プレイ時間を更新することで、残りプレイ可能時間を延長する。\n\n        initialPlayingTimeMSec = initialPlayingTimeMSec + bonusAddPlayTime; // 延長した残りプレイ時間を表示する。\n\n        displayBonusAddPlayTime.textContent = \"+ \" + Math.ceil(bonusAddPlayTime / 1000) + \"秒\"; // 延長した残りプレイ時間をフェードアウトする。\n\n        displayBonusAddPlayTime.classList.add('fadeout'); // fadeoutのclassを取り除くことで、2回目以降も延長した残りプレイ時間が表示されるようにする。\n\n        setTimeout(function () {\n          displayBonusAddPlayTime.textContent = \"\";\n          displayBonusAddPlayTime.classList.remove('fadeout');\n        }, 2000);\n      }\n\n      ; // 更新したメーターを表示する。\n\n      document.getElementById(\"meterImg\").src = imgArray[bonusCountMeter];\n    }\n\n    ;\n\n    function bonusCountReset() {\n      bonusCountMeter = 0;\n      document.getElementById(\"meterImg\").src = imgArray[bonusCountMeter];\n    }\n\n    ;\n  }\n});","map":{"version":3,"sources":["/Users/mondenhiroki/projects/eigomonster/app/javascript/packs/typingplay_jap.js"],"names":["window","addEventListener","wordList","gon","wordListAll","imgArray","romaMappingTable","romaMappingTableSecond","romaMappingTableThird","bonusCountMeter","bonusCountMeterMax","document","getElementById","src","displayBonusAddPlayTime","className","bonusAddPlayTime","countDownPopup","countDownPopupNumber","textContent","timerIdToStart","setInterval","countDownTimeToStart","clearInterval","remove","typingPlayStart","displayWord","displayWordEnglish","charArrayInDisplayWordJap","createDisplayWord","startTime","Date","now","remainPlayingTime","initialPlayingTimeMSec","setTimeout","countDownTime","timerId","displayScore","totalScore","refTextLengthForCountUpLevel1","addScoreLevel1","addScoreLevel2","keyDownCharCountUp","playEndFlag","randomIntegerInTotalWordList","Math","floor","random","length","displayWordInList","eng_word","jap_trans_1_yomi","split","map","value","spanValue","createElement","appendChild","currentTime","diffBetweenCurrentTimeAndStartTime","remainMSec","remainSec","ceil","remainSecLabel","slice","closePopup","backBtn","restartBtn","toLocaleString","innerHTML","countUpScore","addPoint","charArrayInDisplayWordAlpha","charArrayInDisplayWordAlphaSole","charArrayInDisplayWordAlphaSecond","charArrayInDisplayWordAlphaSoleSecond","charArrayInDisplayWordAlphaThird","charArrayInDisplayWordAlphaSoleThird","shiftAlreadyStartedFlag","shiftAlreadyStartedFlagSoleSecondThird","keyTempForSmallTsuSoleFlag","keyTempForSmallTsu","keyTempForNN","keyDownChar","wordLetter","wordLetterSole","key","shift","correctTyping","bonusCountReset","classList","add"],"mappings":"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","sourcesContent":["window.addEventListener('load', function(){\n\n  // 表示する単語リストを定義する。\n  // chromeの場合\"ff\"が正常に動作しない。\n\n  const wordList = gon.wordListAll;\n\n  // 表示するメーターリストを定義する。\n  const imgArray =[\n    '/assets/メーターPNG/メーター0.png',\n    '/assets/メーターPNG/メーター10.png',\n    '/assets/メーターPNG/メーター20.png',\n    '/assets/メーターPNG/メーター30.png',\n    '/assets/メーターPNG/メーター40.png',\n    '/assets/メーターPNG/メーター50.png',\n    '/assets/メーターPNG/メーター60.png',\n    '/assets/メーターPNG/メーター70.png',\n    '/assets/メーターPNG/メーター80.png',\n    '/assets/メーターPNG/メーター90.png',\n    '/assets/メーターPNG/メーター100.png'\n  ]\n\n\n  const romaMappingTable = {\n    \"あ\":\"a\",\n    \"い\":\"i\",\n    \"う\":\"u\",\n    \"え\":\"e\",\n    \"お\":\"o\",\n    \"か\":\"ka\",\n    \"き\":\"ki\",\n    \"く\":\"ku\",\n    \"け\":\"ke\",\n    \"こ\":\"ko\",\n    \"さ\":\"sa\",\n    \"し\":\"si\",\n    \"す\":\"su\",\n    \"せ\":\"se\",\n    \"そ\":\"so\",\n    \"た\":\"ta\",\n    \"ち\":\"ti\",\n    \"つ\":\"tu\",\n    \"て\":\"te\",\n    \"と\":\"to\",\n    \"な\":\"na\",\n    \"に\":\"ni\",\n    \"ぬ\":\"nu\",\n    \"ね\":\"ne\",\n    \"の\":\"no\",\n    \"は\":\"ha\",\n    \"ひ\":\"hi\",\n    \"ふ\":\"hu\",\n    \"へ\":\"he\",\n    \"ほ\":\"ho\",\n    \"ま\":\"ma\",\n    \"み\":\"mi\",\n    \"む\":\"mu\",\n    \"め\":\"me\",\n    \"も\":\"mo\",\n    \"や\":\"ya\",\n    \"ゆ\":\"yu\",\n    \"よ\":\"yo\",\n    \"ら\":\"ra\",\n    \"り\":\"ri\",\n    \"る\":\"ru\",\n    \"れ\":\"re\",\n    \"ろ\":\"ro\",\n    \"わ\":\"wa\",\n    \"を\":\"wo\",\n    \"ん\":\"nn\",\n    \"が\":\"ga\",\n    \"ぎ\":\"gi\",\n    \"ぐ\":\"gu\",\n    \"げ\":\"ge\",\n    \"ご\":\"go\",\n    \"ざ\":\"za\",\n    \"じ\":\"zi\",\n    \"ず\":\"zu\",\n    \"ぜ\":\"ze\",\n    \"ぞ\":\"zo\",\n    \"だ\":\"da\",\n    \"ぢ\":\"di\",\n    \"づ\":\"du\",\n    \"で\":\"de\",\n    \"ど\":\"do\",\n    \"ば\":\"ba\",\n    \"び\":\"bi\",\n    \"ぶ\":\"bu\",\n    \"べ\":\"be\",\n    \"ぼ\":\"bo\",\n    \"ぱ\":\"pa\",\n    \"ぴ\":\"pi\",\n    \"ぷ\":\"pu\",\n    \"ぺ\":\"pe\",\n    \"ぽ\":\"po\",\n    \"ぁ\":\"la\",\n    \"ぃ\":\"li\",\n    \"ぅ\":\"lu\",\n    \"ぇ\":\"le\",\n    \"ぉ\":\"lo\",\n    \"ゃ\":\"lya\",\n    \"ゅ\":\"lyu\",\n    \"ょ\":\"lyo\",\n    \"でゃ\":\"dha\",\n    \"でぃ\":\"dhi\",\n    \"でゅ\":\"dhu\",\n    \"でぇ\":\"dhe\",\n    \"でょ\":\"dho\",\n    \"つぁ\":\"tsa\",\n    \"つぃ\":\"tsi\",\n    \"つぇ\":\"tse\",\n    \"つぉ\":\"tso\",\n    \"てゃ\":\"tha\",\n    \"てぃ\":\"thi\",\n    \"てゅ\":\"thu\",\n    \"てぇ\":\"the\",\n    \"てょ\":\"tho\",\n    \"ふぁ\":\"fa\",\n    \"ふぃ\":\"fi\",\n    \"ふぇ\":\"fe\",\n    \"ふぉ\":\"fo\",\n    \"うぁ\":\"wha\",\n    \"うぃ\":\"wi\",\n    \"うぇ\":\"we\",\n    \"うぉ\":\"who\",\n    \"ゔぁ\":\"va\",\n    \"ゔぃ\":\"vi\",\n    \"ゔ\":\"vu\",\n    \"ゔぇ\":\"ve\",\n    \"ゔぉ\":\"vo\",\n    \"きゃ\":\"kya\",\n    \"きぃ\":\"kyi\",\n    \"きゅ\":\"kyu\",\n    \"きぇ\":\"kye\",\n    \"きょ\":\"kyo\",\n    \"ぎゃ\":\"gya\",\n    \"ぎぃ\":\"gyi\",\n    \"ぎゅ\":\"gyu\",\n    \"ぎぇ\":\"gye\",\n    \"ぎょ\":\"gyo\",\n    \"しゃ\":\"sya\",\n    \"しぃ\":\"syi\",\n    \"しゅ\":\"syu\",\n    \"しぇ\":\"sye\",\n    \"しょ\":\"syo\",\n    \"じゃ\":\"zya\",\n    \"じぃ\":\"zyi\",\n    \"じゅ\":\"zyu\",\n    \"じぇ\":\"zye\",\n    \"じょ\":\"zyo\",\n    \"ちゃ\":\"tya\",\n    \"ちぃ\":\"tyi\",\n    \"ちゅ\":\"tyu\",\n    \"ちぇ\":\"tye\",\n    \"ちょ\":\"tyo\",\n    \"ぢゃ\":\"dya\",\n    \"ぢぃ\":\"dyi\",\n    \"ぢゅ\":\"dyu\",\n    \"ぢぇ\":\"dye\",\n    \"ぢょ\":\"dyo\",\n    \"にゃ\":\"nya\",\n    \"にぃ\":\"nyi\",\n    \"にゅ\":\"nyu\",\n    \"にぇ\":\"nye\",\n    \"にょ\":\"nyo\",\n    \"ひゃ\":\"hya\",\n    \"ひぃ\":\"hyi\",\n    \"ひゅ\":\"hyu\",\n    \"ひぇ\":\"hye\",\n    \"ひょ\":\"hyo\",\n    \"びゃ\":\"bya\",\n    \"びぃ\":\"byi\",\n    \"びゅ\":\"byu\",\n    \"びぇ\":\"bye\",\n    \"びょ\":\"byo\",\n    \"ぴゃ\":\"pya\",\n    \"ぴぃ\":\"pyi\",\n    \"ぴゅ\":\"pyu\",\n    \"ぴぇ\":\"pye\",\n    \"ぴょ\":\"pyo\",\n    \"ふゃ\":\"fya\",\n    \"ふぃ\":\"fyi\",\n    \"ふゅ\":\"fyu\",\n    \"ふぇ\":\"fye\",\n    \"ふょ\":\"fyo\",\n    \"みゃ\":\"mya\",\n    \"みぃ\":\"myi\",\n    \"みゅ\":\"myu\",\n    \"みぇ\":\"mye\",\n    \"みょ\":\"myo\",\n    \"りゃ\":\"rya\",\n    \"りぃ\":\"ryi\",\n    \"りゅ\":\"ryu\",\n    \"りぇ\":\"rye\",\n    \"りょ\":\"ryo\",\n    \"くぁ\":\"kwa\",\n    \"ぐぁ\":\"gwa\",\n    \"とぅ\":\"twu\",\n    \"どぅ\":\"dwu\",\n    \"いぇ\":\"ye\"\n  }\n\n  const romaMappingTableSecond = {\n    \"い\":\"yi\",\n    \"か\":\"ca\",\n    \"く\":\"cu\",\n    \"こ\":\"co\",\n    \"し\":\"shi\",\n    \"せ\":\"ce\",\n    \"ち\":\"chi\",\n    \"つ\":\"tsu\",\n    \"ふ\":\"fu\",\n    \"じ\":\"ji\",\n    \"ぁ\":\"xa\",\n    \"ぃ\":\"xi\",\n    \"ぅ\":\"xu\",\n    \"ぇ\":\"xe\",\n    \"ぉ\":\"xo\",\n    \"ゃ\":\"xya\",\n    \"ゅ\":\"xyu\",\n    \"ょ\":\"xyo\",\n    \"しゃ\":\"sha\",\n    \"しゅ\":\"shu\",\n    \"しぇ\":\"she\",\n    \"しょ\":\"sho\",\n    \"じゃ\":\"ja\",\n    \"じぃ\":\"jyi\",\n    \"じゅ\":\"ju\",\n    \"じぇ\":\"je\",\n    \"じょ\":\"jo\",\n    \"ちゃ\":\"cha\",\n    \"ちぃ\":\"cyi\",\n    \"ちゅ\":\"chu\",\n    \"ちぇ\":\"che\",\n    \"ちょ\":\"cho\",\n    \"うぃ\":\"whi\",\n    \"うぇ\":\"whe\",\n    \"ん\":\"xn\"\n  }\n\n  const romaMappingTableThird = {\n    \"し\":\"ci\",\n    \"じゃ\":\"jya\",\n    \"じゅ\":\"jyu\",\n    \"じぇ\":\"jye\",\n    \"じょ\":\"jyo\",\n    \"ちゃ\":\"cya\",\n    \"ちゅ\":\"cyu\",\n    \"ちぇ\":\"cye\",\n    \"ちょ\":\"cyo\",\n  }\n    \n\n  // 表示するメーター初期値を定義する。\n  let bonusCountMeter = 0;\n  // 表示するメーター最大値を定義する。\n  const bonusCountMeterMax = 10;\n  // メーターの初期値を表示する。\n  document.getElementById(\"meterImg\").src=imgArray[bonusCountMeter];\n  // 表示するプレイ延長時間を定義する。\n  const displayBonusAddPlayTime = document.getElementById(\"displayBonusAddPlayTime\");\n  displayBonusAddPlayTime.className =  \"displayBonusAddPlayTime\";\n  // メーター最大値に達した際の延長するプレイ時間を定義する。\n  const bonusAddPlayTime = 3000;\n\n\n  // ゲーム開始までをカウントダウン変数を定義する。\n  let countDownPopup = document.getElementById(\"countDownPopup\");\n  // class属性を付与する。\n  countDownPopup.className = \"countDownPopup\";\n  // ゲーム開始までをカウントダウン変数の初期値を定義する。\n  let countDownPopupNumber = 3;\n  // ゲーム開始までをカウントダウン変数の初期値を表示する。\n  countDownPopup.textContent = countDownPopupNumber;\n  // ゲーム開始までをカウントダウンを1秒ごとに実施するように定義する。\n  const timerIdToStart = setInterval(countDownTimeToStart,1000);\n\n\n  // ゲーム開始までをカウントダウンを実施する処理を定義する。\n  function countDownTimeToStart(){\n    countDownPopupNumber = countDownPopupNumber - 1;\n    if (countDownPopupNumber <= 0){\n      clearInterval(timerIdToStart);\n      countDownPopup.remove();\n      typingPlayStart();\n    } else {\n      countDownPopup.textContent = countDownPopupNumber;\n    }\n  }\n\n  // ゲームを開始する処理を定義する。\n  function typingPlayStart(){\n\n    // 表示する単語を定義する。\n    const displayWord = document.getElementById(\"displayWord\");\n    displayWord.className =  \"displayWord\";\n    const displayWordEnglish = document.getElementById(\"displayWordEnglish\");\n    displayWordEnglish.className =  \"displayWordEnglish\";\n    // 表示する単語を一文字ずつに分ける変数を定義する。\n    let charArrayInDisplayWordJap =[];\n    // 表示する単語を作成する。\n    createDisplayWord();\n\n    // プレイ開始時間を取得する。\n    const startTime = Date.now();\n    // 表示する残りのプレイ可能時間を定義する。\n    let remainPlayingTime = document.getElementById(\"remainPlayingTime\");\n    remainPlayingTime.className =  \"remainPlayingTime\";\n    // 表示するスタート時のプレイ可能時間を定義する。\n    let initialPlayingTimeMSec = 120000;\n    // スタート時に残りのプレイ可能時間の初期値を表示するためにcountDownTimeを実施する。\n    setTimeout(countDownTime,0);\n    // 1秒ごとにcountDownTimeを実施するように定義する。\n    const timerId = setInterval(countDownTime,1000);\n\n    // 表示するスコアを定義する。\n    let displayScore = document.getElementById(\"displayScore\");\n    displayScore.className =  \"displayScore\";\n    // 合計スコアの初期値を定義する。\n    let totalScore = 0;\n    // 表示するスコアに初期値を定義する。\n    displayScore.textContent = totalScore + \" P\";\n    // スコアアップする基準を定義する。\n    const refTextLengthForCountUpLevel1 = 4;\n    const addScoreLevel1 = 1000;\n    const addScoreLevel2 = 3000;\n\n    // タイプされる度にkeyDownCharCountUpを実施するように定義する。\n    document.addEventListener(`keydown`, keyDownCharCountUp);\n\n    // ゲーム終了を判定するフラグを定義する。\n    let playEndFlag = \"0\";\n\n    // 表示する単語を作成する処理を定義する。\n    function createDisplayWord(){\n      // 表示単語を初期化する。\n      displayWord.textContent = \"\";\n      // 0〜textListsの総数間で整数値をランダムで算出する。\n      let randomIntegerInTotalWordList = Math.floor(Math.random() * wordList.length);\n      // 表示する単語をランダムで選定する。\n      displayWordInList = wordList[randomIntegerInTotalWordList];\n\n      // 英単語を表示させる。\n      displayWordEnglish.textContent = displayWordInList.eng_word;\n      // 表示する単語を一文字ごとに区切り、spanタグで閉じる。\n      // spanタグで閉じた単語を表示する。\n      charArrayInDisplayWordJap = displayWordInList.jap_trans_1_yomi.split(\"\").map(function(value){\n        // spanタグを作成する。\n        let spanValue = document.createElement(\"span\");\n        // spanタグに一文字を挿入する。\n        spanValue.textContent = value;\n        // 表示する単語にspanタグで閉じた一文字を追加する。\n        displayWord.appendChild(spanValue);\n        return spanValue;\n      });\n    }\n\n    // プレイ時間をカウントダウンする処理を定義する。\n    function countDownTime(){\n      const currentTime = Date.now();\n      const diffBetweenCurrentTimeAndStartTime = currentTime - startTime;\n      const remainMSec = initialPlayingTimeMSec - diffBetweenCurrentTimeAndStartTime;\n      const remainSec = Math.ceil(remainMSec/1000);\n      let  remainSecLabel = `残り${(`00${remainSec}` ).slice( -3 )}秒`;\n      if (remainMSec <= 0){\n        clearInterval(timerId);\n        remainSecLabel = \"\";\n        displayScore.textContent =\"\";\n        displayWord.textContent =\"\";\n        displayWordEnglish.textContent =\"\";\n        // ゲーム終了後にplayEndFlagを1に更新する。\n        playEndFlag = \"1\";\n        // ゲーム終了後に終了を知らせるポップアップを作成する。\n        // ゲーム終了を知らせるポップアップを定義する。\n        const closePopup = document.getElementById(\"closePopup\");\n        closePopup.textContent =\"終了\";\n        closePopup.className = \"closePopup\";\n        // 戻るボタンを定義する。\n        const backBtn = document.getElementById(\"backBtn\");\n        // もう一度ボタンを定義する。\n        const restartBtn = document.getElementById(\"restartBtn\");\n        // 2秒後に得点を表示させる。また、もう一度ボタンと戻るボタンを表示させる。\n        setTimeout(function(){\n          closePopup.textContent = `あなたの得点は${totalScore.toLocaleString()}点です!`;\n          closePopup.className = \"endResultPopup\";\n          restartBtn.innerHTML = \"<a href='../'>もう一度遊ぶ</a>\";\n          restartBtn.className = \"restartBtn\";\n          backBtn.innerHTML = \"<a href='../'>タイトルに戻る</a>\";\n          backBtn.className = \"backBtn\";\n        },2000);\n      }\n      // 残りプレイ可能時間を更新する。\n      remainPlayingTime.textContent = remainSecLabel;\n    }\n\n    // スコアをアップし、現在のtotalScoreを表示する処理を定義する。\n    function countUpScore(){\n      if (displayWord.textContent.length < refTextLengthForCountUpLevel1){\n        addPoint = addScoreLevel1;\n      } else {\n        addPoint = addScoreLevel2;\n      }\n      totalScore = totalScore + addPoint;\n      displayScore.textContent = `${totalScore.toLocaleString()} P`;\n      return totalScore;\n    }\n\n    let charArrayInDisplayWordAlpha = [];\n    let charArrayInDisplayWordAlphaSole = [];\n    let charArrayInDisplayWordAlphaSecond = [];\n    let charArrayInDisplayWordAlphaSoleSecond = [];\n    let charArrayInDisplayWordAlphaThird = [];\n    let charArrayInDisplayWordAlphaSoleThird = [];\n\n    let shiftAlreadyStartedFlag = 0;\n    let shiftAlreadyStartedFlagSoleSecondThird = 0;\n    let keyTempForSmallTsuSoleFlag = 0;\n\n    let keyTempForSmallTsu = \"\";\n    let keyTempForNN = \"\";\n\n    // タイプした文字が表示文字と一致する場合の処理を定義する。\n    function keyDownCharCountUp(keyDownChar){\n        // 最後の文字でない場合\n        if(charArrayInDisplayWordJap[1] != null){\n            // 2文字目が小さい文字である場合(\"っ\"は除く)\n            if (charArrayInDisplayWordJap[1].textContent === \"ぁ\"\n              || charArrayInDisplayWordJap[1].textContent === \"ぃ\"\n              || charArrayInDisplayWordJap[1].textContent === \"ぅ\"\n              || charArrayInDisplayWordJap[1].textContent === \"ぇ\"\n              || charArrayInDisplayWordJap[1].textContent === \"ぉ\"\n              || charArrayInDisplayWordJap[1].textContent === \"ゃ\"\n              || charArrayInDisplayWordJap[1].textContent === \"ゅ\"\n              || charArrayInDisplayWordJap[1].textContent === \"ょ\") {\n                \n                let wordLetter = charArrayInDisplayWordJap[0].textContent + charArrayInDisplayWordJap[1].textContent;\n                let wordLetterSole = charArrayInDisplayWordJap[0].textContent;\n\n                if (shiftAlreadyStartedFlag === 0 ){\n                  charArrayInDisplayWordAlpha = romaMappingTable[wordLetter].split(\"\").map(function(value){\n                    let spanValue = document.createElement(\"span\");\n                    spanValue.textContent = value;\n                    return spanValue;\n                  });\n                  charArrayInDisplayWordAlphaSole = romaMappingTable[wordLetterSole].split(\"\").map(function(value){\n                    let spanValue = document.createElement(\"span\");\n                    spanValue.textContent = value;\n                    return spanValue;\n                  });\n                };\n\n                if(keyDownChar.key === charArrayInDisplayWordAlpha[0].textContent\n                    || keyDownChar.key === charArrayInDisplayWordAlphaSole[0].textContent){\n\n                    if(keyDownChar.key === charArrayInDisplayWordAlpha[0].textContent) {\n                      charArrayInDisplayWordAlpha.shift();\n                      shiftAlreadyStartedFlag = 1;\n                        if(charArrayInDisplayWordAlpha.length === 0){\n                          charArrayInDisplayWordJap[0].className = \"add_red\";\n                          charArrayInDisplayWordJap[1].className = \"add_red\";\n                          charArrayInDisplayWordJap.shift();\n                          charArrayInDisplayWordJap.shift();\n                          shiftAlreadyStartedFlag = 0;\n                        };\n                    };\n                      if(keyDownChar.key === charArrayInDisplayWordAlphaSole[0].textContent) {\n                        charArrayInDisplayWordAlphaSole.shift();\n                        shiftAlreadyStartedFlag = 1;\n                          if(charArrayInDisplayWordAlphaSole.length === 0){\n                            charArrayInDisplayWordJap[0].className = \"add_red\";\n                            charArrayInDisplayWordJap.shift();\n                            shiftAlreadyStartedFlag = 0;\n                          };\n                      };\n                      correctTyping();\n                } else {\n                  bonusCountReset();\n                };\n            \n            // 先頭が母音の場合\n            } else if (charArrayInDisplayWordJap[0].textContent === \"あ\"\n              || charArrayInDisplayWordJap[0].textContent === \"い\"\n              || charArrayInDisplayWordJap[0].textContent === \"う\"\n              || charArrayInDisplayWordJap[0].textContent === \"え\"\n              || charArrayInDisplayWordJap[0].textContent === \"お\" ) {\n\n                let wordLetter = charArrayInDisplayWordJap[0].textContent;\n\n                if (shiftAlreadyStartedFlag === 0 ){\n                    if (keyDownChar.key === romaMappingTable[wordLetter]) {\n                        charArrayInDisplayWordJap[0].className = \"add_red\";\n                        charArrayInDisplayWordJap.shift();\n                        correctTyping();\n                    } else {\n                        bonusCountReset();\n                    };\n                };\n\n            // 小さい\"っ\"の場合\n            } else if (charArrayInDisplayWordJap[0].textContent === \"っ\") {\n                if (keyDownChar.key !== \"a\"\n                    && keyDownChar.key !== \"i\"\n                    && keyDownChar.key !== \"u\"\n                    && keyDownChar.key !== \"e\"\n                    && keyDownChar.key !== \"o\"\n                    && keyDownChar.key !== \"n\") {\n                        if (shiftAlreadyStartedFlag === 0 ){\n                          keyTempForSmallTsu = keyDownChar.key;\n                          shiftAlreadyStartedFlag = 1;\n                        } else {\n                            if(keyDownChar.key === keyTempForSmallTsu){\n                              keyTempForSmallTsu = \"\";\n                              charArrayInDisplayWordJap[0].className = \"add_red\";\n                              charArrayInDisplayWordJap.shift();\n                              shiftAlreadyStartedFlag = 0;\n                              keyTempForSmallTsuSoleFlag = 0;\n                              keyDownCharCountUp(keyDownChar);\n                              correctTyping();\n                            } else if ((keyTempForSmallTsu === \"l\" || keyTempForSmallTsu === \"x\")\n                            && keyDownChar.key === \"t\") {\n                              keyTempForSmallTsu = keyDownChar.key;\n                              keyTempForSmallTsuSoleFlag = 1;\n                              correctTyping();\n                            } else if(keyTempForSmallTsu === \"t\" && keyDownChar.key === \"s\"){\n                              keyTempForSmallTsu = keyDownChar.key;\n                              correctTyping();\n                            } else {\n                              keyTempForSmallTsu = keyDownChar.key;\n                              bonusCountReset();\n                            };\n                        };\n                } else if (keyTempForSmallTsuSoleFlag === 1\n                            && keyDownChar.key === \"u\"){\n                              keyTempForSmallTsu = \"\";\n                              charArrayInDisplayWordJap[0].className = \"add_red\";\n                              charArrayInDisplayWordJap.shift();\n                              shiftAlreadyStartedFlag = 0;\n                              keyTempForSmallTsuSoleFlag = 0;\n                              correctTyping();\n                } else {\n                  keyTempForSmallTsu = keyDownChar.key;\n                  bonusCountReset();\n                };\n            \n          // \"ん\"の場合、かつ次の文字が母音でない場合は\"n\"+\"n以外の子音\"でもOKとする。\n            } else if (charArrayInDisplayWordJap[0].textContent === \"ん\"\n                          && charArrayInDisplayWordJap[1].textContent !== \"あ\"\n                          && charArrayInDisplayWordJap[1].textContent !== \"い\"\n                          && charArrayInDisplayWordJap[1].textContent !== \"う\"\n                          && charArrayInDisplayWordJap[1].textContent !== \"え\"\n                          && charArrayInDisplayWordJap[1].textContent !== \"お\"\n                          && shiftAlreadyStartedFlag === 1\n                          && keyTempForNN !== \"x\"){\n                if(keyDownChar.key !== \"a\"\n                    && keyDownChar.key !== \"i\"\n                    && keyDownChar.key !== \"u\"\n                    && keyDownChar.key !== \"e\"\n                    && keyDownChar.key !== \"o\"){\n                  charArrayInDisplayWordAlpha.shift();\n                  charArrayInDisplayWordJap[0].className = \"add_red\";\n                  charArrayInDisplayWordJap.shift();\n                  shiftAlreadyStartedFlag = 0;\n                  if(keyDownChar.key !== \"n\"){\n                  keyDownCharCountUp(keyDownChar);\n                  }\n                  correctTyping();\n                } else {\n                  bonusCountReset();\n                };\n                \n            // 上記以外の文字の場合\n            } else {\n              let wordLetter = charArrayInDisplayWordJap[0].textContent;\n                  // ローマ字変換の複数パターンをsplitする。\n              if (shiftAlreadyStartedFlag === 0 ){\n                  // ローマ字変換パターン１をsplitする。\n                  charArrayInDisplayWordAlpha = romaMappingTable[wordLetter].split(\"\").map(function(value){\n                  let spanValue = document.createElement(\"span\");\n                  spanValue.textContent = value;\n                  return spanValue;\n                });\n                  // ローマ字変換パターン２が存在する場合はsplitする。\n                  if (romaMappingTableSecond[wordLetter] != null){\n                    charArrayInDisplayWordAlphaSecond = romaMappingTableSecond[wordLetter].split(\"\").map(function(value){\n                    let spanValue = document.createElement(\"span\");\n                    spanValue.textContent = value;\n                    return spanValue;\n                  });\n                };\n                  // ローマ字変換パターン３が存在する場合はsplitする。\n                  if (romaMappingTableThird[wordLetter] != null){\n                    charArrayInDisplayWordAlphaThird = romaMappingTableThird[wordLetter].split(\"\").map(function(value){\n                    let spanValue = document.createElement(\"span\");\n                    spanValue.textContent = value;\n                    return spanValue;\n                  });\n                };\n              };\n              // タイプキーがローマ字変換パターン１に該当する場合\n              if(keyDownChar.key === charArrayInDisplayWordAlpha[0].textContent) {\n                  charArrayInDisplayWordAlpha.shift();\n                  shiftAlreadyStartedFlag = 1;\n                  shiftAlreadyStartedFlagSoleSecondThird = 1;\n                  if(charArrayInDisplayWordAlpha.length === 0){\n                    charArrayInDisplayWordJap[0].className = \"add_red\";\n                    charArrayInDisplayWordJap.shift();\n                    shiftAlreadyStartedFlag = 0;\n                  }};\n              // タイプキーがローマ字変換パターン２に該当する場合\n              if (romaMappingTableSecond[wordLetter] != null){\n                  if(keyDownChar.key === charArrayInDisplayWordAlphaSecond[0].textContent\n                      && charArrayInDisplayWordAlpha.length !== 0){\n                    charArrayInDisplayWordAlphaSecond.shift();\n                    shiftAlreadyStartedFlag = 1;\n                    shiftAlreadyStartedFlagSoleSecondThird = 1;\n                    if(charArrayInDisplayWordAlphaSecond.length === 0){\n                      charArrayInDisplayWordJap[0].className = \"add_red\";\n                      charArrayInDisplayWordJap.shift();\n                      shiftAlreadyStartedFlag = 0;\n                  }}};\n              // タイプキーがローマ字変換パターン３に該当する場合\n              if (romaMappingTableThird[wordLetter] != null){\n                  if(keyDownChar.key === charArrayInDisplayWordAlphaThird[0].textContent\n                    && charArrayInDisplayWordAlpha.length !== 0\n                    && charArrayInDisplayWordAlphaSecond.length !== 0){\n                    charArrayInDisplayWordAlphaThird.shift();\n                    shiftAlreadyStartedFlag = 1;\n                    shiftAlreadyStartedFlagSoleSecondThird = 1;\n                    if(charArrayInDisplayWordAlphaThird.length === 0){\n                      charArrayInDisplayWordJap[0].className = \"add_red\";\n                      charArrayInDisplayWordJap.shift();\n                      shiftAlreadyStartedFlag = 0;\n                    }}};\n              \n              \n\n              // タイプキーがローマ字変換パターン１〜３のいずれかに該当する場合\n              if (shiftAlreadyStartedFlagSoleSecondThird === 1) {\n                correctTyping(); \n                shiftAlreadyStartedFlagSoleSecondThird = 0;\n                // \"ん\"の入力文字先頭が\"x\"の場合、\"ん\"の条件を分岐するのに使用する。\n                if (keyDownChar.key === \"x\"){\n                  keyTempForNN = keyDownChar.key;\n                };\n              } else {\n                bonusCountReset();\n              };\n            };;\n        \n        // 最後の文字である場合\n        // 母音である場合\n        } else if (charArrayInDisplayWordJap[0].textContent === \"あ\"\n          || charArrayInDisplayWordJap[0].textContent === \"い\"\n          || charArrayInDisplayWordJap[0].textContent === \"う\"\n          || charArrayInDisplayWordJap[0].textContent === \"え\"\n          || charArrayInDisplayWordJap[0].textContent === \"お\" ) {\n          let wordLetter = charArrayInDisplayWordJap[0].textContent;\n              if (shiftAlreadyStartedFlag === 0 ) {\n                  if (keyDownChar.key === romaMappingTable[wordLetter]){\n                      charArrayInDisplayWordJap[0].className = \"add_red\";\n                      charArrayInDisplayWordJap.shift();\n                      correctTyping();\n                    } else {\n                      bonusCountReset();\n                    };\n              };\n        \n        // 小さい\"っ\"の場合\n        } else if (charArrayInDisplayWordJap[0].textContent === \"っ\") {\n\n            if (keyDownChar.key !== \"a\"\n                && keyDownChar.key !== \"i\"\n                && keyDownChar.key !== \"u\"\n                && keyDownChar.key !== \"e\"\n                && keyDownChar.key !== \"o\"\n                && keyDownChar.key !== \"n\") {\n                    if (shiftAlreadyStartedFlag === 0 ) {\n                      keyTempForSmallTsu = keyDownChar.key;\n                      shiftAlreadyStartedFlag = 1;\n                    } else {\n                        if(keyDownChar.key === keyTempForSmallTsu) {\n                          keyTempForSmallTsu = \"\";\n                          charArrayInDisplayWordJap[0].className = \"add_red\";\n                          charArrayInDisplayWordJap.shift();\n                          shiftAlreadyStartedFlag = 0;\n                          keyTempForSmallTsuSoleFlag = 0;\n                          correctTyping();\n                        } else if ((keyTempForSmallTsu === \"l\" || keyTempForSmallTsu === \"x\")\n                                    && keyDownChar.key === \"t\") {\n                                      keyTempForSmallTsu = keyDownChar.key;\n                                      keyTempForSmallTsuSoleFlag = 1;\n                                      correctTyping();\n                        } else if(keyTempForSmallTsu === \"t\" && keyDownChar.key === \"s\"){\n                                      keyTempForSmallTsu = keyDownChar.key;\n                                      correctTyping();\n                        } else {\n                          keyTempForSmallTsu = keyDownChar.key;\n                          bonusCountReset();\n                        };\n                    };\n            } else if (keyTempForSmallTsuSoleFlag === 1\n                      && keyDownChar.key === \"u\"){\n                        keyTempForSmallTsu = \"\";\n                        charArrayInDisplayWordJap[0].className = \"add_red\";\n                        charArrayInDisplayWordJap.shift();\n                        shiftAlreadyStartedFlag = 0;\n                        keyTempForSmallTsuSoleFlag = 0;\n                        correctTyping();\n            } else {\n              keyTempForSmallTsu = keyDownChar.key;\n              bonusCountReset();\n            };\n\n        // 上記以外の場合\n        } else {\n          let wordLetter = charArrayInDisplayWordJap[0].textContent;\n                  // ローマ字変換の複数パターンをsplitする。\n              if (shiftAlreadyStartedFlag === 0 ){\n                  // ローマ字変換パターン１をsplitする。\n                  charArrayInDisplayWordAlpha = romaMappingTable[wordLetter].split(\"\").map(function(value){\n                  let spanValue = document.createElement(\"span\");\n                  spanValue.textContent = value;\n                  return spanValue;\n                });\n                  // ローマ字変換パターン２が存在する場合はsplitする。\n                  if (romaMappingTableSecond[wordLetter] != null){\n                    charArrayInDisplayWordAlphaSecond = romaMappingTableSecond[wordLetter].split(\"\").map(function(value){\n                    let spanValue = document.createElement(\"span\");\n                    spanValue.textContent = value;\n                    return spanValue;\n                  });\n                };\n                  // ローマ字変換パターン３が存在する場合はsplitする。\n                  if (romaMappingTableThird[wordLetter] != null){\n                    charArrayInDisplayWordAlphaThird = romaMappingTableThird[wordLetter].split(\"\").map(function(value){\n                    let spanValue = document.createElement(\"span\");\n                    spanValue.textContent = value;\n                    return spanValue;\n                  });\n                };\n              };\n              // タイプキーがローマ字変換パターン１に該当する場合\n              if(keyDownChar.key === charArrayInDisplayWordAlpha[0].textContent) {\n                  charArrayInDisplayWordAlpha.shift();\n                  shiftAlreadyStartedFlag = 1;\n                  shiftAlreadyStartedFlagSoleSecondThird = 1;\n                  if(charArrayInDisplayWordAlpha.length === 0){\n                    charArrayInDisplayWordJap[0].className = \"add_red\";\n                    charArrayInDisplayWordJap.shift();\n                    shiftAlreadyStartedFlag = 0;\n                  }};\n              // タイプキーがローマ字変換パターン２に該当する場合\n              if (romaMappingTableSecond[wordLetter] != null){\n                  if(keyDownChar.key === charArrayInDisplayWordAlphaSecond[0].textContent\n                      && charArrayInDisplayWordAlpha.length !== 0){\n                    charArrayInDisplayWordAlphaSecond.shift();\n                    shiftAlreadyStartedFlag = 1;\n                    shiftAlreadyStartedFlagSoleSecondThird = 1;\n                    if(charArrayInDisplayWordAlphaSecond.length === 0){\n                      charArrayInDisplayWordJap[0].className = \"add_red\";\n                      charArrayInDisplayWordJap.shift();\n                      shiftAlreadyStartedFlag = 0;\n                  }}};\n              // タイプキーがローマ字変換パターン３に該当する場合\n              if (romaMappingTableThird[wordLetter] != null){\n                  if(keyDownChar.key === charArrayInDisplayWordAlphaThird[0].textContent\n                    && charArrayInDisplayWordAlpha.length !== 0\n                    && charArrayInDisplayWordAlphaSecond.length !== 0){\n                    charArrayInDisplayWordAlphaThird.shift();\n                    shiftAlreadyStartedFlag = 1;\n                    shiftAlreadyStartedFlagSoleSecondThird = 1;\n                    if(charArrayInDisplayWordAlphaThird.length === 0){\n                      charArrayInDisplayWordJap[0].className = \"add_red\";\n                      charArrayInDisplayWordJap.shift();\n                      shiftAlreadyStartedFlag = 0;\n                    }}};\n              // タイプキーがローマ字変換パターン１〜３のいずれかに該当する場合\n              if (shiftAlreadyStartedFlagSoleSecondThird === 1) {\n                correctTyping(); \n                shiftAlreadyStartedFlagSoleSecondThird = 0;\n              } else {\n                bonusCountReset();\n              };\n        };\n    };\n\n\n    function correctTyping(){\n      // メーターを更新する。\n      bonusCountMeter = bonusCountMeter +1;\n      // 表示文字全てタイプした場合、スコアアップ処理を実施し、次の表示文字を作成する処理を実施する。\n      if(charArrayInDisplayWordJap.length === 0) countUpScore(), createDisplayWord();\n      // メーターがメーター最大値以上になった場合、メーターを初期化し、プレイ可能時間を延長する。\n      if(bonusCountMeter >= bonusCountMeterMax){\n        bonusCountMeter = 0;\n        // 初期プレイ時間を更新することで、残りプレイ可能時間を延長する。\n        initialPlayingTimeMSec = initialPlayingTimeMSec +bonusAddPlayTime;\n        // 延長した残りプレイ時間を表示する。\n        displayBonusAddPlayTime.textContent = \"+ \" + Math.ceil(bonusAddPlayTime/1000) + \"秒\";\n        // 延長した残りプレイ時間をフェードアウトする。\n        displayBonusAddPlayTime.classList.add('fadeout');\n        // fadeoutのclassを取り除くことで、2回目以降も延長した残りプレイ時間が表示されるようにする。\n        setTimeout(function(){ \n          displayBonusAddPlayTime.textContent = \"\";\n          displayBonusAddPlayTime.classList.remove('fadeout');\n        }, 2000);\n      };\n      // 更新したメーターを表示する。\n      document.getElementById(\"meterImg\").src=imgArray[bonusCountMeter];\n    };\n\n    function bonusCountReset(){\n      bonusCountMeter = 0;\n      document.getElementById(\"meterImg\").src=imgArray[bonusCountMeter];\n    };\n  }\n});\n"]},"metadata":{},"sourceType":"module"}