{"ast":null,"code":"// ゲーム開始画面から遷移してきた際に処理を実施する。\nwindow.addEventListener('load', function () {\n  // Enterを押下するとゲーム開始のカウントダウンがスタートする処理を呼び出す。\n  document.addEventListener(\"keydown\", keyDownGameStart);\n}); // スペースかEnterキー押下によるゲームスタートを一回限りとするフラグを設定する。\n\nvar gameStartEnterOnlyOnce = \"0\"; // スペースかEnterキーを押下するとゲーム開始のカウントダウンがスタートする。\n\nfunction keyDownGameStart(keyDownEnter) {\n  if ((keyDownEnter.key === 'Enter' || keyDownEnter.key === \" \") && gameStartEnterOnlyOnce == \"0\") {\n    // 表示されている文字を非表示にする。\n    document.getElementById(\"useKeyboardPopup\").className = \"transparent\";\n    document.getElementById(\"pressEnterPopup\").className = \"transparent\";\n    document.getElementById(\"annotationAudio\").className = \"transparent\";\n    document.getElementById(\"backBtnTypingPlay\").className = \"transparent\";\n    gameStartEnterOnlyOnce = \"1\";\n    gameStart();\n  }\n\n  ;\n}\n\n; // 選択した英単語難易度によって変わるwordListの定義\n\nvar wordList = gon.wordListAll; // 選択したプレイモードによって変わるplayModeの定義\n\nvar playMode = gon.playMode; // 出題順の設定によって変わるpronounceModeの定義\n\nvar questionOrderMode = gon.questionOrderMode; // 英単語の発音有無の設定によって変わるpronounceModeの定義\n\nvar pronounceMode = gon.pronounceMode; // BGMの設定によって変わるbgmModeの定義\n\nvar bgmMode = gon.bgmMode; // タイプ音の設定によって変わるtypeAudioModeの定義\n\nvar typeAudioMode = gon.typeAudioMode; // 正解音の設定によって変わるcorrectAudioModeの定義\n\nvar correctAudioMode = gon.correctAudioMode; // ミス音の設定によって変わるincorrectAudioModeの定義\n\nvar incorrectAudioMode = gon.incorrectAudioMode; // 英単語を順番に出題する場合の番号の初期値を定義する。\n\nvar sortById = 0;\n\nfunction gameStart() {\n  // 表示する単語リストを定義する。\n  // chromeの場合\"ff\"が正常に動作しない。\n  // 表示するメーターリストを定義する。\n  var imgArray = ['/assets/メーターPNG/メーター0.png', '/assets/メーターPNG/メーター10_yellow.png', '/assets/メーターPNG/メーター20_yellow.png', '/assets/メーターPNG/メーター30_yellow.png', '/assets/メーターPNG/メーター40_yellow.png', '/assets/メーターPNG/メーター50_yellow.png', '/assets/メーターPNG/メーター60_yellow.png', '/assets/メーターPNG/メーター70_yellow.png', '/assets/メーターPNG/メーター80_yellow.png', '/assets/メーターPNG/メーター90_yellow.png', '/assets/メーターPNG/メーター100_yellow.png', '/assets/メーターPNG/メーター10_green.png', '/assets/メーターPNG/メーター20_green.png', '/assets/メーターPNG/メーター30_green.png', '/assets/メーターPNG/メーター40_green.png', '/assets/メーターPNG/メーター50_green.png', '/assets/メーターPNG/メーター60_green.png', '/assets/メーターPNG/メーター70_green.png', '/assets/メーターPNG/メーター80_green.png', '/assets/メーターPNG/メーター90_green.png', '/assets/メーターPNG/メーター100_green.png', '/assets/メーターPNG/メーター10_blue.png', '/assets/メーターPNG/メーター20_blue.png', '/assets/メーターPNG/メーター30_blue.png', '/assets/メーターPNG/メーター40_blue.png', '/assets/メーターPNG/メーター50_blue.png', '/assets/メーターPNG/メーター60_blue.png', '/assets/メーターPNG/メーター70_blue.png', '/assets/メーターPNG/メーター80_blue.png', '/assets/メーターPNG/メーター90_blue.png', '/assets/メーターPNG/メーター100_blue.png', '/assets/メーターPNG/メーター10_pink.png', '/assets/メーターPNG/メーター20_pink.png', '/assets/メーターPNG/メーター30_pink.png', '/assets/メーターPNG/メーター40_pink.png', '/assets/メーターPNG/メーター50_pink.png', '/assets/メーターPNG/メーター60_pink.png', '/assets/メーターPNG/メーター70_pink.png', '/assets/メーターPNG/メーター80_pink.png', '/assets/メーターPNG/メーター90_pink.png', '/assets/メーターPNG/メーター100_pink.png', '/assets/メーターPNG/メーター10_red.png', '/assets/メーターPNG/メーター20_red.png', '/assets/メーターPNG/メーター30_red.png', '/assets/メーターPNG/メーター40_red.png', '/assets/メーターPNG/メーター50_red.png', '/assets/メーターPNG/メーター60_red.png', '/assets/メーターPNG/メーター70_red.png', '/assets/メーターPNG/メーター80_red.png', '/assets/メーターPNG/メーター90_red.png', '/assets/メーターPNG/メーター100_red.png']; // 表示するメーター初期値を定義する。\n\n  var bonusCountMeter = 0; // 表示するメーター最大値を定義する。\n\n  var bonusCountMeterMax = 50; // 表示するプレイ延長時間を定義する。\n\n  var displayBonusAddPlayTime = document.getElementById(\"displayBonusAddPlayTime\");\n  displayBonusAddPlayTime.className = \"displayBonusAddPlayTime\"; // メーター最大値に達した際の延長するプレイ時間を定義する。\n\n  var bonusAddPlayTime = 3000; // メーターの初期値を表示する。\n\n  document.getElementById(\"meterImg\").src = imgArray[bonusCountMeter]; // ゲーム開始までをカウントダウン変数を定義する。\n\n  var countDownPopup = document.getElementById(\"countDownPopup\"); // class属性を付与する。\n\n  countDownPopup.className = \"countDownPopup\"; // ゲーム開始までをカウントダウン変数の初期値を定義する。\n\n  var countDownPopupNumber = 3; // ゲーム開始までをカウントダウン変数の初期値を表示する。\n\n  countDownPopup.textContent = countDownPopupNumber; // ゲーム開始までをカウントダウンを1秒ごとに実施するように定義する。\n\n  var timerIdToStart = setInterval(countDownTimeToStart, 1000); // ゲーム開始までをカウントダウンを実施する処理を定義する。\n\n  function countDownTimeToStart() {\n    // カウントダウン文字を１ずつ減らす。\n    countDownPopupNumber = countDownPopupNumber - 1; //カウントダウンが0になれば、ゲームを開始する。\n\n    if (countDownPopupNumber <= 0) {\n      clearInterval(timerIdToStart); // カウントダウンポップアップのクラスを変更し、非表示にする。\n\n      countDownPopup.className = \"countDownPopupAfterClose\";\n      typingPlayStart();\n    } else {\n      countDownPopup.textContent = countDownPopupNumber;\n    }\n  } // ゲームを開始する処理を定義する。\n\n\n  function typingPlayStart() {\n    // 表示する単語を定義する。\n    var displayWord = document.getElementById(\"displayWord\");\n    displayWord.className = \"displayWord\";\n    var displayWordJapanese = document.getElementById(\"displayWordJapanese\");\n    displayWordJapanese.className = \"displayWordJapanese\";\n    var displayWordAnnotation = document.getElementById(\"displayWordAnnotation\");\n    displayWordAnnotation.className = \"transparent\"; // 表示する単語を一文字ずつに分ける変数を定義する。\n\n    var charArrayInDisplayWord = []; // ゲーム終了を判定するフラグを定義する。\n\n    var playEndFlag = \"0\"; // 表示する単語を作成する。\n\n    createDisplayWord(); // プレイ開始時間を取得する。\n\n    var startTime = Date.now(); // 表示する残りのプレイ可能時間を定義する。\n\n    var remainPlayingTime = document.getElementById(\"remainPlayingTime\");\n    remainPlayingTime.className = \"remainPlayingTime\"; // 表示するスタート時のプレイ可能時間を定義する。--------------------------------------------------------------\n\n    var initialPlayingTimeMSec = 300000; // スタート時に残りのプレイ可能時間の初期値を表示するためにcountDownTimeを実施する。\n\n    setTimeout(countDownTime, 0); // 1秒ごとにcountDownTimeを実施するように定義する。\n\n    var timerId = setInterval(countDownTime, 1000); // 正解時に表示する丸を定義する。\n\n    document.getElementById(\"circleImg\").src = '/assets/正解○.png';\n    circleImg.classList.add('transparent'); // \"発音を聞く\"ボタンを表示する。\n\n    var pronounceAgainButton = document.getElementById(\"pronounceAgainButton\");\n    pronounceAgainButton.innerHTML = \"発音を聞く\";\n    pronounceAgainButton.className = \"pronounceAgainButton\";\n\n    pronounceAgainButton.onclick = function () {\n      pronounce(displayWordInList.eng_word);\n    }; // \"ヒントを見る\"ボタンを表示する。(プレイモード普通、正確重視の時のみ機能)\n\n\n    var hintButton = document.getElementById(\"hintButton\");\n    hintButton.innerHTML = \"ヒントを見る\";\n\n    if (playMode == \"普通\" || playMode == \"正確重視\") {\n      hintButton.className = \"hintButton\";\n\n      hintButton.onclick = function () {\n        charArrayInDisplayWord[0].classList.remove('transparent');\n      };\n    } else {\n      hintButton.className = \"hintButtonPractice\";\n    }\n\n    ; // \"答えを見る\"ボタンを表示する。(プレイモード普通、正確重視の時のみ機能)\n\n    var answerButton = document.getElementById(\"answerButton\");\n    answerButton.innerHTML = \"答えを見る\";\n\n    if (playMode == \"普通\" || playMode == \"正確重視\") {\n      answerButton.className = \"answerButton\";\n\n      answerButton.onclick = function () {\n        for (var i = 0; i < charArrayInDisplayWord.length; i++) {\n          charArrayInDisplayWord[i].classList.remove('transparent');\n        } // 連続正解数を0に戻す。\n\n\n        totalConsecutiveNumCorrectNum = 0;\n        displayConsecutiveNumCorrectNum.textContent = totalConsecutiveNumCorrectNum; // メーターを初期値に戻す。\n\n        bonusCountMeter = 0;\n        document.getElementById(\"meterImg\").src = imgArray[bonusCountMeter];\n      };\n    } else {\n      answerButton.className = \"answerButtonPractice\";\n    }\n\n    ; // \"最初からやり直す\"ボタンを表示する。\n\n    var restartButtonMidGame = document.getElementById(\"restartButtonMidGame\");\n    restartButtonMidGame.classList.remove('transparent'); // \"コース選択画面に戻る\"ボタンを表示する。\n\n    var courseSettingBackButtonMidGame = document.getElementById(\"courseSettingBackButtonMidGame\");\n    courseSettingBackButtonMidGame.classList.remove('transparent'); // 以下、スコア定義---------------------------------------------------------------------------------------------------\n    // -----------------------------------------------------------------------------------------------------------------\n    // 表示するスコアを定義する。\n\n    var displayScore = document.getElementById(\"displayScore\");\n    displayScore.className = \"displayScore\"; // 合計スコアの初期値を定義する。\n\n    var totalScore = 0; // 表示するスコアに初期値を定義する。\n\n    displayScore.textContent = totalScore + \" P\"; // スコアアップする基準を定義する。\n\n    var refTextLengthForCountUpLevel1 = 4;\n    var addScoreLevel1 = 1000;\n    var addScoreLevel2 = 3000; // 表示する正解数を定義する。\n\n    var displayNumCorrectWord = document.getElementById(\"displayNumCorrectWord\");\n    displayNumCorrectWord.className = \"displayNumCorrectWord\";\n    displayNumCorrectWord.textContent = \"合計正解数\";\n    var displayNumCorrectNum = document.getElementById(\"displayNumCorrectNum\");\n    displayNumCorrectNum.className = \"displayNumCorrectNum\";\n    var totalNumCorrectNum = 0;\n    displayNumCorrectNum.textContent = totalNumCorrectNum; // 表示する連続正解数を定義する。\n\n    var displayConsecutiveNumCorrectWord = document.getElementById(\"displayConsecutiveNumCorrectWord\");\n    displayConsecutiveNumCorrectWord.className = \"displayConsecutiveNumCorrectWord\";\n    displayConsecutiveNumCorrectWord.textContent = \"連続正解数\";\n    var displayConsecutiveNumCorrectNum = document.getElementById(\"displayConsecutiveNumCorrectNum\");\n    displayConsecutiveNumCorrectNum.className = \"displayConsecutiveNumCorrectNum\";\n    var totalConsecutiveNumCorrectNum = 0;\n    displayConsecutiveNumCorrectNum.textContent = totalConsecutiveNumCorrectNum; // 表示する最高連続正解数を定義する。\n\n    var displayMaxConsecutiveNumCorrectWord = document.getElementById(\"displayMaxConsecutiveNumCorrectWord\");\n    displayMaxConsecutiveNumCorrectWord.className = \"displayMaxConsecutiveNumCorrectWord\";\n    displayMaxConsecutiveNumCorrectWord.textContent = \"最高連続正解数\";\n    var displayMaxConsecutiveNumCorrectNum = document.getElementById(\"displayMaxConsecutiveNumCorrectNum\");\n    displayMaxConsecutiveNumCorrectNum.className = \"displayMaxConsecutiveNumCorrectNum\";\n    var totalMaxConsecutiveNumCorrectNum = 0;\n    displayMaxConsecutiveNumCorrectNum.textContent = totalMaxConsecutiveNumCorrectNum; // 以上、スコア定義---------------------------------------------------------------------------------------------------\n    // -----------------------------------------------------------------------------------------------------------------\n    // タイプされる度にkeyDownCharCountUpを実施するように定義する。\n\n    document.addEventListener(\"keydown\", keyDownCharCountUp); // 表示する単語を作成する処理を定義する。\n\n    function createDisplayWord() {\n      // すでにゲームが終了している場合、新規ワードを生成しない。ゲーム中のみ生成する。\n      // ギリギリで問題に正解した場合、○を表示した後、200m秒後にワードを生成する処理が走るため。\n      if (playEndFlag === \"0\") {\n        // 表示単語を初期化する。\n        displayWord.textContent = \"\"; // 出題順の設定により、displayWordInListを変更\n\n        if (questionOrderMode == \"番号順\") {\n          // 英単語を順番に出題する場合の番号の初期値を定義する。\n          displayWordInList = wordList[sortById];\n          sortById++; // // sortByIdが出題英単語数を超えた場合、初期値に戻す。\n\n          if (sortById >= wordList.length) {\n            sortById = 0;\n          }\n\n          ;\n        } else {\n          // 出題順がランダムの場合\n          // 0〜textListsの総数間で整数値をランダムで算出する。\n          var randomIntegerInTotalWordList = Math.floor(Math.random() * wordList.length); // let randomIntegerInTotalWordList = Math.floor(Math.random() * 3);\n          // 表示する単語をランダムで選定する。\n\n          displayWordInList = wordList[randomIntegerInTotalWordList];\n        }\n\n        ; //表示する単語の発音させる。（発音ありの場合のみ）\n\n        if (pronounceMode == \"発音あり\") {\n          pronounce(displayWordInList.eng_word);\n        }\n\n        ; // 表示する単語の日本語訳を表示させる。\n\n        displayWordJapanese.textContent = displayWordInList.jap_trans_1; // 日本語訳が同じ英単語が複数ある場合に備えて、重複するかを判定し、重複する場合は重複する英単語を表示し、それ以外を答えるように誘導する。\n        // プレイモード練習では答えを表示しているため処理不要\n\n        if (playMode == \"普通\" || playMode == \"正確重視\") {\n          // 前の問題に注釈がある場合消す。\n          displayWordAnnotation.className = \"transparent\"; // ランダムで選ばれた英単語の日本語訳でワードリストをフィルター\n\n          var duplicateWords = wordList.filter(function (duplicateWord) {\n            return duplicateWord.jap_trans_1 == displayWordInList.jap_trans_1;\n          }); // 日本語訳が重複している他の英単語がある場合\n\n          if (duplicateWords.length > 1) {\n            // 重複している英単語の配列（この時点では答えを含む）を定義する。\n            var duplicateWordsList = [];\n\n            for (var i = 0; i < duplicateWords.length; i++) {\n              // 重複している英単語のみ（答え以外の英単語）を配列duplicateWordsListに格納する。\n              if (duplicateWords[i].id !== displayWordInList.id) {\n                duplicateWordsList.push(duplicateWords[i].eng_word);\n              }\n\n              ;\n            }\n\n            ;\n            displayWordAnnotation.textContent = \"\\u203B\".concat(duplicateWordsList, \"\\u4EE5\\u5916\");\n            displayWordAnnotation.className = \"displayWordAnnotation\";\n            console.log(displayWordAnnotation.textContent);\n          }\n\n          ;\n        }\n\n        ; // 表示する単語を一文字ごとに区切り、spanタグで閉じる。\n        // spanタグで閉じた単語を表示する。\n\n        charArrayInDisplayWord = displayWordInList.eng_word.split(\"\").map(function (value) {\n          // spanタグを作成する。\n          var spanValue = document.createElement(\"span\"); // spanタグに一文字を挿入する。\n\n          spanValue.textContent = value; // 各アルファベットに対して、transparentクラスを付与する。（プレイモード普通、正確重視のときのみ）\n\n          if (playMode == \"普通\" || playMode == \"正確重視\") {\n            spanValue.className = \"transparent\";\n          }\n\n          ; // 表示する単語にspanタグで閉じた一文字を追加する。\n\n          displayWord.appendChild(spanValue);\n          return spanValue;\n        });\n      }\n\n      ;\n    } // プレイ時間をカウントダウンする処理を定義する。\n\n\n    function countDownTime() {\n      var currentTime = Date.now();\n      var diffBetweenCurrentTimeAndStartTime = currentTime - startTime;\n      var remainMSec = initialPlayingTimeMSec - diffBetweenCurrentTimeAndStartTime;\n      var remainAllSec = Math.ceil(remainMSec / 1000);\n      var remainMin = Math.floor(remainAllSec / 60);\n      var remainSec = Math.ceil(remainAllSec % 60);\n      var remainSecLabel = \"\\u6B8B\\u308A\".concat(\"\".concat(remainMin).slice(-1), \"\\u5206\").concat(\"0\".concat(remainSec).slice(-2), \"\\u79D2\");\n\n      if (remainMSec <= 0) {\n        // ゲーム終了後にplayEndFlagを1に更新する。\n        playEndFlag = \"1\"; // プレイ時間のカウントダウンを止める。\n\n        clearInterval(timerId); // 残り時間の表示を消す。\n\n        remainSecLabel = \"\"; // 現在のスコア（左上）の表示を消す。\n\n        displayScore.textContent = \"\"; // 正解数の表示を消す。\n\n        displayNumCorrectWord.className = \"transparent\";\n        displayNumCorrectNum.className = \"transparent\"; // 連続正解数の表示を消す。\n\n        displayConsecutiveNumCorrectWord.className = \"transparent\";\n        displayConsecutiveNumCorrectNum.className = \"transparent\"; // 最高連続正解数の表示を消す。\n\n        displayMaxConsecutiveNumCorrectWord.className = \"transparent\";\n        displayMaxConsecutiveNumCorrectNum.className = \"transparent\"; // 問題の英単語の表示を消す。\n\n        displayWord.textContent = \"\"; // 解答の日本語の表示を消す。\n\n        displayWordJapanese.textContent = \"\"; // \"発音を聞く\"ボタンを消す。\n\n        pronounceAgainButton.className = \"transparent\"; // \"ヒントを見る\"ボタンを消す。\n\n        hintButton.className = \"transparent\"; // \"答えを見る\"ボタンを消す。\n\n        answerButton.className = \"transparent\"; // 注釈を消す。（プレイモード普通、正確重視の時のみ）\n\n        if (playMode == \"普通\" || playMode == \"正確重視\") {\n          displayWordAnnotation.className = \"transparent\";\n        }\n\n        ; // \"最初からやり直す\"ボタンを消す。\n\n        restartButtonMidGame.className = \"transparent\"; // \"コース選択画面に戻る\"ボタンを消す。\n\n        courseSettingBackButtonMidGame.className = \"transparent\"; // 正解時に表示される○の画像を消す。\n\n        circleImg.className = \"transparent\"; // ゲーム終了後に終了を知らせるポップアップを作成する。\n        // ゲーム終了を知らせるポップアップを定義する。\n\n        var closePopup = document.getElementById(\"closePopup\");\n        closePopup.textContent = \"終了\";\n        closePopup.className = \"closePopup\"; // 戻るボタンを定義する。\n\n        var backBtn = document.getElementById(\"backBtn\"); // もう一度ボタンを定義する。\n\n        var restartBtn = document.getElementById(\"restartBtn\"); // 2秒後に得点を表示させる。また、もう一度ボタンと戻るボタンを表示させる。\n\n        setTimeout(function () {\n          // 得点の表示\n          closePopup.textContent = \"\\u3042\\u306A\\u305F\\u306E\\u5F97\\u70B9\\u306F\".concat(totalScore.toLocaleString(), \"\\u70B9\\u3067\\u3059!\");\n          closePopup.className = \"endResultPopup\"; // もう一度ボタンの表示（transparentを消して表示させる）\n\n          restartBtn.classList.remove('transparent'); // 戻るボタンの表示（transparentを消して表示させる）\n\n          backBtn.classList.remove('transparent');\n        }, 2000);\n      } // 残りプレイ可能時間を更新する。\n\n\n      remainPlayingTime.textContent = remainSecLabel;\n    }\n\n    ; // スコアをアップし、現在のtotalScoreを表示する処理を定義する。\n\n    function countUpScore() {\n      if (displayWord.textContent.length < refTextLengthForCountUpLevel1) {\n        addPoint = addScoreLevel1;\n      } else {\n        addPoint = addScoreLevel2;\n      }\n\n      totalScore = totalScore + addPoint;\n      displayScore.textContent = \"\".concat(totalScore.toLocaleString(), \" P\");\n    } // 正解数をカウントアップする処理を定義する。\n\n\n    function countUpCorrectNum() {\n      // 合計正解数のカウントアップ\n      totalNumCorrectNum = totalNumCorrectNum + 1;\n      displayNumCorrectNum.textContent = totalNumCorrectNum; // 連続正解数のカウントアップ\n\n      totalConsecutiveNumCorrectNum = totalConsecutiveNumCorrectNum + 1;\n      displayConsecutiveNumCorrectNum.textContent = totalConsecutiveNumCorrectNum; // 最高連続正解数のカウントアップ\n\n      if (totalMaxConsecutiveNumCorrectNum < totalConsecutiveNumCorrectNum) {\n        totalMaxConsecutiveNumCorrectNum = totalMaxConsecutiveNumCorrectNum + 1;\n        displayMaxConsecutiveNumCorrectNum.textContent = totalMaxConsecutiveNumCorrectNum;\n      }\n\n      ;\n    }\n\n    ; // ゲーム中にタイプした文字が表示文字と一致する場合、不一致の場合の処理を定義する。\n\n    function keyDownCharCountUp(keyDownChar) {\n      if (keyDownChar.key === charArrayInDisplayWord[0].textContent && playEndFlag === \"0\") {\n        correctTyping();\n      } else if (keyDownChar.key === \"e\" && charArrayInDisplayWord[0].textContent === \"é\" && playEndFlag === \"0\") {\n        // éの場合は例外的にeでOKとする。\n        correctTyping();\n      } else if (playEndFlag === \"0\") {\n        // タイプミス音を発生させる。\n        typeMissAudio();\n      } else {}\n\n      ;\n    }\n\n    ; // タイプした文字が表示文字と一致する場合の処理を定義する。\n\n    function correctTyping() {\n      // タイプ音を定義する。\n      // タイプ音ありの場合のみ\n      if (typeAudioMode == \"タイプ音あり\") {\n        var _typeAudioMode = new Audio('/assets/typeAudio.mp3'); // タイプ音を発生させる。\n\n\n        _typeAudioMode.volume = 0.3;\n\n        _typeAudioMode.play();\n      }\n\n      ; // 文字色を変更する。\n\n      charArrayInDisplayWord[0].className = \"add_red\"; // メーターを更新する。\n\n      bonusCountMeter = bonusCountMeter + 1; // 一致した文字を配列から削除する。\n\n      charArrayInDisplayWord.shift(); // 表示文字全てタイプした場合、スコアアップ処理を実施し、次の表示文字を作成する処理を実施する。\n\n      if (charArrayInDisplayWord.length === 0) {\n        // 正解音を定義する。\n        // 正解音ありの場合のみ\n        if (correctAudioMode == \"正解音あり\") {\n          var correctAudio = new Audio('/assets/correctAudio.mp3'); // 正解した場合、効果音を発生させる。\n\n          correctAudio.volume = 0.3;\n          correctAudio.play();\n        }\n\n        ;\n        countUpScore();\n        countUpCorrectNum();\n        circleImg.classList.add('circle');\n        circleImg.classList.remove('transparent');\n        setTimeout(createDisplayWord, 200);\n        setTimeout(function () {\n          circleImg.classList.add('transparent');\n          circleImg.classList.remove('circle');\n        }, 200);\n      }\n\n      ; // メーターがメーター最大値以上になった場合、メーターを初期化し、プレイ可能時間を延長する。\n\n      if (bonusCountMeter >= bonusCountMeterMax) {\n        bonusCountMeter = 0; // 初期プレイ時間を更新することで、残りプレイ可能時間を延長する。\n\n        initialPlayingTimeMSec = initialPlayingTimeMSec + bonusAddPlayTime; // 延長した残りプレイ時間を表示する。\n\n        displayBonusAddPlayTime.textContent = \"+ \" + Math.ceil(bonusAddPlayTime / 1000) + \"秒\"; // 延長した残りプレイ時間をフェードアウトする。\n\n        displayBonusAddPlayTime.classList.add('fadeout'); // fadeoutのclassを取り除くことで、2回目以降も延長した残りプレイ時間が表示されるようにする。\n\n        setTimeout(function () {\n          displayBonusAddPlayTime.textContent = \"\";\n          displayBonusAddPlayTime.classList.remove('fadeout');\n        }, 2000);\n      }\n\n      ; // 更新したメーターを表示する。\n\n      document.getElementById(\"meterImg\").src = imgArray[bonusCountMeter];\n    }\n\n    ; // タイプした文字が表示文字と不一致の場合の処理を定義する。\n\n    function typeMissAudio() {\n      // ミス音を定義する。\n      // ミス音ありの場合のみ\n      if (incorrectAudioMode == \"ミス音あり\") {\n        var incorrectAudio = new Audio('/assets/incorrectAudio.mp3'); // ミス音の場合、効果音を発生させる。\n\n        incorrectAudio.volume = 0.3;\n        incorrectAudio.play();\n      }\n\n      ;\n    }\n\n    ; // 英単語を生成した際に、発音させる処理を定義する。\n\n    function pronounce(eng_word) {\n      // résuméの場合は音声ファイルの検索ができないため、ファイルを変更\n      if (eng_word == \"résumé\") {\n        eng_word = \"rezumei\";\n      }\n\n      ;\n      var pronunciation = new Audio('/assets/発音/' + eng_word + '.mp3');\n      pronunciation.play();\n    }\n\n    ;\n  }\n}\n\n;","map":{"version":3,"sources":["/Users/mondenhiroki/projects/eigomonster/app/javascript/packs/typingplay_eng.js"],"names":["window","addEventListener","document","keyDownGameStart","gameStartEnterOnlyOnce","keyDownEnter","key","getElementById","className","gameStart","wordList","gon","wordListAll","playMode","questionOrderMode","pronounceMode","bgmMode","typeAudioMode","correctAudioMode","incorrectAudioMode","sortById","imgArray","bonusCountMeter","bonusCountMeterMax","displayBonusAddPlayTime","bonusAddPlayTime","src","countDownPopup","countDownPopupNumber","textContent","timerIdToStart","setInterval","countDownTimeToStart","clearInterval","typingPlayStart","displayWord","displayWordJapanese","displayWordAnnotation","charArrayInDisplayWord","playEndFlag","createDisplayWord","startTime","Date","now","remainPlayingTime","initialPlayingTimeMSec","setTimeout","countDownTime","timerId","circleImg","classList","add","pronounceAgainButton","innerHTML","onclick","pronounce","displayWordInList","eng_word","hintButton","remove","answerButton","i","length","totalConsecutiveNumCorrectNum","displayConsecutiveNumCorrectNum","restartButtonMidGame","courseSettingBackButtonMidGame","displayScore","totalScore","refTextLengthForCountUpLevel1","addScoreLevel1","addScoreLevel2","displayNumCorrectWord","displayNumCorrectNum","totalNumCorrectNum","displayConsecutiveNumCorrectWord","displayMaxConsecutiveNumCorrectWord","displayMaxConsecutiveNumCorrectNum","totalMaxConsecutiveNumCorrectNum","keyDownCharCountUp","randomIntegerInTotalWordList","Math","floor","random","jap_trans_1","duplicateWords","filter","duplicateWord","duplicateWordsList","id","push","console","log","split","map","value","spanValue","createElement","appendChild","currentTime","diffBetweenCurrentTimeAndStartTime","remainMSec","remainAllSec","ceil","remainMin","remainSec","remainSecLabel","slice","closePopup","backBtn","restartBtn","toLocaleString","countUpScore","addPoint","countUpCorrectNum","keyDownChar","correctTyping","typeMissAudio","Audio","volume","play","shift","correctAudio","incorrectAudio","pronunciation"],"mappings":"AAAA;AACAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,YAAU;AACzC;AACAC,EAAAA,QAAQ,CAACD,gBAAT,YAAqCE,gBAArC;AACA,CAHD,E,CAKA;;AACC,IAAIC,sBAAsB,GAAG,GAA7B,C,CAED;;AACA,SAASD,gBAAT,CAA0BE,YAA1B,EAAuC;AACtC,MAAI,CAACA,YAAY,CAACC,GAAb,KAAqB,OAArB,IAAgCD,YAAY,CAACC,GAAb,KAAqB,GAAtD,KAA8DF,sBAAsB,IAAI,GAA5F,EAAiG;AAChG;AACAF,IAAAA,QAAQ,CAACK,cAAT,CAAwB,kBAAxB,EAA4CC,SAA5C,GAAwD,aAAxD;AACAN,IAAAA,QAAQ,CAACK,cAAT,CAAwB,iBAAxB,EAA2CC,SAA3C,GAAuD,aAAvD;AACAN,IAAAA,QAAQ,CAACK,cAAT,CAAwB,iBAAxB,EAA2CC,SAA3C,GAAuD,aAAvD;AACAN,IAAAA,QAAQ,CAACK,cAAT,CAAwB,mBAAxB,EAA6CC,SAA7C,GAAyD,aAAzD;AACAJ,IAAAA,sBAAsB,GAAG,GAAzB;AACAK,IAAAA,SAAS;AACT;;AAAA;AACD;;AAAA,C,CACA;;AACA,IAAMC,QAAQ,GAAGC,GAAG,CAACC,WAArB,C,CAEA;;AACA,IAAMC,QAAQ,GAAGF,GAAG,CAACE,QAArB,C,CAEA;;AACA,IAAMC,iBAAiB,GAAGH,GAAG,CAACG,iBAA9B,C,CAEA;;AACA,IAAMC,aAAa,GAAGJ,GAAG,CAACI,aAA1B,C,CAEA;;AACA,IAAMC,OAAO,GAAGL,GAAG,CAACK,OAApB,C,CAEA;;AACA,IAAMC,aAAa,GAAGN,GAAG,CAACM,aAA1B,C,CAEA;;AACA,IAAMC,gBAAgB,GAAGP,GAAG,CAACO,gBAA7B,C,CAEA;;AACA,IAAMC,kBAAkB,GAAGR,GAAG,CAACQ,kBAA/B,C,CAEA;;AACA,IAAIC,QAAQ,GAAG,CAAf;;AAGD,SAASX,SAAT,GAAoB;AAElB;AACA;AAEA;AACA,MAAMY,QAAQ,GAAE,CACd,2BADc,EAEd,mCAFc,EAGd,mCAHc,EAId,mCAJc,EAKd,mCALc,EAMd,mCANc,EAOd,mCAPc,EAQd,mCARc,EASd,mCATc,EAUd,mCAVc,EAWd,oCAXc,EAYjB,kCAZiB,EAad,kCAbc,EAcd,kCAdc,EAed,kCAfc,EAgBd,kCAhBc,EAiBd,kCAjBc,EAkBd,kCAlBc,EAmBd,kCAnBc,EAoBd,kCApBc,EAqBd,mCArBc,EAsBjB,iCAtBiB,EAuBd,iCAvBc,EAwBd,iCAxBc,EAyBd,iCAzBc,EA0Bd,iCA1Bc,EA2Bd,iCA3Bc,EA4Bd,iCA5Bc,EA6Bd,iCA7Bc,EA8Bd,iCA9Bc,EA+Bd,kCA/Bc,EAgCjB,iCAhCiB,EAiCd,iCAjCc,EAkCd,iCAlCc,EAmCd,iCAnCc,EAoCd,iCApCc,EAqCd,iCArCc,EAsCd,iCAtCc,EAuCd,iCAvCc,EAwCd,iCAxCc,EAyCd,kCAzCc,EA0CjB,gCA1CiB,EA2Cd,gCA3Cc,EA4Cd,gCA5Cc,EA6Cd,gCA7Cc,EA8Cd,gCA9Cc,EA+Cd,gCA/Cc,EAgDd,gCAhDc,EAiDd,gCAjDc,EAkDd,gCAlDc,EAmDd,iCAnDc,CAAhB,CANkB,CA4DlB;;AACA,MAAIC,eAAe,GAAG,CAAtB,CA7DkB,CA8DlB;;AACA,MAAMC,kBAAkB,GAAG,EAA3B,CA/DkB,CAgElB;;AACA,MAAMC,uBAAuB,GAAGtB,QAAQ,CAACK,cAAT,CAAwB,yBAAxB,CAAhC;AACAiB,EAAAA,uBAAuB,CAAChB,SAAxB,GAAqC,yBAArC,CAlEkB,CAmElB;;AACA,MAAMiB,gBAAgB,GAAG,IAAzB,CApEkB,CAsElB;;AACAvB,EAAAA,QAAQ,CAACK,cAAT,CAAwB,UAAxB,EAAoCmB,GAApC,GAAwCL,QAAQ,CAACC,eAAD,CAAhD,CAvEkB,CAwElB;;AACA,MAAIK,cAAc,GAAGzB,QAAQ,CAACK,cAAT,CAAwB,gBAAxB,CAArB,CAzEkB,CA0ElB;;AACAoB,EAAAA,cAAc,CAACnB,SAAf,GAA2B,gBAA3B,CA3EkB,CA4ElB;;AACA,MAAIoB,oBAAoB,GAAG,CAA3B,CA7EkB,CA8ElB;;AACAD,EAAAA,cAAc,CAACE,WAAf,GAA6BD,oBAA7B,CA/EkB,CAkFlB;;AACA,MAAME,cAAc,GAAGC,WAAW,CAACC,oBAAD,EAAsB,IAAtB,CAAlC,CAnFkB,CAqFlB;;AACA,WAASA,oBAAT,GAA+B;AAC/B;AACAJ,IAAAA,oBAAoB,GAAGA,oBAAoB,GAAG,CAA9C,CAF+B,CAG/B;;AACA,QAAIA,oBAAoB,IAAI,CAA5B,EAA8B;AAC9BK,MAAAA,aAAa,CAACH,cAAD,CAAb,CAD8B,CAE9B;;AACAH,MAAAA,cAAc,CAACnB,SAAf,GAA2B,0BAA3B;AACA0B,MAAAA,eAAe;AACd,KALD,MAKO;AACPP,MAAAA,cAAc,CAACE,WAAf,GAA6BD,oBAA7B;AACC;AACA,GAlGiB,CAoGnB;;;AACA,WAASM,eAAT,GAA0B;AAEzB;AACA,QAAMC,WAAW,GAAGjC,QAAQ,CAACK,cAAT,CAAwB,aAAxB,CAApB;AACA4B,IAAAA,WAAW,CAAC3B,SAAZ,GAAyB,aAAzB;AACA,QAAM4B,mBAAmB,GAAGlC,QAAQ,CAACK,cAAT,CAAwB,qBAAxB,CAA5B;AACA6B,IAAAA,mBAAmB,CAAC5B,SAApB,GAAiC,qBAAjC;AACA,QAAM6B,qBAAqB,GAAGnC,QAAQ,CAACK,cAAT,CAAwB,uBAAxB,CAA9B;AACA8B,IAAAA,qBAAqB,CAAC7B,SAAtB,GAAmC,aAAnC,CARyB,CASzB;;AACA,QAAI8B,sBAAsB,GAAE,EAA5B,CAVyB,CAYzB;;AACA,QAAIC,WAAW,GAAG,GAAlB,CAbyB,CAgBzB;;AACAC,IAAAA,iBAAiB,GAjBQ,CAmBzB;;AACA,QAAMC,SAAS,GAAGC,IAAI,CAACC,GAAL,EAAlB,CApByB,CAqBzB;;AACA,QAAIC,iBAAiB,GAAG1C,QAAQ,CAACK,cAAT,CAAwB,mBAAxB,CAAxB;AACAqC,IAAAA,iBAAiB,CAACpC,SAAlB,GAA+B,mBAA/B,CAvByB,CAwBzB;;AACA,QAAIqC,sBAAsB,GAAG,MAA7B,CAzByB,CA0BzB;;AACAC,IAAAA,UAAU,CAACC,aAAD,EAAe,CAAf,CAAV,CA3ByB,CA4BzB;;AACA,QAAMC,OAAO,GAAGjB,WAAW,CAACgB,aAAD,EAAe,IAAf,CAA3B,CA7ByB,CA+BzB;;AACA7C,IAAAA,QAAQ,CAACK,cAAT,CAAwB,WAAxB,EAAqCmB,GAArC,GAA0C,iBAA1C;AACAuB,IAAAA,SAAS,CAACC,SAAV,CAAoBC,GAApB,CAAwB,aAAxB,EAjCyB,CAoCzB;;AACA,QAAIC,oBAAoB,GAAGlD,QAAQ,CAACK,cAAT,CAAwB,sBAAxB,CAA3B;AACA6C,IAAAA,oBAAoB,CAACC,SAArB,GAAiC,OAAjC;AACAD,IAAAA,oBAAoB,CAAC5C,SAArB,GAAiC,sBAAjC;;AACA4C,IAAAA,oBAAoB,CAACE,OAArB,GAA+B,YAAW;AACzCC,MAAAA,SAAS,CAACC,iBAAiB,CAACC,QAAnB,CAAT;AACA,KAFD,CAxCyB,CA2CzB;;;AACA,QAAIC,UAAU,GAAGxD,QAAQ,CAACK,cAAT,CAAwB,YAAxB,CAAjB;AACAmD,IAAAA,UAAU,CAACL,SAAX,GAAuB,QAAvB;;AACA,QAAIxC,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,IAAI,MAApC,EAA6C;AAC5C6C,MAAAA,UAAU,CAAClD,SAAX,GAAuB,YAAvB;;AACAkD,MAAAA,UAAU,CAACJ,OAAX,GAAqB,YAAW;AAC/BhB,QAAAA,sBAAsB,CAAC,CAAD,CAAtB,CAA0BY,SAA1B,CAAoCS,MAApC,CAA2C,aAA3C;AACA,OAFD;AAGA,KALD,MAKO;AACND,MAAAA,UAAU,CAAClD,SAAX,GAAuB,oBAAvB;AACA;;AAAA,KArDwB,CAsDzB;;AACA,QAAIoD,YAAY,GAAG1D,QAAQ,CAACK,cAAT,CAAwB,cAAxB,CAAnB;AACAqD,IAAAA,YAAY,CAACP,SAAb,GAAyB,OAAzB;;AACA,QAAIxC,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,IAAI,MAApC,EAA6C;AAC5C+C,MAAAA,YAAY,CAACpD,SAAb,GAAyB,cAAzB;;AACAoD,MAAAA,YAAY,CAACN,OAAb,GAAuB,YAAW;AACjC,aAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGvB,sBAAsB,CAACwB,MAA3C,EAAmDD,CAAC,EAApD,EAAwD;AACvDvB,UAAAA,sBAAsB,CAACuB,CAAD,CAAtB,CAA0BX,SAA1B,CAAoCS,MAApC,CAA2C,aAA3C;AACA,SAHgC,CAIjC;;;AACAI,QAAAA,6BAA6B,GAAG,CAAhC;AACAC,QAAAA,+BAA+B,CAACnC,WAAhC,GAA8CkC,6BAA9C,CANiC,CAQjC;;AACAzC,QAAAA,eAAe,GAAG,CAAlB;AACApB,QAAAA,QAAQ,CAACK,cAAT,CAAwB,UAAxB,EAAoCmB,GAApC,GAAwCL,QAAQ,CAACC,eAAD,CAAhD;AACA,OAXD;AAYA,KAdD,MAcO;AACNsC,MAAAA,YAAY,CAACpD,SAAb,GAAyB,sBAAzB;AACA;;AAAA,KAzEwB,CA0EzB;;AACC,QAAMyD,oBAAoB,GAAG/D,QAAQ,CAACK,cAAT,CAAwB,sBAAxB,CAA7B;AACA0D,IAAAA,oBAAoB,CAACf,SAArB,CAA+BS,MAA/B,CAAsC,aAAtC,EA5EwB,CA6EzB;;AACC,QAAMO,8BAA8B,GAAGhE,QAAQ,CAACK,cAAT,CAAwB,gCAAxB,CAAvC;AACA2D,IAAAA,8BAA8B,CAAChB,SAA/B,CAAyCS,MAAzC,CAAgD,aAAhD,EA/EwB,CAkF1B;AACA;AAEC;;AACA,QAAIQ,YAAY,GAAGjE,QAAQ,CAACK,cAAT,CAAwB,cAAxB,CAAnB;AACA4D,IAAAA,YAAY,CAAC3D,SAAb,GAA0B,cAA1B,CAvFyB,CAwFzB;;AACA,QAAI4D,UAAU,GAAG,CAAjB,CAzFyB,CA0FzB;;AACAD,IAAAA,YAAY,CAACtC,WAAb,GAA2BuC,UAAU,GAAG,IAAxC,CA3FyB,CA4FzB;;AACA,QAAMC,6BAA6B,GAAG,CAAtC;AACA,QAAMC,cAAc,GAAG,IAAvB;AACA,QAAMC,cAAc,GAAG,IAAvB,CA/FyB,CAiGzB;;AACA,QAAIC,qBAAqB,GAAGtE,QAAQ,CAACK,cAAT,CAAwB,uBAAxB,CAA5B;AACAiE,IAAAA,qBAAqB,CAAChE,SAAtB,GAAmC,uBAAnC;AACAgE,IAAAA,qBAAqB,CAAC3C,WAAtB,GAAoC,OAApC;AACA,QAAI4C,oBAAoB,GAAGvE,QAAQ,CAACK,cAAT,CAAwB,sBAAxB,CAA3B;AACAkE,IAAAA,oBAAoB,CAACjE,SAArB,GAAkC,sBAAlC;AACA,QAAIkE,kBAAkB,GAAG,CAAzB;AACAD,IAAAA,oBAAoB,CAAC5C,WAArB,GAAmC6C,kBAAnC,CAxGyB,CA0GzB;;AACA,QAAIC,gCAAgC,GAAGzE,QAAQ,CAACK,cAAT,CAAwB,kCAAxB,CAAvC;AACAoE,IAAAA,gCAAgC,CAACnE,SAAjC,GAA8C,kCAA9C;AACAmE,IAAAA,gCAAgC,CAAC9C,WAAjC,GAA+C,OAA/C;AACA,QAAImC,+BAA+B,GAAG9D,QAAQ,CAACK,cAAT,CAAwB,iCAAxB,CAAtC;AACAyD,IAAAA,+BAA+B,CAACxD,SAAhC,GAA6C,iCAA7C;AACA,QAAIuD,6BAA6B,GAAG,CAApC;AACAC,IAAAA,+BAA+B,CAACnC,WAAhC,GAA8CkC,6BAA9C,CAjHyB,CAmHzB;;AACA,QAAIa,mCAAmC,GAAG1E,QAAQ,CAACK,cAAT,CAAwB,qCAAxB,CAA1C;AACAqE,IAAAA,mCAAmC,CAACpE,SAApC,GAAiD,qCAAjD;AACAoE,IAAAA,mCAAmC,CAAC/C,WAApC,GAAkD,SAAlD;AACA,QAAIgD,kCAAkC,GAAG3E,QAAQ,CAACK,cAAT,CAAwB,oCAAxB,CAAzC;AACAsE,IAAAA,kCAAkC,CAACrE,SAAnC,GAAgD,oCAAhD;AACA,QAAIsE,gCAAgC,GAAG,CAAvC;AACAD,IAAAA,kCAAkC,CAAChD,WAAnC,GAAiDiD,gCAAjD,CA1HyB,CA4H1B;AACA;AAKC;;AACA5E,IAAAA,QAAQ,CAACD,gBAAT,YAAqC8E,kBAArC,EAnIyB,CAqIzB;;AACA,aAASvC,iBAAT,GAA4B;AAC3B;AACA;AACA,UAAGD,WAAW,KAAK,GAAnB,EAAuB;AACtB;AACAJ,QAAAA,WAAW,CAACN,WAAZ,GAA0B,EAA1B,CAFsB,CAItB;;AACA,YAAIf,iBAAiB,IAAI,KAAzB,EAAgC;AAC/B;AACA0C,UAAAA,iBAAiB,GAAG9C,QAAQ,CAACU,QAAD,CAA5B;AACAA,UAAAA,QAAQ,GAHuB,CAI/B;;AACA,cAAIA,QAAQ,IAAIV,QAAQ,CAACoD,MAAzB,EAAiC;AAChC1C,YAAAA,QAAQ,GAAG,CAAX;AACA;;AAAA;AACD,SARD,MAQO;AAAE;AACR;AACA,cAAI4D,4BAA4B,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBzE,QAAQ,CAACoD,MAApC,CAAnC,CAFM,CAGN;AACA;;AACAN,UAAAA,iBAAiB,GAAG9C,QAAQ,CAACsE,4BAAD,CAA5B;AACA;;AAAA,SAnBqB,CAqBtB;;AACA,YAAIjE,aAAa,IAAI,MAArB,EAA6B;AAC5BwC,UAAAA,SAAS,CAACC,iBAAiB,CAACC,QAAnB,CAAT;AACA;;AAAA,SAxBqB,CA0BtB;;AACArB,QAAAA,mBAAmB,CAACP,WAApB,GAAkC2B,iBAAiB,CAAC4B,WAApD,CA3BsB,CA6BtB;AACA;;AACA,YAAKvE,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,IAAI,MAArC,EAA6C;AAC5C;AACAwB,UAAAA,qBAAqB,CAAC7B,SAAtB,GAAkC,aAAlC,CAF4C,CAG5C;;AACA,cAAI6E,cAAc,GAAG3E,QAAQ,CAAC4E,MAAT,CAAgB,UAAAC,aAAa;AAAA,mBAAIA,aAAa,CAACH,WAAd,IAA6B5B,iBAAiB,CAAC4B,WAAnD;AAAA,WAA7B,CAArB,CAJ4C,CAK5C;;AACA,cAAIC,cAAc,CAACvB,MAAf,GAAwB,CAA5B,EAA+B;AAC9B;AACA,gBAAI0B,kBAAkB,GAAG,EAAzB;;AACA,iBAAK,IAAI3B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwB,cAAc,CAACvB,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC/C;AACA,kBAAIwB,cAAc,CAACxB,CAAD,CAAd,CAAkB4B,EAAlB,KAAyBjC,iBAAiB,CAACiC,EAA/C,EAAkD;AACjDD,gBAAAA,kBAAkB,CAACE,IAAnB,CAAwBL,cAAc,CAACxB,CAAD,CAAd,CAAkBJ,QAA1C;AACA;;AAAA;AACD;;AAAA;AACDpB,YAAAA,qBAAqB,CAACR,WAAtB,mBAAwC2D,kBAAxC;AACAnD,YAAAA,qBAAqB,CAAC7B,SAAtB,GAAkC,uBAAlC;AACAmF,YAAAA,OAAO,CAACC,GAAR,CAAYvD,qBAAqB,CAACR,WAAlC;AACA;;AAAA;AACD;;AAAA,SAlDqB,CAoDtB;AACA;;AACAS,QAAAA,sBAAsB,GAAGkB,iBAAiB,CAACC,QAAlB,CAA2BoC,KAA3B,CAAiC,EAAjC,EAAqCC,GAArC,CAAyC,UAASC,KAAT,EAAe;AAChF;AACA,cAAIC,SAAS,GAAG9F,QAAQ,CAAC+F,aAAT,CAAuB,MAAvB,CAAhB,CAFgF,CAGhF;;AACAD,UAAAA,SAAS,CAACnE,WAAV,GAAwBkE,KAAxB,CAJgF,CAKhF;;AACA,cAAKlF,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,IAAI,MAArC,EAA6C;AAC5CmF,YAAAA,SAAS,CAACxF,SAAV,GAAsB,aAAtB;AACA;;AAAA,WAR+E,CAShF;;AACA2B,UAAAA,WAAW,CAAC+D,WAAZ,CAAwBF,SAAxB;AACA,iBAAOA,SAAP;AACA,SAZwB,CAAzB;AAaA;;AAAA;AACD,KA7MwB,CA+MzB;;;AACA,aAASjD,aAAT,GAAwB;AACvB,UAAMoD,WAAW,GAAGzD,IAAI,CAACC,GAAL,EAApB;AACA,UAAMyD,kCAAkC,GAAGD,WAAW,GAAG1D,SAAzD;AACA,UAAM4D,UAAU,GAAGxD,sBAAsB,GAAGuD,kCAA5C;AACA,UAAME,YAAY,GAAGrB,IAAI,CAACsB,IAAL,CAAUF,UAAU,GAAC,IAArB,CAArB;AACA,UAAMG,SAAS,GAAGvB,IAAI,CAACC,KAAL,CAAWoB,YAAY,GAAG,EAA1B,CAAlB;AACA,UAAMG,SAAS,GAAGxB,IAAI,CAACsB,IAAL,CAAUD,YAAY,GAAG,EAAzB,CAAlB;AACA,UAAKI,cAAc,yBAAQ,UAAIF,SAAJ,EAAkBG,KAAlB,CAAyB,CAAC,CAA1B,CAAR,mBAAyC,WAAKF,SAAL,EAAmBE,KAAnB,CAA0B,CAAC,CAA3B,CAAzC,WAAnB;;AACA,UAAIN,UAAU,IAAI,CAAlB,EAAoB;AACnB;AACA9D,QAAAA,WAAW,GAAG,GAAd,CAFmB,CAGnB;;AACAN,QAAAA,aAAa,CAACe,OAAD,CAAb,CAJmB,CAKnB;;AACA0D,QAAAA,cAAc,GAAG,EAAjB,CANmB,CAOnB;;AACAvC,QAAAA,YAAY,CAACtC,WAAb,GAA0B,EAA1B,CARmB,CASnB;;AACA2C,QAAAA,qBAAqB,CAAChE,SAAtB,GAAkC,aAAlC;AACAiE,QAAAA,oBAAoB,CAACjE,SAArB,GAAiC,aAAjC,CAXmB,CAYnB;;AACAmE,QAAAA,gCAAgC,CAACnE,SAAjC,GAA6C,aAA7C;AACAwD,QAAAA,+BAA+B,CAACxD,SAAhC,GAA4C,aAA5C,CAdmB,CAenB;;AACAoE,QAAAA,mCAAmC,CAACpE,SAApC,GAAgD,aAAhD;AACAqE,QAAAA,kCAAkC,CAACrE,SAAnC,GAA+C,aAA/C,CAjBmB,CAkBnB;;AACA2B,QAAAA,WAAW,CAACN,WAAZ,GAAyB,EAAzB,CAnBmB,CAoBnB;;AACAO,QAAAA,mBAAmB,CAACP,WAApB,GAAiC,EAAjC,CArBmB,CAsBnB;;AACAuB,QAAAA,oBAAoB,CAAC5C,SAArB,GAAiC,aAAjC,CAvBmB,CAwBnB;;AACAkD,QAAAA,UAAU,CAAClD,SAAX,GAAuB,aAAvB,CAzBmB,CA0BnB;;AACAoD,QAAAA,YAAY,CAACpD,SAAb,GAAyB,aAAzB,CA3BmB,CA4BnB;;AACA,YAAIK,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,IAAI,MAApC,EAA4C;AAC3CwB,UAAAA,qBAAqB,CAAC7B,SAAtB,GAAkC,aAAlC;AACA;;AAAA,SA/BkB,CAgCnB;;AACAyD,QAAAA,oBAAoB,CAACzD,SAArB,GAAiC,aAAjC,CAjCmB,CAkCnB;;AACA0D,QAAAA,8BAA8B,CAAC1D,SAA/B,GAA2C,aAA3C,CAnCmB,CAqCnB;;AACAyC,QAAAA,SAAS,CAACzC,SAAV,GAAsB,aAAtB,CAtCmB,CAwCnB;AACA;;AACA,YAAMoG,UAAU,GAAG1G,QAAQ,CAACK,cAAT,CAAwB,YAAxB,CAAnB;AACAqG,QAAAA,UAAU,CAAC/E,WAAX,GAAwB,IAAxB;AACA+E,QAAAA,UAAU,CAACpG,SAAX,GAAuB,YAAvB,CA5CmB,CA6CnB;;AACA,YAAMqG,OAAO,GAAG3G,QAAQ,CAACK,cAAT,CAAwB,SAAxB,CAAhB,CA9CmB,CA+CnB;;AACA,YAAMuG,UAAU,GAAG5G,QAAQ,CAACK,cAAT,CAAwB,YAAxB,CAAnB,CAhDmB,CAiDnB;;AACAuC,QAAAA,UAAU,CAAC,YAAU;AACrB;AACA8D,UAAAA,UAAU,CAAC/E,WAAX,uDAAmCuC,UAAU,CAAC2C,cAAX,EAAnC;AACAH,UAAAA,UAAU,CAACpG,SAAX,GAAuB,gBAAvB,CAHqB,CAIrB;;AACAsG,UAAAA,UAAU,CAAC5D,SAAX,CAAqBS,MAArB,CAA4B,aAA5B,EALqB,CAMrB;;AACAkD,UAAAA,OAAO,CAAC3D,SAAR,CAAkBS,MAAlB,CAAyB,aAAzB;AACC,SARS,EAQR,IARQ,CAAV;AASA,OAnEsB,CAoEvB;;;AACAf,MAAAA,iBAAiB,CAACf,WAAlB,GAAgC6E,cAAhC;AACA;;AAAA,KAtRwB,CAwRzB;;AACA,aAASM,YAAT,GAAuB;AACvB,UAAI7E,WAAW,CAACN,WAAZ,CAAwBiC,MAAxB,GAAiCO,6BAArC,EAAmE;AAClE4C,QAAAA,QAAQ,GAAG3C,cAAX;AACA,OAFD,MAEO;AACN2C,QAAAA,QAAQ,GAAG1C,cAAX;AACA;;AACDH,MAAAA,UAAU,GAAGA,UAAU,GAAG6C,QAA1B;AACA9C,MAAAA,YAAY,CAACtC,WAAb,aAA8BuC,UAAU,CAAC2C,cAAX,EAA9B;AACC,KAjSwB,CAmSzB;;;AACA,aAASG,iBAAT,GAA4B;AAC3B;AACAxC,MAAAA,kBAAkB,GAAGA,kBAAkB,GAAG,CAA1C;AACAD,MAAAA,oBAAoB,CAAC5C,WAArB,GAAmC6C,kBAAnC,CAH2B,CAK3B;;AACAX,MAAAA,6BAA6B,GAAGA,6BAA6B,GAAG,CAAhE;AACAC,MAAAA,+BAA+B,CAACnC,WAAhC,GAA8CkC,6BAA9C,CAP2B,CAS3B;;AACA,UAAIe,gCAAgC,GAAGf,6BAAvC,EAAsE;AACrEe,QAAAA,gCAAgC,GAAGA,gCAAgC,GAAG,CAAtE;AACAD,QAAAA,kCAAkC,CAAChD,WAAnC,GAAiDiD,gCAAjD;AACA;;AAAA;AACD;;AAAA,KAlTwB,CAoTzB;;AACA,aAASC,kBAAT,CAA4BoC,WAA5B,EAAwC;AACvC,UAAGA,WAAW,CAAC7G,GAAZ,KAAoBgC,sBAAsB,CAAC,CAAD,CAAtB,CAA0BT,WAA9C,IAA6DU,WAAW,KAAG,GAA9E,EAAmF;AAClF6E,QAAAA,aAAa;AACb,OAFD,MAEO,IAAID,WAAW,CAAC7G,GAAZ,KAAoB,GAApB,IACLgC,sBAAsB,CAAC,CAAD,CAAtB,CAA0BT,WAA1B,KAA0C,GADrC,IAELU,WAAW,KAAG,GAFb,EAEkB;AACxB;AACA6E,QAAAA,aAAa;AACb,OALM,MAKA,IAAI7E,WAAW,KAAG,GAAlB,EAAuB;AAC7B;AACA8E,QAAAA,aAAa;AACb,OAHM,MAGA,CAEN;;AAAA;AACD;;AAAA,KAnUwB,CAqUzB;;AACA,aAASD,aAAT,GAAwB;AACvB;AACA;AACA,UAAInG,aAAa,IAAI,QAArB,EAA+B;AAC9B,YAAIA,cAAa,GAAG,IAAIqG,KAAJ,CAAU,uBAAV,CAApB,CAD8B,CAE9B;;;AACArG,QAAAA,cAAa,CAACsG,MAAd,GAAuB,GAAvB;;AACAtG,QAAAA,cAAa,CAACuG,IAAd;AACA;;AAAA,OARsB,CASvB;;AACAlF,MAAAA,sBAAsB,CAAC,CAAD,CAAtB,CAA0B9B,SAA1B,GAAsC,SAAtC,CAVuB,CAWvB;;AACAc,MAAAA,eAAe,GAAGA,eAAe,GAAE,CAAnC,CAZuB,CAavB;;AACAgB,MAAAA,sBAAsB,CAACmF,KAAvB,GAduB,CAevB;;AACA,UAAGnF,sBAAsB,CAACwB,MAAvB,KAAkC,CAArC,EAAwC;AACvC;AACA;AACA,YAAI5C,gBAAgB,IAAI,OAAxB,EAAiC;AAChC,cAAIwG,YAAY,GAAG,IAAIJ,KAAJ,CAAU,0BAAV,CAAnB,CADgC,CAEhC;;AACAI,UAAAA,YAAY,CAACH,MAAb,GAAsB,GAAtB;AACAG,UAAAA,YAAY,CAACF,IAAb;AACA;;AAAA;AACDR,QAAAA,YAAY;AACZE,QAAAA,iBAAiB;AACjBjE,QAAAA,SAAS,CAACC,SAAV,CAAoBC,GAApB,CAAwB,QAAxB;AACAF,QAAAA,SAAS,CAACC,SAAV,CAAoBS,MAApB,CAA2B,aAA3B;AACAb,QAAAA,UAAU,CAACN,iBAAD,EAAmB,GAAnB,CAAV;AACAM,QAAAA,UAAU,CAAC,YAAU;AACpBG,UAAAA,SAAS,CAACC,SAAV,CAAoBC,GAApB,CAAwB,aAAxB;AACAF,UAAAA,SAAS,CAACC,SAAV,CAAoBS,MAApB,CAA2B,QAA3B;AACA,SAHS,EAGP,GAHO,CAAV;AAIA;;AAAA,OAlCsB,CAoCvB;;AACA,UAAGrC,eAAe,IAAIC,kBAAtB,EAAyC;AACzCD,QAAAA,eAAe,GAAG,CAAlB,CADyC,CAEzC;;AACAuB,QAAAA,sBAAsB,GAAGA,sBAAsB,GAAEpB,gBAAjD,CAHyC,CAIzC;;AACAD,QAAAA,uBAAuB,CAACK,WAAxB,GAAsC,OAAOoD,IAAI,CAACsB,IAAL,CAAU9E,gBAAgB,GAAC,IAA3B,CAAP,GAA0C,GAAhF,CALyC,CAMzC;;AACAD,QAAAA,uBAAuB,CAAC0B,SAAxB,CAAkCC,GAAlC,CAAsC,SAAtC,EAPyC,CAQzC;;AACAL,QAAAA,UAAU,CAAC,YAAU;AACpBtB,UAAAA,uBAAuB,CAACK,WAAxB,GAAsC,EAAtC;AACAL,UAAAA,uBAAuB,CAAC0B,SAAxB,CAAkCS,MAAlC,CAAyC,SAAzC;AACA,SAHS,EAGP,IAHO,CAAV;AAIC;;AAAA,OAlDsB,CAoDvB;;AACAzD,MAAAA,QAAQ,CAACK,cAAT,CAAwB,UAAxB,EAAoCmB,GAApC,GAAwCL,QAAQ,CAACC,eAAD,CAAhD;AACA;;AAAA,KA5XwB,CA8XzB;;AACA,aAAS+F,aAAT,GAAwB;AACvB;AACA;AACA,UAAIlG,kBAAkB,IAAI,OAA1B,EAAmC;AAClC,YAAIwG,cAAc,GAAG,IAAIL,KAAJ,CAAU,4BAAV,CAArB,CADkC,CAElC;;AACAK,QAAAA,cAAc,CAACJ,MAAf,GAAwB,GAAxB;AACAI,QAAAA,cAAc,CAACH,IAAf;AACA;;AAAA;AACD;;AAAA,KAxYwB,CA0YzB;;AACA,aAASjE,SAAT,CAAmBE,QAAnB,EAA4B;AAC1B;AACA,UAAIA,QAAQ,IAAI,QAAhB,EAAyB;AACxBA,QAAAA,QAAQ,GAAG,SAAX;AACA;;AAAA;AACF,UAAImE,aAAa,GAAG,IAAIN,KAAJ,CAAU,gBAAe7D,QAAf,GAA0B,MAApC,CAApB;AACAmE,MAAAA,aAAa,CAACJ,IAAd;AACA;;AAAA;AACD;AACD;;AAAA","sourcesContent":["// ゲーム開始画面から遷移してきた際に処理を実施する。\nwindow.addEventListener('load', function(){\n\t// Enterを押下するとゲーム開始のカウントダウンがスタートする処理を呼び出す。\n\tdocument.addEventListener(`keydown`, keyDownGameStart);\n});\n\n// スペースかEnterキー押下によるゲームスタートを一回限りとするフラグを設定する。\n\tlet gameStartEnterOnlyOnce = \"0\";\n\n// スペースかEnterキーを押下するとゲーム開始のカウントダウンがスタートする。\nfunction keyDownGameStart(keyDownEnter){\n\tif ((keyDownEnter.key === 'Enter' || keyDownEnter.key === \" \") && gameStartEnterOnlyOnce == \"0\") {\n\t\t// 表示されている文字を非表示にする。\n\t\tdocument.getElementById(\"useKeyboardPopup\").className = \"transparent\";\n\t\tdocument.getElementById(\"pressEnterPopup\").className = \"transparent\";\n\t\tdocument.getElementById(\"annotationAudio\").className = \"transparent\";\n\t\tdocument.getElementById(\"backBtnTypingPlay\").className = \"transparent\";\n\t\tgameStartEnterOnlyOnce = \"1\";\n\t\tgameStart();\n\t};\n};\n\t// 選択した英単語難易度によって変わるwordListの定義\n\tconst wordList = gon.wordListAll;\n\n\t// 選択したプレイモードによって変わるplayModeの定義\n\tconst playMode = gon.playMode;\n\n\t// 出題順の設定によって変わるpronounceModeの定義\n\tconst questionOrderMode = gon.questionOrderMode;\n\n\t// 英単語の発音有無の設定によって変わるpronounceModeの定義\n\tconst pronounceMode = gon.pronounceMode;\n\n\t// BGMの設定によって変わるbgmModeの定義\n\tconst bgmMode = gon.bgmMode;\n\n\t// タイプ音の設定によって変わるtypeAudioModeの定義\n\tconst typeAudioMode = gon.typeAudioMode;\n\n\t// 正解音の設定によって変わるcorrectAudioModeの定義\n\tconst correctAudioMode = gon.correctAudioMode;\n\n\t// ミス音の設定によって変わるincorrectAudioModeの定義\n\tconst incorrectAudioMode = gon.incorrectAudioMode;\n\n\t// 英単語を順番に出題する場合の番号の初期値を定義する。\n\tlet sortById = 0;\n\n\nfunction gameStart(){\n\n  // 表示する単語リストを定義する。\n  // chromeの場合\"ff\"が正常に動作しない。\n\n  // 表示するメーターリストを定義する。\n  const imgArray =[\n    '/assets/メーターPNG/メーター0.png',\n    '/assets/メーターPNG/メーター10_yellow.png',\n    '/assets/メーターPNG/メーター20_yellow.png',\n    '/assets/メーターPNG/メーター30_yellow.png',\n    '/assets/メーターPNG/メーター40_yellow.png',\n    '/assets/メーターPNG/メーター50_yellow.png',\n    '/assets/メーターPNG/メーター60_yellow.png',\n    '/assets/メーターPNG/メーター70_yellow.png',\n    '/assets/メーターPNG/メーター80_yellow.png',\n    '/assets/メーターPNG/メーター90_yellow.png',\n    '/assets/メーターPNG/メーター100_yellow.png',\n\t'/assets/メーターPNG/メーター10_green.png',\n    '/assets/メーターPNG/メーター20_green.png',\n    '/assets/メーターPNG/メーター30_green.png',\n    '/assets/メーターPNG/メーター40_green.png',\n    '/assets/メーターPNG/メーター50_green.png',\n    '/assets/メーターPNG/メーター60_green.png',\n    '/assets/メーターPNG/メーター70_green.png',\n    '/assets/メーターPNG/メーター80_green.png',\n    '/assets/メーターPNG/メーター90_green.png',\n    '/assets/メーターPNG/メーター100_green.png',\n\t'/assets/メーターPNG/メーター10_blue.png',\n    '/assets/メーターPNG/メーター20_blue.png',\n    '/assets/メーターPNG/メーター30_blue.png',\n    '/assets/メーターPNG/メーター40_blue.png',\n    '/assets/メーターPNG/メーター50_blue.png',\n    '/assets/メーターPNG/メーター60_blue.png',\n    '/assets/メーターPNG/メーター70_blue.png',\n    '/assets/メーターPNG/メーター80_blue.png',\n    '/assets/メーターPNG/メーター90_blue.png',\n    '/assets/メーターPNG/メーター100_blue.png',\n\t'/assets/メーターPNG/メーター10_pink.png',\n    '/assets/メーターPNG/メーター20_pink.png',\n    '/assets/メーターPNG/メーター30_pink.png',\n    '/assets/メーターPNG/メーター40_pink.png',\n    '/assets/メーターPNG/メーター50_pink.png',\n    '/assets/メーターPNG/メーター60_pink.png',\n    '/assets/メーターPNG/メーター70_pink.png',\n    '/assets/メーターPNG/メーター80_pink.png',\n    '/assets/メーターPNG/メーター90_pink.png',\n    '/assets/メーターPNG/メーター100_pink.png',\n\t'/assets/メーターPNG/メーター10_red.png',\n    '/assets/メーターPNG/メーター20_red.png',\n    '/assets/メーターPNG/メーター30_red.png',\n    '/assets/メーターPNG/メーター40_red.png',\n    '/assets/メーターPNG/メーター50_red.png',\n    '/assets/メーターPNG/メーター60_red.png',\n    '/assets/メーターPNG/メーター70_red.png',\n    '/assets/メーターPNG/メーター80_red.png',\n    '/assets/メーターPNG/メーター90_red.png',\n    '/assets/メーターPNG/メーター100_red.png'\n  ];\n\n  // 表示するメーター初期値を定義する。\n  let bonusCountMeter = 0;\n  // 表示するメーター最大値を定義する。\n  const bonusCountMeterMax = 50;\n  // 表示するプレイ延長時間を定義する。\n  const displayBonusAddPlayTime = document.getElementById(\"displayBonusAddPlayTime\");\n  displayBonusAddPlayTime.className =  \"displayBonusAddPlayTime\";\n  // メーター最大値に達した際の延長するプレイ時間を定義する。\n  const bonusAddPlayTime = 3000;\n\n  // メーターの初期値を表示する。\n  document.getElementById(\"meterImg\").src=imgArray[bonusCountMeter];\n  // ゲーム開始までをカウントダウン変数を定義する。\n  let countDownPopup = document.getElementById(\"countDownPopup\");\n  // class属性を付与する。\n  countDownPopup.className = \"countDownPopup\";\n  // ゲーム開始までをカウントダウン変数の初期値を定義する。\n  let countDownPopupNumber = 3;\n  // ゲーム開始までをカウントダウン変数の初期値を表示する。\n  countDownPopup.textContent = countDownPopupNumber;\n\n\n  // ゲーム開始までをカウントダウンを1秒ごとに実施するように定義する。\n  const timerIdToStart = setInterval(countDownTimeToStart,1000);\n\n  // ゲーム開始までをカウントダウンを実施する処理を定義する。\n  function countDownTimeToStart(){\n\t\t// カウントダウン文字を１ずつ減らす。\n\t\tcountDownPopupNumber = countDownPopupNumber - 1;\n\t\t//カウントダウンが0になれば、ゲームを開始する。\n\t\tif (countDownPopupNumber <= 0){\n\t\tclearInterval(timerIdToStart);\n\t\t// カウントダウンポップアップのクラスを変更し、非表示にする。\n\t\tcountDownPopup.className = \"countDownPopupAfterClose\";\n\t\ttypingPlayStart();\n\t\t} else {\n\t\tcountDownPopup.textContent = countDownPopupNumber;\n\t\t}\n  }\n\n\t// ゲームを開始する処理を定義する。\n\tfunction typingPlayStart(){\n\n\t\t// 表示する単語を定義する。\n\t\tconst displayWord = document.getElementById(\"displayWord\");\n\t\tdisplayWord.className =  \"displayWord\";\n\t\tconst displayWordJapanese = document.getElementById(\"displayWordJapanese\");\n\t\tdisplayWordJapanese.className =  \"displayWordJapanese\";\n\t\tconst displayWordAnnotation = document.getElementById(\"displayWordAnnotation\");\n\t\tdisplayWordAnnotation.className =  \"transparent\";\n\t\t// 表示する単語を一文字ずつに分ける変数を定義する。\n\t\tlet charArrayInDisplayWord =[];\n\n\t\t// ゲーム終了を判定するフラグを定義する。\n\t\tlet playEndFlag = \"0\";\n\n\n\t\t// 表示する単語を作成する。\n\t\tcreateDisplayWord();\n\n\t\t// プレイ開始時間を取得する。\n\t\tconst startTime = Date.now();\n\t\t// 表示する残りのプレイ可能時間を定義する。\n\t\tlet remainPlayingTime = document.getElementById(\"remainPlayingTime\");\n\t\tremainPlayingTime.className =  \"remainPlayingTime\";\n\t\t// 表示するスタート時のプレイ可能時間を定義する。--------------------------------------------------------------\n\t\tlet initialPlayingTimeMSec = 300000;\n\t\t// スタート時に残りのプレイ可能時間の初期値を表示するためにcountDownTimeを実施する。\n\t\tsetTimeout(countDownTime,0);\n\t\t// 1秒ごとにcountDownTimeを実施するように定義する。\n\t\tconst timerId = setInterval(countDownTime,1000);\n\n\t\t// 正解時に表示する丸を定義する。\n\t\tdocument.getElementById(\"circleImg\").src= '/assets/正解○.png';\n\t\tcircleImg.classList.add('transparent');\n\n\n\t\t// \"発音を聞く\"ボタンを表示する。\n\t\tlet pronounceAgainButton = document.getElementById(\"pronounceAgainButton\");\n\t\tpronounceAgainButton.innerHTML = \"発音を聞く\";\n\t\tpronounceAgainButton.className = \"pronounceAgainButton\";\n\t\tpronounceAgainButton.onclick = function() {\n\t\t\tpronounce(displayWordInList.eng_word);\n\t\t};\n\t\t// \"ヒントを見る\"ボタンを表示する。(プレイモード普通、正確重視の時のみ機能)\n\t\tlet hintButton = document.getElementById(\"hintButton\");\n\t\thintButton.innerHTML = \"ヒントを見る\";\n\t\tif (playMode == \"普通\" || playMode == \"正確重視\" ) {\n\t\t\thintButton.className = \"hintButton\";\n\t\t\thintButton.onclick = function() {\n\t\t\t\tcharArrayInDisplayWord[0].classList.remove('transparent');\n\t\t\t};\n\t\t} else {\n\t\t\thintButton.className = \"hintButtonPractice\";\n\t\t};\n\t\t// \"答えを見る\"ボタンを表示する。(プレイモード普通、正確重視の時のみ機能)\n\t\tlet answerButton = document.getElementById(\"answerButton\");\n\t\tanswerButton.innerHTML = \"答えを見る\";\n\t\tif (playMode == \"普通\" || playMode == \"正確重視\" ) {\n\t\t\tanswerButton.className = \"answerButton\";\n\t\t\tanswerButton.onclick = function() {\n\t\t\t\tfor (let i = 0; i < charArrayInDisplayWord.length; i++) {\n\t\t\t\t\tcharArrayInDisplayWord[i].classList.remove('transparent');\n\t\t\t\t}\n\t\t\t\t// 連続正解数を0に戻す。\n\t\t\t\ttotalConsecutiveNumCorrectNum = 0;\n\t\t\t\tdisplayConsecutiveNumCorrectNum.textContent = totalConsecutiveNumCorrectNum;\n\n\t\t\t\t// メーターを初期値に戻す。\n\t\t\t\tbonusCountMeter = 0;\n\t\t\t\tdocument.getElementById(\"meterImg\").src=imgArray[bonusCountMeter];\n\t\t\t};\n\t\t} else {\n\t\t\tanswerButton.className = \"answerButtonPractice\";\n\t\t};\n\t\t// \"最初からやり直す\"ボタンを表示する。\n\t\t\tconst restartButtonMidGame = document.getElementById(\"restartButtonMidGame\");\n\t\t\trestartButtonMidGame.classList.remove('transparent');\n\t\t// \"コース選択画面に戻る\"ボタンを表示する。\n\t\t\tconst courseSettingBackButtonMidGame = document.getElementById(\"courseSettingBackButtonMidGame\");\n\t\t\tcourseSettingBackButtonMidGame.classList.remove('transparent');\n\n\n\t// 以下、スコア定義---------------------------------------------------------------------------------------------------\n\t// -----------------------------------------------------------------------------------------------------------------\n\n\t\t// 表示するスコアを定義する。\n\t\tlet displayScore = document.getElementById(\"displayScore\");\n\t\tdisplayScore.className =  \"displayScore\";\n\t\t// 合計スコアの初期値を定義する。\n\t\tlet totalScore = 0;\n\t\t// 表示するスコアに初期値を定義する。\n\t\tdisplayScore.textContent = totalScore + \" P\";\n\t\t// スコアアップする基準を定義する。\n\t\tconst refTextLengthForCountUpLevel1 = 4;\n\t\tconst addScoreLevel1 = 1000;\n\t\tconst addScoreLevel2 = 3000;\n\n\t\t// 表示する正解数を定義する。\n\t\tlet displayNumCorrectWord = document.getElementById(\"displayNumCorrectWord\");\n\t\tdisplayNumCorrectWord.className =  \"displayNumCorrectWord\";\n\t\tdisplayNumCorrectWord.textContent = \"合計正解数\";\n\t\tlet displayNumCorrectNum = document.getElementById(\"displayNumCorrectNum\");\n\t\tdisplayNumCorrectNum.className =  \"displayNumCorrectNum\";\n\t\tlet totalNumCorrectNum = 0;\n\t\tdisplayNumCorrectNum.textContent = totalNumCorrectNum;\n\n\t\t// 表示する連続正解数を定義する。\n\t\tlet displayConsecutiveNumCorrectWord = document.getElementById(\"displayConsecutiveNumCorrectWord\");\n\t\tdisplayConsecutiveNumCorrectWord.className =  \"displayConsecutiveNumCorrectWord\";\n\t\tdisplayConsecutiveNumCorrectWord.textContent = \"連続正解数\";\n\t\tlet displayConsecutiveNumCorrectNum = document.getElementById(\"displayConsecutiveNumCorrectNum\");\n\t\tdisplayConsecutiveNumCorrectNum.className =  \"displayConsecutiveNumCorrectNum\";\n\t\tlet totalConsecutiveNumCorrectNum = 0;\n\t\tdisplayConsecutiveNumCorrectNum.textContent = totalConsecutiveNumCorrectNum;\n\n\t\t// 表示する最高連続正解数を定義する。\n\t\tlet displayMaxConsecutiveNumCorrectWord = document.getElementById(\"displayMaxConsecutiveNumCorrectWord\");\n\t\tdisplayMaxConsecutiveNumCorrectWord.className =  \"displayMaxConsecutiveNumCorrectWord\";\n\t\tdisplayMaxConsecutiveNumCorrectWord.textContent = \"最高連続正解数\";\n\t\tlet displayMaxConsecutiveNumCorrectNum = document.getElementById(\"displayMaxConsecutiveNumCorrectNum\");\n\t\tdisplayMaxConsecutiveNumCorrectNum.className =  \"displayMaxConsecutiveNumCorrectNum\";\n\t\tlet totalMaxConsecutiveNumCorrectNum = 0;\n\t\tdisplayMaxConsecutiveNumCorrectNum.textContent = totalMaxConsecutiveNumCorrectNum;\n\n\t// 以上、スコア定義---------------------------------------------------------------------------------------------------\n\t// -----------------------------------------------------------------------------------------------------------------\n\n\n\n\n\t\t// タイプされる度にkeyDownCharCountUpを実施するように定義する。\n\t\tdocument.addEventListener(`keydown`, keyDownCharCountUp);\n\n\t\t// 表示する単語を作成する処理を定義する。\n\t\tfunction createDisplayWord(){\n\t\t\t// すでにゲームが終了している場合、新規ワードを生成しない。ゲーム中のみ生成する。\n\t\t\t// ギリギリで問題に正解した場合、○を表示した後、200m秒後にワードを生成する処理が走るため。\n\t\t\tif(playEndFlag === \"0\"){\n\t\t\t\t// 表示単語を初期化する。\n\t\t\t\tdisplayWord.textContent = \"\";\n\n\t\t\t\t// 出題順の設定により、displayWordInListを変更\n\t\t\t\tif (questionOrderMode == \"番号順\") {\n\t\t\t\t\t// 英単語を順番に出題する場合の番号の初期値を定義する。\n\t\t\t\t\tdisplayWordInList = wordList[sortById];\n\t\t\t\t\tsortById++;\n\t\t\t\t\t// // sortByIdが出題英単語数を超えた場合、初期値に戻す。\n\t\t\t\t\tif (sortById >= wordList.length) {\n\t\t\t\t\t\tsortById = 0;\n\t\t\t\t\t};\n\t\t\t\t} else { // 出題順がランダムの場合\n\t\t\t\t\t// 0〜textListsの総数間で整数値をランダムで算出する。\n\t\t\t\t\tlet randomIntegerInTotalWordList = Math.floor(Math.random() * wordList.length);\n\t\t\t\t\t// let randomIntegerInTotalWordList = Math.floor(Math.random() * 3);\n\t\t\t\t\t// 表示する単語をランダムで選定する。\n\t\t\t\t\tdisplayWordInList = wordList[randomIntegerInTotalWordList];\n\t\t\t\t};\n\n\t\t\t\t//表示する単語の発音させる。（発音ありの場合のみ）\n\t\t\t\tif (pronounceMode == \"発音あり\") {\n\t\t\t\t\tpronounce(displayWordInList.eng_word);\n\t\t\t\t};\n\n\t\t\t\t// 表示する単語の日本語訳を表示させる。\n\t\t\t\tdisplayWordJapanese.textContent = displayWordInList.jap_trans_1;\n\n\t\t\t\t// 日本語訳が同じ英単語が複数ある場合に備えて、重複するかを判定し、重複する場合は重複する英単語を表示し、それ以外を答えるように誘導する。\n\t\t\t\t// プレイモード練習では答えを表示しているため処理不要\n\t\t\t\tif ( playMode == \"普通\" || playMode == \"正確重視\") {\n\t\t\t\t\t// 前の問題に注釈がある場合消す。\n\t\t\t\t\tdisplayWordAnnotation.className = \"transparent\";\n\t\t\t\t\t// ランダムで選ばれた英単語の日本語訳でワードリストをフィルター\n\t\t\t\t\tlet duplicateWords = wordList.filter(duplicateWord => duplicateWord.jap_trans_1 == displayWordInList.jap_trans_1);\n\t\t\t\t\t// 日本語訳が重複している他の英単語がある場合\n\t\t\t\t\tif (duplicateWords.length > 1) {\n\t\t\t\t\t\t// 重複している英単語の配列（この時点では答えを含む）を定義する。\n\t\t\t\t\t\tlet duplicateWordsList = [];\n\t\t\t\t\t\tfor (let i = 0; i < duplicateWords.length; i++) {\n\t\t\t\t\t\t\t// 重複している英単語のみ（答え以外の英単語）を配列duplicateWordsListに格納する。\n\t\t\t\t\t\t\tif (duplicateWords[i].id !== displayWordInList.id){\n\t\t\t\t\t\t\t\tduplicateWordsList.push(duplicateWords[i].eng_word);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t\tdisplayWordAnnotation.textContent = `※${duplicateWordsList}以外`;\n\t\t\t\t\t\tdisplayWordAnnotation.className = \"displayWordAnnotation\";\n\t\t\t\t\t\tconsole.log(displayWordAnnotation.textContent);\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// 表示する単語を一文字ごとに区切り、spanタグで閉じる。\n\t\t\t\t// spanタグで閉じた単語を表示する。\n\t\t\t\tcharArrayInDisplayWord = displayWordInList.eng_word.split(\"\").map(function(value){\n\t\t\t\t\t// spanタグを作成する。\n\t\t\t\t\tlet spanValue = document.createElement(\"span\");\n\t\t\t\t\t// spanタグに一文字を挿入する。\n\t\t\t\t\tspanValue.textContent = value;\n\t\t\t\t\t// 各アルファベットに対して、transparentクラスを付与する。（プレイモード普通、正確重視のときのみ）\n\t\t\t\t\tif ( playMode == \"普通\" || playMode == \"正確重視\") {\n\t\t\t\t\t\tspanValue.className = \"transparent\";\n\t\t\t\t\t};\n\t\t\t\t\t// 表示する単語にspanタグで閉じた一文字を追加する。\n\t\t\t\t\tdisplayWord.appendChild(spanValue);\n\t\t\t\t\treturn spanValue;\n\t\t\t\t});\n\t\t\t};\n\t\t}\n\n\t\t// プレイ時間をカウントダウンする処理を定義する。\n\t\tfunction countDownTime(){\n\t\t\tconst currentTime = Date.now();\n\t\t\tconst diffBetweenCurrentTimeAndStartTime = currentTime - startTime;\n\t\t\tconst remainMSec = initialPlayingTimeMSec - diffBetweenCurrentTimeAndStartTime;\n\t\t\tconst remainAllSec = Math.ceil(remainMSec/1000);\n\t\t\tconst remainMin = Math.floor(remainAllSec / 60);\n\t\t\tconst remainSec = Math.ceil(remainAllSec % 60);\n\t\t\tlet  remainSecLabel = `残り${(`${remainMin}` ).slice( -1 )}分${(`0${remainSec}` ).slice( -2 )}秒`;\n\t\t\tif (remainMSec <= 0){\n\t\t\t\t// ゲーム終了後にplayEndFlagを1に更新する。\n\t\t\t\tplayEndFlag = \"1\";\n\t\t\t\t// プレイ時間のカウントダウンを止める。\n\t\t\t\tclearInterval(timerId);\n\t\t\t\t// 残り時間の表示を消す。\n\t\t\t\tremainSecLabel = \"\";\n\t\t\t\t// 現在のスコア（左上）の表示を消す。\n\t\t\t\tdisplayScore.textContent =\"\";\n\t\t\t\t// 正解数の表示を消す。\n\t\t\t\tdisplayNumCorrectWord.className = \"transparent\";\n\t\t\t\tdisplayNumCorrectNum.className = \"transparent\";\n\t\t\t\t// 連続正解数の表示を消す。\n\t\t\t\tdisplayConsecutiveNumCorrectWord.className = \"transparent\";\n\t\t\t\tdisplayConsecutiveNumCorrectNum.className = \"transparent\";\n\t\t\t\t// 最高連続正解数の表示を消す。\n\t\t\t\tdisplayMaxConsecutiveNumCorrectWord.className = \"transparent\";\n\t\t\t\tdisplayMaxConsecutiveNumCorrectNum.className = \"transparent\";\n\t\t\t\t// 問題の英単語の表示を消す。\n\t\t\t\tdisplayWord.textContent =\"\";\n\t\t\t\t// 解答の日本語の表示を消す。\n\t\t\t\tdisplayWordJapanese.textContent =\"\";\n\t\t\t\t// \"発音を聞く\"ボタンを消す。\n\t\t\t\tpronounceAgainButton.className = \"transparent\";\n\t\t\t\t// \"ヒントを見る\"ボタンを消す。\n\t\t\t\thintButton.className = \"transparent\";\n\t\t\t\t// \"答えを見る\"ボタンを消す。\n\t\t\t\tanswerButton.className = \"transparent\";\n\t\t\t\t// 注釈を消す。（プレイモード普通、正確重視の時のみ）\n\t\t\t\tif (playMode == \"普通\" || playMode == \"正確重視\") {\n\t\t\t\t\tdisplayWordAnnotation.className = \"transparent\";\n\t\t\t\t};\n\t\t\t\t// \"最初からやり直す\"ボタンを消す。\n\t\t\t\trestartButtonMidGame.className = \"transparent\";\n\t\t\t\t// \"コース選択画面に戻る\"ボタンを消す。\n\t\t\t\tcourseSettingBackButtonMidGame.className = \"transparent\";\n\n\t\t\t\t// 正解時に表示される○の画像を消す。\n\t\t\t\tcircleImg.className = \"transparent\";\n\n\t\t\t\t// ゲーム終了後に終了を知らせるポップアップを作成する。\n\t\t\t\t// ゲーム終了を知らせるポップアップを定義する。\n\t\t\t\tconst closePopup = document.getElementById(\"closePopup\");\n\t\t\t\tclosePopup.textContent =\"終了\";\n\t\t\t\tclosePopup.className = \"closePopup\";\n\t\t\t\t// 戻るボタンを定義する。\n\t\t\t\tconst backBtn = document.getElementById(\"backBtn\");\n\t\t\t\t// もう一度ボタンを定義する。\n\t\t\t\tconst restartBtn = document.getElementById(\"restartBtn\");\n\t\t\t\t// 2秒後に得点を表示させる。また、もう一度ボタンと戻るボタンを表示させる。\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t// 得点の表示\n\t\t\t\tclosePopup.textContent = `あなたの得点は${totalScore.toLocaleString()}点です!`;\n\t\t\t\tclosePopup.className = \"endResultPopup\";\n\t\t\t\t// もう一度ボタンの表示（transparentを消して表示させる）\n\t\t\t\trestartBtn.classList.remove('transparent');\n\t\t\t\t// 戻るボタンの表示（transparentを消して表示させる）\n\t\t\t\tbackBtn.classList.remove('transparent');\n\t\t\t\t},2000);\n\t\t\t}\n\t\t\t// 残りプレイ可能時間を更新する。\n\t\t\tremainPlayingTime.textContent = remainSecLabel;\n\t\t};\n\n\t\t// スコアをアップし、現在のtotalScoreを表示する処理を定義する。\n\t\tfunction countUpScore(){\n\t\tif (displayWord.textContent.length < refTextLengthForCountUpLevel1){\n\t\t\taddPoint = addScoreLevel1;\n\t\t} else {\n\t\t\taddPoint = addScoreLevel2;\n\t\t}\n\t\ttotalScore = totalScore + addPoint;\n\t\tdisplayScore.textContent = `${totalScore.toLocaleString()} P`;\n\t\t}\n\n\t\t// 正解数をカウントアップする処理を定義する。\n\t\tfunction countUpCorrectNum(){\n\t\t\t// 合計正解数のカウントアップ\n\t\t\ttotalNumCorrectNum = totalNumCorrectNum + 1;\n\t\t\tdisplayNumCorrectNum.textContent = totalNumCorrectNum;\n\n\t\t\t// 連続正解数のカウントアップ\n\t\t\ttotalConsecutiveNumCorrectNum = totalConsecutiveNumCorrectNum + 1;\n\t\t\tdisplayConsecutiveNumCorrectNum.textContent = totalConsecutiveNumCorrectNum;\n\n\t\t\t// 最高連続正解数のカウントアップ\n\t\t\tif (totalMaxConsecutiveNumCorrectNum < totalConsecutiveNumCorrectNum) {\n\t\t\t\ttotalMaxConsecutiveNumCorrectNum = totalMaxConsecutiveNumCorrectNum + 1;\n\t\t\t\tdisplayMaxConsecutiveNumCorrectNum.textContent = totalMaxConsecutiveNumCorrectNum;\n\t\t\t};\n\t\t};\n\n\t\t// ゲーム中にタイプした文字が表示文字と一致する場合、不一致の場合の処理を定義する。\n\t\tfunction keyDownCharCountUp(keyDownChar){\n\t\t\tif(keyDownChar.key === charArrayInDisplayWord[0].textContent && playEndFlag===\"0\") {\n\t\t\t\tcorrectTyping();\n\t\t\t} else if (keyDownChar.key === \"e\"\n\t\t\t\t\t\t&& charArrayInDisplayWord[0].textContent === \"é\"\n\t\t\t\t\t\t&& playEndFlag===\"0\") {\n\t\t\t\t// éの場合は例外的にeでOKとする。\n\t\t\t\tcorrectTyping();\n\t\t\t} else if (playEndFlag===\"0\") {\n\t\t\t\t// タイプミス音を発生させる。\n\t\t\t\ttypeMissAudio();\n\t\t\t} else {\n\n\t\t\t};\n\t\t};\n\n\t\t// タイプした文字が表示文字と一致する場合の処理を定義する。\n\t\tfunction correctTyping(){\n\t\t\t// タイプ音を定義する。\n\t\t\t// タイプ音ありの場合のみ\n\t\t\tif (typeAudioMode == \"タイプ音あり\") {\n\t\t\t\tlet typeAudioMode = new Audio('/assets/typeAudio.mp3');\n\t\t\t\t// タイプ音を発生させる。\n\t\t\t\ttypeAudioMode.volume = 0.3;\n\t\t\t\ttypeAudioMode.play();\n\t\t\t};\n\t\t\t// 文字色を変更する。\n\t\t\tcharArrayInDisplayWord[0].className = \"add_red\";\n\t\t\t// メーターを更新する。\n\t\t\tbonusCountMeter = bonusCountMeter +1;\n\t\t\t// 一致した文字を配列から削除する。\n\t\t\tcharArrayInDisplayWord.shift();\n\t\t\t// 表示文字全てタイプした場合、スコアアップ処理を実施し、次の表示文字を作成する処理を実施する。\n\t\t\tif(charArrayInDisplayWord.length === 0) {\n\t\t\t\t// 正解音を定義する。\n\t\t\t\t// 正解音ありの場合のみ\n\t\t\t\tif (correctAudioMode == \"正解音あり\") {\n\t\t\t\t\tlet correctAudio = new Audio('/assets/correctAudio.mp3');\n\t\t\t\t\t// 正解した場合、効果音を発生させる。\n\t\t\t\t\tcorrectAudio.volume = 0.3;\n\t\t\t\t\tcorrectAudio.play();\n\t\t\t\t};\n\t\t\t\tcountUpScore();\n\t\t\t\tcountUpCorrectNum();\n\t\t\t\tcircleImg.classList.add('circle');\n\t\t\t\tcircleImg.classList.remove('transparent');\n\t\t\t\tsetTimeout(createDisplayWord,200);\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\tcircleImg.classList.add('transparent');\n\t\t\t\t\tcircleImg.classList.remove('circle');\n\t\t\t\t}, 200);\n\t\t\t};\n\n\t\t\t// メーターがメーター最大値以上になった場合、メーターを初期化し、プレイ可能時間を延長する。\n\t\t\tif(bonusCountMeter >= bonusCountMeterMax){\n\t\t\tbonusCountMeter = 0;\n\t\t\t// 初期プレイ時間を更新することで、残りプレイ可能時間を延長する。\n\t\t\tinitialPlayingTimeMSec = initialPlayingTimeMSec +bonusAddPlayTime;\n\t\t\t// 延長した残りプレイ時間を表示する。\n\t\t\tdisplayBonusAddPlayTime.textContent = \"+ \" + Math.ceil(bonusAddPlayTime/1000) + \"秒\";\n\t\t\t// 延長した残りプレイ時間をフェードアウトする。\n\t\t\tdisplayBonusAddPlayTime.classList.add('fadeout');\n\t\t\t// fadeoutのclassを取り除くことで、2回目以降も延長した残りプレイ時間が表示されるようにする。\n\t\t\tsetTimeout(function(){\n\t\t\t\tdisplayBonusAddPlayTime.textContent = \"\";\n\t\t\t\tdisplayBonusAddPlayTime.classList.remove('fadeout');\n\t\t\t}, 2000);\n\t\t\t};\n\n\t\t\t// 更新したメーターを表示する。\n\t\t\tdocument.getElementById(\"meterImg\").src=imgArray[bonusCountMeter];\n\t\t};\n\n\t\t// タイプした文字が表示文字と不一致の場合の処理を定義する。\n\t\tfunction typeMissAudio(){\n\t\t\t// ミス音を定義する。\n\t\t\t// ミス音ありの場合のみ\n\t\t\tif (incorrectAudioMode == \"ミス音あり\") {\n\t\t\t\tlet incorrectAudio = new Audio('/assets/incorrectAudio.mp3');\n\t\t\t\t// ミス音の場合、効果音を発生させる。\n\t\t\t\tincorrectAudio.volume = 0.3;\n\t\t\t\tincorrectAudio.play();\n\t\t\t};\n\t\t};\n\n\t\t// 英単語を生成した際に、発音させる処理を定義する。\n\t\tfunction pronounce(eng_word){\n\t\t\t\t// résuméの場合は音声ファイルの検索ができないため、ファイルを変更\n\t\t\t\tif (eng_word == \"résumé\"){\n\t\t\t\t\teng_word = \"rezumei\";\n\t\t\t\t};\n\t\t\tlet pronunciation = new Audio('/assets/発音/'+ eng_word + '.mp3');\n\t\t\tpronunciation.play();\n\t\t};\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}