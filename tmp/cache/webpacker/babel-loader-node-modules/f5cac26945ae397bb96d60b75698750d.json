{"ast":null,"code":"// ゲーム開始画面から遷移してきた際に処理を実施する。\nwindow.addEventListener('load', function () {\n  gameStart();\n});\n\nfunction gameStart() {\n  // 表示する単語リストを定義する。\n  // chromeの場合\"ff\"が正常に動作しない。\n  var wordList = gon.wordListAll; // 表示するメーターリストを定義する。\n\n  var imgArray = ['/assets/メーターPNG/メーター0.png', '/assets/メーターPNG/メーター10_yellow.png', '/assets/メーターPNG/メーター20_yellow.png', '/assets/メーターPNG/メーター30_yellow.png', '/assets/メーターPNG/メーター40_yellow.png', '/assets/メーターPNG/メーター50_yellow.png', '/assets/メーターPNG/メーター60_yellow.png', '/assets/メーターPNG/メーター70_yellow.png', '/assets/メーターPNG/メーター80_yellow.png', '/assets/メーターPNG/メーター90_yellow.png', '/assets/メーターPNG/メーター100_yellow.png', '/assets/メーターPNG/メーター10_green.png', '/assets/メーターPNG/メーター20_green.png', '/assets/メーターPNG/メーター30_green.png', '/assets/メーターPNG/メーター40_green.png', '/assets/メーターPNG/メーター50_green.png', '/assets/メーターPNG/メーター60_green.png', '/assets/メーターPNG/メーター70_green.png', '/assets/メーターPNG/メーター80_green.png', '/assets/メーターPNG/メーター90_green.png', '/assets/メーターPNG/メーター100_green.png', '/assets/メーターPNG/メーター10_blue.png', '/assets/メーターPNG/メーター20_blue.png', '/assets/メーターPNG/メーター30_blue.png', '/assets/メーターPNG/メーター40_blue.png', '/assets/メーターPNG/メーター50_blue.png', '/assets/メーターPNG/メーター60_blue.png', '/assets/メーターPNG/メーター70_blue.png', '/assets/メーターPNG/メーター80_blue.png', '/assets/メーターPNG/メーター90_blue.png', '/assets/メーターPNG/メーター100_blue.png', '/assets/メーターPNG/メーター10_pink.png', '/assets/メーターPNG/メーター20_pink.png', '/assets/メーターPNG/メーター30_pink.png', '/assets/メーターPNG/メーター40_pink.png', '/assets/メーターPNG/メーター50_pink.png', '/assets/メーターPNG/メーター60_pink.png', '/assets/メーターPNG/メーター70_pink.png', '/assets/メーターPNG/メーター80_pink.png', '/assets/メーターPNG/メーター90_pink.png', '/assets/メーターPNG/メーター100_pink.png', '/assets/メーターPNG/メーター10_red.png', '/assets/メーターPNG/メーター20_red.png', '/assets/メーターPNG/メーター30_red.png', '/assets/メーターPNG/メーター40_red.png', '/assets/メーターPNG/メーター50_red.png', '/assets/メーターPNG/メーター60_red.png', '/assets/メーターPNG/メーター70_red.png', '/assets/メーターPNG/メーター80_red.png', '/assets/メーターPNG/メーター90_red.png', '/assets/メーターPNG/メーター100_red.png']; // 表示するメーター初期値を定義する。\n\n  var bonusCountMeter = 0; // 表示するメーター最大値を定義する。\n\n  var bonusCountMeterMax = 50; // 表示するプレイ延長時間を定義する。\n\n  var displayBonusAddPlayTime = document.getElementById(\"displayBonusAddPlayTime\");\n  displayBonusAddPlayTime.className = \"displayBonusAddPlayTime\"; // メーター最大値に達した際の延長するプレイ時間を定義する。\n\n  var bonusAddPlayTime = 3000; // ゲーム開始までをカウントダウン変数の初期値を定義する。\n\n  var countDownPopupNumber = 3; // ゲーム開始までをカウントダウンを1秒ごとに実施するように定義する。\n\n  var timerIdToStart = setInterval(countDownTimeToStart, 1000); // ゲーム開始までをカウントダウンを実施する処理を定義する。\n\n  function countDownTimeToStart() {\n    // メーターの初期値を表示する。\n    document.getElementById(\"meterImg\").src = imgArray[bonusCountMeter]; // ゲーム開始までをカウントダウン変数を定義する。\n\n    var countDownPopup = document.getElementById(\"countDownPopup\"); // class属性を付与する。\n\n    countDownPopup.className = \"countDownPopup\"; // ゲーム開始までをカウントダウン変数の初期値を表示する。\n\n    countDownPopup.textContent = countDownPopupNumber; // ゲーム開始宣言の変数を定義する。\n\n    var gameStartCallAfterClose = document.getElementById(\"gameStartCall\"); // ゲーム開始宣言にclass属性を付与する。\n\n    gameStartCallAfterClose.className = \"gameStartCallAfterClose\"; //カウントダウンが0になれば、ゲームを開始する。\n\n    if (countDownPopupNumber <= 0) {\n      clearInterval(timerIdToStart); // カウントダウンポップアップのクラスを変更し、非表示にする。\n\n      countDownPopup.className = \"countDownPopupAfterClose\";\n      typingPlayStart();\n    } else {\n      countDownPopup.textContent = countDownPopupNumber;\n    } // カウントダウン文字を１ずつ減らす。\n\n\n    countDownPopupNumber = countDownPopupNumber - 1;\n  } // ゲームを開始する処理を定義する。\n\n\n  function typingPlayStart() {\n    // 表示する単語を定義する。\n    var displayWord = document.getElementById(\"displayWord\");\n    displayWord.className = \"displayWord\";\n    var displayWordJapanese = document.getElementById(\"displayWordJapanese\");\n    displayWordJapanese.className = \"displayWordJapanese\"; // 表示する単語を一文字ずつに分ける変数を定義する。\n\n    var charArrayInDisplayWord = []; // 表示する単語を作成する。\n\n    createDisplayWord(); // プレイ開始時間を取得する。\n\n    var startTime = Date.now(); // 表示する残りのプレイ可能時間を定義する。\n\n    var remainPlayingTime = document.getElementById(\"remainPlayingTime\");\n    remainPlayingTime.className = \"remainPlayingTime\"; // 表示するスタート時のプレイ可能時間を定義する。\n\n    var initialPlayingTimeMSec = 2000; // スタート時に残りのプレイ可能時間の初期値を表示するためにcountDownTimeを実施する。\n\n    setTimeout(countDownTime, 0); // 1秒ごとにcountDownTimeを実施するように定義する。\n\n    var timerId = setInterval(countDownTime, 1000); // 正解時に表示する丸を定義する。\n\n    document.getElementById(\"circleImg\").src = '/assets/正解○.png';\n    circleImg.classList.add('transparent'); // \"答えを見る\"ボタンを表示する。\n\n    var answerButton = document.getElementById(\"answerButton\");\n    answerButton.innerHTML = \"答えを見る\";\n    answerButton.className = \"answerButton\";\n\n    answerButton.onclick = function () {\n      for (var i = 0; i < charArrayInDisplayWordJap.length; i++) {\n        charArrayInDisplayWordJap[i].classList.remove('transparent');\n      }\n\n      displayWordKanji.className = \"displayWordKanji\";\n    }; // 表示するスコアを定義する。\n\n\n    var displayScore = document.getElementById(\"displayScore\");\n    displayScore.className = \"displayScore\"; // 合計スコアの初期値を定義する。\n\n    var totalScore = 0; // 表示するスコアに初期値を定義する。\n\n    displayScore.textContent = totalScore + \" P\"; // スコアアップする基準を定義する。\n\n    var refTextLengthForCountUpLevel1 = 4;\n    var addScoreLevel1 = 1000;\n    var addScoreLevel2 = 3000; // タイプされる度にkeyDownCharCountUpを実施するように定義する。\n\n    document.addEventListener(\"keydown\", keyDownCharCountUp); // ゲーム終了を判定するフラグを定義する。\n\n    var playEndFlag = \"0\"; // 表示する単語を作成する処理を定義する。\n\n    function createDisplayWord() {\n      // 表示単語を初期化する。\n      displayWord.textContent = \"\"; // 0〜textListsの総数間で整数値をランダムで算出する。\n\n      var randomIntegerInTotalWordList = Math.floor(Math.random() * wordList.length); // 表示する単語をランダムで選定する。\n\n      displayWordInList = wordList[randomIntegerInTotalWordList]; // 表示する単語の日本語訳を表示させる。\n\n      displayWordJapanese.textContent = displayWordInList.jap_trans_1; // 表示する単語を一文字ごとに区切り、spanタグで閉じる。\n      // spanタグで閉じた単語を表示する。\n\n      charArrayInDisplayWord = displayWordInList.eng_word.split(\"\").map(function (value) {\n        // spanタグを作成する。\n        var spanValue = document.createElement(\"span\"); // spanタグに一文字を挿入する。\n\n        spanValue.textContent = value; // 表示する単語にspanタグで閉じた一文字を追加する。\n\n        displayWord.appendChild(spanValue);\n        return spanValue;\n      });\n    } // プレイ時間をカウントダウンする処理を定義する。\n\n\n    function countDownTime() {\n      var currentTime = Date.now();\n      var diffBetweenCurrentTimeAndStartTime = currentTime - startTime;\n      var remainMSec = initialPlayingTimeMSec - diffBetweenCurrentTimeAndStartTime;\n      var remainSec = Math.ceil(remainMSec / 1000);\n      var remainSecLabel = \"\\u6B8B\\u308A\".concat(\"00\".concat(remainSec).slice(-3), \"\\u79D2\");\n\n      if (remainMSec <= 0) {\n        // ゲーム終了後にplayEndFlagを1に更新する。\n        playEndFlag = \"1\"; // プレイ時間のカウントダウンを止める。\n\n        clearInterval(timerId); // 残り時間の表示を消す。\n\n        remainSecLabel = \"\"; // 現在のスコア（左上）の表示を消す。\n\n        displayScore.textContent = \"\"; // 問題の英単語の表示を消す。\n\n        displayWord.textContent = \"\"; // 解答の日本語の表示を消す。\n\n        displayWordJapanese.textContent = \"\"; // ゲーム終了後に終了を知らせるポップアップを作成する。\n        // ゲーム終了を知らせるポップアップを定義する。\n\n        var closePopup = document.getElementById(\"closePopup\");\n        closePopup.textContent = \"終了\";\n        closePopup.className = \"closePopup\"; // 戻るボタンを定義する。\n\n        var backBtn = document.getElementById(\"backBtn\"); // もう一度ボタンを定義する。\n\n        var restartBtn = document.getElementById(\"restartBtn\"); // 2秒後に得点を表示させる。また、もう一度ボタンと戻るボタンを表示させる。\n\n        setTimeout(function () {\n          closePopup.textContent = \"\\u3042\\u306A\\u305F\\u306E\\u5F97\\u70B9\\u306F\".concat(totalScore.toLocaleString(), \"\\u70B9\\u3067\\u3059!\");\n          closePopup.className = \"endResultPopup\";\n          restartBtn.addEventListener('click', function gameReStart() {\n            closePopup.className = \"endResultPopupAfterClose\";\n            restartBtn.className = \"restartBtnAfterClose\";\n            backBtn.className = \"backBtnAfterClose\";\n            gameStart();\n          });\n          restartBtn.innerHTML = \"<a href='./typingplay_eng'>もう一度遊ぶ</a>\";\n          restartBtn.className = \"restartBtn\";\n          backBtn.innerHTML = \"<a href='./typingplay_index'>コース選択画面に戻る</a>\";\n          backBtn.className = \"backBtn\";\n        }, 2000);\n      } // 残りプレイ可能時間を更新する。\n\n\n      remainPlayingTime.textContent = remainSecLabel;\n    } // スコアをアップし、現在のtotalScoreを表示する処理を定義する。\n\n\n    function countUpScore() {\n      if (displayWord.textContent.length < refTextLengthForCountUpLevel1) {\n        addPoint = addScoreLevel1;\n      } else {\n        addPoint = addScoreLevel2;\n      }\n\n      totalScore = totalScore + addPoint;\n      displayScore.textContent = \"\".concat(totalScore.toLocaleString(), \" P\");\n      return totalScore;\n    } // タイプした文字が表示文字と一致する場合の処理を定義する。\n\n\n    function keyDownCharCountUp(keyDownChar) {\n      if (keyDownChar.key === charArrayInDisplayWord[0].textContent && playEndFlag === \"0\") {\n        // 文字色を変更する。\n        charArrayInDisplayWord[0].className = \"add_red\"; // メーターを更新する。\n\n        bonusCountMeter = bonusCountMeter + 1; // 一致した文字を配列から削除する。\n\n        charArrayInDisplayWord.shift(); // 表示文字全てタイプした場合、スコアアップ処理を実施し、次の表示文字を作成する処理を実施する。\n\n        if (charArrayInDisplayWord.length === 0) countUpScore(), createDisplayWord(); // メーターがメーター最大値以上になった場合、メーターを初期化し、プレイ可能時間を延長する。\n\n        if (bonusCountMeter >= bonusCountMeterMax) {\n          bonusCountMeter = 0; // 初期プレイ時間を更新することで、残りプレイ可能時間を延長する。\n\n          initialPlayingTimeMSec = initialPlayingTimeMSec + bonusAddPlayTime; // 延長した残りプレイ時間を表示する。\n\n          displayBonusAddPlayTime.textContent = \"+ \" + Math.ceil(bonusAddPlayTime / 1000) + \"秒\"; // 延長した残りプレイ時間をフェードアウトする。\n\n          displayBonusAddPlayTime.classList.add('fadeout'); // fadeoutのclassを取り除くことで、2回目以降も延長した残りプレイ時間が表示されるようにする。\n\n          setTimeout(function () {\n            displayBonusAddPlayTime.textContent = \"\";\n            displayBonusAddPlayTime.classList.remove('fadeout');\n          }, 2000);\n        }\n      } else if (playEndFlag === \"0\") {\n        // タイプミスでメーターを初期値に戻す。\n        bonusCountMeter = 0;\n      } // 更新したメーターを表示する。\n\n\n      document.getElementById(\"meterImg\").src = imgArray[bonusCountMeter];\n    }\n  }\n}\n\n;","map":{"version":3,"sources":["/Users/mondenhiroki/projects/eigomonster/app/javascript/packs/typingplay_eng.js"],"names":["window","addEventListener","gameStart","wordList","gon","wordListAll","imgArray","bonusCountMeter","bonusCountMeterMax","displayBonusAddPlayTime","document","getElementById","className","bonusAddPlayTime","countDownPopupNumber","timerIdToStart","setInterval","countDownTimeToStart","src","countDownPopup","textContent","gameStartCallAfterClose","clearInterval","typingPlayStart","displayWord","displayWordJapanese","charArrayInDisplayWord","createDisplayWord","startTime","Date","now","remainPlayingTime","initialPlayingTimeMSec","setTimeout","countDownTime","timerId","circleImg","classList","add","answerButton","innerHTML","onclick","i","charArrayInDisplayWordJap","length","remove","displayWordKanji","displayScore","totalScore","refTextLengthForCountUpLevel1","addScoreLevel1","addScoreLevel2","keyDownCharCountUp","playEndFlag","randomIntegerInTotalWordList","Math","floor","random","displayWordInList","jap_trans_1","eng_word","split","map","value","spanValue","createElement","appendChild","currentTime","diffBetweenCurrentTimeAndStartTime","remainMSec","remainSec","ceil","remainSecLabel","slice","closePopup","backBtn","restartBtn","toLocaleString","gameReStart","countUpScore","addPoint","keyDownChar","key","shift"],"mappings":"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","sourcesContent":["// ゲーム開始画面から遷移してきた際に処理を実施する。\nwindow.addEventListener('load', function(){\n\tgameStart();\n});\n\nfunction gameStart(){\n\n  // 表示する単語リストを定義する。\n  // chromeの場合\"ff\"が正常に動作しない。\n\n  const wordList = gon.wordListAll;\n\n  // 表示するメーターリストを定義する。\n  const imgArray =[\n    '/assets/メーターPNG/メーター0.png',\n    '/assets/メーターPNG/メーター10_yellow.png',\n    '/assets/メーターPNG/メーター20_yellow.png',\n    '/assets/メーターPNG/メーター30_yellow.png',\n    '/assets/メーターPNG/メーター40_yellow.png',\n    '/assets/メーターPNG/メーター50_yellow.png',\n    '/assets/メーターPNG/メーター60_yellow.png',\n    '/assets/メーターPNG/メーター70_yellow.png',\n    '/assets/メーターPNG/メーター80_yellow.png',\n    '/assets/メーターPNG/メーター90_yellow.png',\n    '/assets/メーターPNG/メーター100_yellow.png',\n\t'/assets/メーターPNG/メーター10_green.png',\n    '/assets/メーターPNG/メーター20_green.png',\n    '/assets/メーターPNG/メーター30_green.png',\n    '/assets/メーターPNG/メーター40_green.png',\n    '/assets/メーターPNG/メーター50_green.png',\n    '/assets/メーターPNG/メーター60_green.png',\n    '/assets/メーターPNG/メーター70_green.png',\n    '/assets/メーターPNG/メーター80_green.png',\n    '/assets/メーターPNG/メーター90_green.png',\n    '/assets/メーターPNG/メーター100_green.png',\n\t'/assets/メーターPNG/メーター10_blue.png',\n    '/assets/メーターPNG/メーター20_blue.png',\n    '/assets/メーターPNG/メーター30_blue.png',\n    '/assets/メーターPNG/メーター40_blue.png',\n    '/assets/メーターPNG/メーター50_blue.png',\n    '/assets/メーターPNG/メーター60_blue.png',\n    '/assets/メーターPNG/メーター70_blue.png',\n    '/assets/メーターPNG/メーター80_blue.png',\n    '/assets/メーターPNG/メーター90_blue.png',\n    '/assets/メーターPNG/メーター100_blue.png',\n\t'/assets/メーターPNG/メーター10_pink.png',\n    '/assets/メーターPNG/メーター20_pink.png',\n    '/assets/メーターPNG/メーター30_pink.png',\n    '/assets/メーターPNG/メーター40_pink.png',\n    '/assets/メーターPNG/メーター50_pink.png',\n    '/assets/メーターPNG/メーター60_pink.png',\n    '/assets/メーターPNG/メーター70_pink.png',\n    '/assets/メーターPNG/メーター80_pink.png',\n    '/assets/メーターPNG/メーター90_pink.png',\n    '/assets/メーターPNG/メーター100_pink.png',\n\t'/assets/メーターPNG/メーター10_red.png',\n    '/assets/メーターPNG/メーター20_red.png',\n    '/assets/メーターPNG/メーター30_red.png',\n    '/assets/メーターPNG/メーター40_red.png',\n    '/assets/メーターPNG/メーター50_red.png',\n    '/assets/メーターPNG/メーター60_red.png',\n    '/assets/メーターPNG/メーター70_red.png',\n    '/assets/メーターPNG/メーター80_red.png',\n    '/assets/メーターPNG/メーター90_red.png',\n    '/assets/メーターPNG/メーター100_red.png'\n  ];\n\n  // 表示するメーター初期値を定義する。\n  let bonusCountMeter = 0;\n  // 表示するメーター最大値を定義する。\n  const bonusCountMeterMax = 50;\n  // 表示するプレイ延長時間を定義する。\n  const displayBonusAddPlayTime = document.getElementById(\"displayBonusAddPlayTime\");\n  displayBonusAddPlayTime.className =  \"displayBonusAddPlayTime\";\n  // メーター最大値に達した際の延長するプレイ時間を定義する。\n  const bonusAddPlayTime = 3000;\n\n\n\n  // ゲーム開始までをカウントダウン変数の初期値を定義する。\n  let countDownPopupNumber = 3;\n  // ゲーム開始までをカウントダウンを1秒ごとに実施するように定義する。\n  const timerIdToStart = setInterval(countDownTimeToStart,1000);\n\n  // ゲーム開始までをカウントダウンを実施する処理を定義する。\n  function countDownTimeToStart(){\n\t\t// メーターの初期値を表示する。\n\t\tdocument.getElementById(\"meterImg\").src=imgArray[bonusCountMeter];\n\t\t// ゲーム開始までをカウントダウン変数を定義する。\n\t\tlet countDownPopup = document.getElementById(\"countDownPopup\");\n\t\t// class属性を付与する。\n\t\tcountDownPopup.className = \"countDownPopup\";\n\t\t// ゲーム開始までをカウントダウン変数の初期値を表示する。\n\t\tcountDownPopup.textContent = countDownPopupNumber;\n\t\t// ゲーム開始宣言の変数を定義する。\n\t\tlet gameStartCallAfterClose = document.getElementById(\"gameStartCall\");\n\t\t// ゲーム開始宣言にclass属性を付与する。\n\t\tgameStartCallAfterClose.className = \"gameStartCallAfterClose\";\n\n\t\t//カウントダウンが0になれば、ゲームを開始する。\n\t\tif (countDownPopupNumber <= 0){\n\t\tclearInterval(timerIdToStart);\n\t\t// カウントダウンポップアップのクラスを変更し、非表示にする。\n\t\tcountDownPopup.className = \"countDownPopupAfterClose\";\n\t\ttypingPlayStart();\n\t\t} else {\n\t\tcountDownPopup.textContent = countDownPopupNumber;\n\t\t}\n\t// カウントダウン文字を１ずつ減らす。\n\tcountDownPopupNumber = countDownPopupNumber - 1;\n  }\n\n\t// ゲームを開始する処理を定義する。\n\tfunction typingPlayStart(){\n\n\t\t// 表示する単語を定義する。\n\t\tconst displayWord = document.getElementById(\"displayWord\");\n\t\tdisplayWord.className =  \"displayWord\";\n\t\tconst displayWordJapanese = document.getElementById(\"displayWordJapanese\");\n\t\tdisplayWordJapanese.className =  \"displayWordJapanese\";\n\t\t// 表示する単語を一文字ずつに分ける変数を定義する。\n\t\tlet charArrayInDisplayWord =[];\n\t\t// 表示する単語を作成する。\n\t\tcreateDisplayWord();\n\n\t\t// プレイ開始時間を取得する。\n\t\tconst startTime = Date.now();\n\t\t// 表示する残りのプレイ可能時間を定義する。\n\t\tlet remainPlayingTime = document.getElementById(\"remainPlayingTime\");\n\t\tremainPlayingTime.className =  \"remainPlayingTime\";\n\t\t// 表示するスタート時のプレイ可能時間を定義する。\n\t\tlet initialPlayingTimeMSec = 2000;\n\t\t// スタート時に残りのプレイ可能時間の初期値を表示するためにcountDownTimeを実施する。\n\t\tsetTimeout(countDownTime,0);\n\t\t// 1秒ごとにcountDownTimeを実施するように定義する。\n\t\tconst timerId = setInterval(countDownTime,1000);\n\n\t\t// 正解時に表示する丸を定義する。\n\t\tdocument.getElementById(\"circleImg\").src= '/assets/正解○.png';\n\t\tcircleImg.classList.add('transparent');\n\n\t\t// \"答えを見る\"ボタンを表示する。\n\t\tlet answerButton = document.getElementById(\"answerButton\");\n\t\tanswerButton.innerHTML = \"答えを見る\";\n\t\tanswerButton.className = \"answerButton\";\n\t\tanswerButton.onclick = function() {\n\t\t\tfor (let i = 0; i < charArrayInDisplayWordJap.length; i++) {\n\t\t\t\tcharArrayInDisplayWordJap[i].classList.remove('transparent');\n\t\t\t}\n\t\t\tdisplayWordKanji.className =  \"displayWordKanji\";\n\t\t};\n\n\t\t// 表示するスコアを定義する。\n\t\tlet displayScore = document.getElementById(\"displayScore\");\n\t\tdisplayScore.className =  \"displayScore\";\n\t\t// 合計スコアの初期値を定義する。\n\t\tlet totalScore = 0;\n\t\t// 表示するスコアに初期値を定義する。\n\t\tdisplayScore.textContent = totalScore + \" P\";\n\t\t// スコアアップする基準を定義する。\n\t\tconst refTextLengthForCountUpLevel1 = 4;\n\t\tconst addScoreLevel1 = 1000;\n\t\tconst addScoreLevel2 = 3000;\n\n\t\t// タイプされる度にkeyDownCharCountUpを実施するように定義する。\n\t\tdocument.addEventListener(`keydown`, keyDownCharCountUp);\n\n\t\t// ゲーム終了を判定するフラグを定義する。\n\t\tlet playEndFlag = \"0\";\n\n\t\t// 表示する単語を作成する処理を定義する。\n\t\tfunction createDisplayWord(){\n\t\t// 表示単語を初期化する。\n\t\tdisplayWord.textContent = \"\";\n\t\t// 0〜textListsの総数間で整数値をランダムで算出する。\n\t\tlet randomIntegerInTotalWordList = Math.floor(Math.random() * wordList.length);\n\t\t// 表示する単語をランダムで選定する。\n\t\tdisplayWordInList = wordList[randomIntegerInTotalWordList];\n\n\t\t// 表示する単語の日本語訳を表示させる。\n\t\tdisplayWordJapanese.textContent = displayWordInList.jap_trans_1;\n\t\t// 表示する単語を一文字ごとに区切り、spanタグで閉じる。\n\t\t// spanタグで閉じた単語を表示する。\n\t\tcharArrayInDisplayWord = displayWordInList.eng_word.split(\"\").map(function(value){\n\t\t\t// spanタグを作成する。\n\t\t\tlet spanValue = document.createElement(\"span\");\n\t\t\t// spanタグに一文字を挿入する。\n\t\t\tspanValue.textContent = value;\n\t\t\t// 表示する単語にspanタグで閉じた一文字を追加する。\n\t\t\tdisplayWord.appendChild(spanValue);\n\t\t\treturn spanValue;\n\t\t});\n\t\t}\n\n\t\t// プレイ時間をカウントダウンする処理を定義する。\n\t\tfunction countDownTime(){\n\t\tconst currentTime = Date.now();\n\t\tconst diffBetweenCurrentTimeAndStartTime = currentTime - startTime;\n\t\tconst remainMSec = initialPlayingTimeMSec - diffBetweenCurrentTimeAndStartTime;\n\t\tconst remainSec = Math.ceil(remainMSec/1000);\n\t\tlet  remainSecLabel = `残り${(`00${remainSec}` ).slice( -3 )}秒`;\n\t\tif (remainMSec <= 0){\n\t\t\t// ゲーム終了後にplayEndFlagを1に更新する。\n\t\t\tplayEndFlag = \"1\";\n\t\t\t// プレイ時間のカウントダウンを止める。\n\t\t\tclearInterval(timerId);\n\t\t\t// 残り時間の表示を消す。\n\t\t\tremainSecLabel = \"\";\n\t\t\t// 現在のスコア（左上）の表示を消す。\n\t\t\tdisplayScore.textContent =\"\";\n\t\t\t// 問題の英単語の表示を消す。\n\t\t\tdisplayWord.textContent =\"\";\n\t\t\t// 解答の日本語の表示を消す。\n\t\t\tdisplayWordJapanese.textContent =\"\";\n\n\t\t\t// ゲーム終了後に終了を知らせるポップアップを作成する。\n\t\t\t// ゲーム終了を知らせるポップアップを定義する。\n\t\t\tconst closePopup = document.getElementById(\"closePopup\");\n\t\t\tclosePopup.textContent =\"終了\";\n\t\t\tclosePopup.className = \"closePopup\";\n\t\t\t// 戻るボタンを定義する。\n\t\t\tconst backBtn = document.getElementById(\"backBtn\");\n\t\t\t// もう一度ボタンを定義する。\n\t\t\tconst restartBtn = document.getElementById(\"restartBtn\");\n\t\t\t// 2秒後に得点を表示させる。また、もう一度ボタンと戻るボタンを表示させる。\n\t\t\tsetTimeout(function(){\n\t\t\tclosePopup.textContent = `あなたの得点は${totalScore.toLocaleString()}点です!`;\n\t\t\tclosePopup.className = \"endResultPopup\";\n\t\t\trestartBtn.addEventListener('click', function gameReStart(){\n\t\t\t\tclosePopup.className = \"endResultPopupAfterClose\";\n\t\t\t\trestartBtn.className = \"restartBtnAfterClose\";\n\t\t\t\tbackBtn.className = \"backBtnAfterClose\";\n\t\t\t\tgameStart();\n\t\t\t});\n\t\t\trestartBtn.innerHTML = \"<a href='./typingplay_eng'>もう一度遊ぶ</a>\";\n\t\t\trestartBtn.className = \"restartBtn\";\n\t\t\tbackBtn.innerHTML = \"<a href='./typingplay_index'>コース選択画面に戻る</a>\";\n\t\t\tbackBtn.className = \"backBtn\";\n\t\t\t},2000);\n\t\t}\n\t\t// 残りプレイ可能時間を更新する。\n\t\tremainPlayingTime.textContent = remainSecLabel;\n\t\t}\n\n\t\t// スコアをアップし、現在のtotalScoreを表示する処理を定義する。\n\t\tfunction countUpScore(){\n\t\tif (displayWord.textContent.length < refTextLengthForCountUpLevel1){\n\t\t\taddPoint = addScoreLevel1;\n\t\t} else {\n\t\t\taddPoint = addScoreLevel2;\n\t\t}\n\t\ttotalScore = totalScore + addPoint;\n\t\tdisplayScore.textContent = `${totalScore.toLocaleString()} P`;\n\t\treturn totalScore;\n\t\t}\n\n\t\t// タイプした文字が表示文字と一致する場合の処理を定義する。\n\t\tfunction keyDownCharCountUp(keyDownChar){\n\t\tif(keyDownChar.key === charArrayInDisplayWord[0].textContent && playEndFlag===\"0\") {\n\t\t\t// 文字色を変更する。\n\t\t\tcharArrayInDisplayWord[0].className = \"add_red\";\n\t\t\t// メーターを更新する。\n\t\t\tbonusCountMeter = bonusCountMeter +1;\n\t\t\t// 一致した文字を配列から削除する。\n\t\t\tcharArrayInDisplayWord.shift();\n\t\t\t// 表示文字全てタイプした場合、スコアアップ処理を実施し、次の表示文字を作成する処理を実施する。\n\t\t\tif(charArrayInDisplayWord.length === 0) countUpScore(), createDisplayWord();\n\t\t\t// メーターがメーター最大値以上になった場合、メーターを初期化し、プレイ可能時間を延長する。\n\t\t\tif(bonusCountMeter >= bonusCountMeterMax){\n\t\t\tbonusCountMeter = 0;\n\t\t\t// 初期プレイ時間を更新することで、残りプレイ可能時間を延長する。\n\t\t\tinitialPlayingTimeMSec = initialPlayingTimeMSec +bonusAddPlayTime;\n\t\t\t// 延長した残りプレイ時間を表示する。\n\t\t\tdisplayBonusAddPlayTime.textContent = \"+ \" + Math.ceil(bonusAddPlayTime/1000) + \"秒\";\n\t\t\t// 延長した残りプレイ時間をフェードアウトする。\n\t\t\tdisplayBonusAddPlayTime.classList.add('fadeout');\n\t\t\t// fadeoutのclassを取り除くことで、2回目以降も延長した残りプレイ時間が表示されるようにする。\n\t\t\tsetTimeout(function(){\n\t\t\t\tdisplayBonusAddPlayTime.textContent = \"\";\n\t\t\t\tdisplayBonusAddPlayTime.classList.remove('fadeout');\n\t\t\t}, 2000);\n\t\t\t}\n\t\t} else if (playEndFlag===\"0\") {\n\t\t\t// タイプミスでメーターを初期値に戻す。\n\t\t\tbonusCountMeter = 0;\n\t\t}\n\t\t// 更新したメーターを表示する。\n\t\tdocument.getElementById(\"meterImg\").src=imgArray[bonusCountMeter];\n\t\t}\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}