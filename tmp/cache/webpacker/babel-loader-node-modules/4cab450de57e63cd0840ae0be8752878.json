{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// ゲーム開始画面から遷移してきた際に処理を実施する。\nwindow.addEventListener('load', function () {\n  // Enterを押下するとゲーム開始のカウントダウンがスタートする処理を呼び出す。\n  document.addEventListener(\"keydown\", keyDownGameStart);\n}); // スペースかEnterキー押下によるゲームスタートを一回限りとするフラグを設定する。\n\nvar gameStartEnterOnlyOnce = \"0\"; // Enterを押下するとゲーム開始のカウントダウンがスタートする。\n\nfunction keyDownGameStart(keyDownEnter) {\n  if ((keyDownEnter.key === 'Enter' || keyDownEnter.key === \" \") && gameStartEnterOnlyOnce == \"0\") {\n    // 表示されている文字を非表示にする。\n    document.getElementById(\"useKeyboardPopup\").className = \"transparent\";\n    document.getElementById(\"pressEnterPopup\").className = \"transparent\";\n    document.getElementById(\"annotationAudio\").className = \"transparent\";\n    document.getElementById(\"backBtnTypingPlay\").className = \"transparent\";\n    gameStartEnterOnlyOnce = \"1\";\n    gameStart();\n  }\n\n  ;\n}\n\n; // 選択した英単語難易度によって変わるwordListの定義\n\nvar wordList = gon.wordListAll; // 選択したプレイモードによって変わるplayModeの定義\n\nvar playMode = gon.playMode; // 英単語の発音有無の設定によって変わるpronounceModeの定義\n\nvar pronounceMode = gon.pronounceMode; // 出題順の設定によって変わるpronounceModeの定義\n\nvar questionOrderMode = gon.questionOrderMode; // BGMの設定によって変わるbgmModeの定義\n\nvar bgmMode = gon.bgmMode; // タイプ音の設定によって変わるtypeAudioModeの定義\n\nvar typeAudioMode = gon.typeAudioMode; // 正解音の設定によって変わるcorrectAudioModeの定義\n\nvar correctAudioMode = gon.correctAudioMode; // ミス音の設定によって変わるincorrectAudioModeの定義\n\nvar incorrectAudioMode = gon.incorrectAudioMode;\n\nfunction gameStart() {\n  var _romaMappingTableFirs;\n\n  // 表示する単語リストを定義する。\n  // chromeの場合\"ff\"が正常に動作しない。\n  // 表示するメーターリストを定義する。\n  var imgArray = ['/assets/メーターPNG/メーター0.png', '/assets/メーターPNG/メーター10_yellow.png', '/assets/メーターPNG/メーター20_yellow.png', '/assets/メーターPNG/メーター30_yellow.png', '/assets/メーターPNG/メーター40_yellow.png', '/assets/メーターPNG/メーター50_yellow.png', '/assets/メーターPNG/メーター60_yellow.png', '/assets/メーターPNG/メーター70_yellow.png', '/assets/メーターPNG/メーター80_yellow.png', '/assets/メーターPNG/メーター90_yellow.png', '/assets/メーターPNG/メーター100_yellow.png', '/assets/メーターPNG/メーター10_green.png', '/assets/メーターPNG/メーター20_green.png', '/assets/メーターPNG/メーター30_green.png', '/assets/メーターPNG/メーター40_green.png', '/assets/メーターPNG/メーター50_green.png', '/assets/メーターPNG/メーター60_green.png', '/assets/メーターPNG/メーター70_green.png', '/assets/メーターPNG/メーター80_green.png', '/assets/メーターPNG/メーター90_green.png', '/assets/メーターPNG/メーター100_green.png', '/assets/メーターPNG/メーター10_blue.png', '/assets/メーターPNG/メーター20_blue.png', '/assets/メーターPNG/メーター30_blue.png', '/assets/メーターPNG/メーター40_blue.png', '/assets/メーターPNG/メーター50_blue.png', '/assets/メーターPNG/メーター60_blue.png', '/assets/メーターPNG/メーター70_blue.png', '/assets/メーターPNG/メーター80_blue.png', '/assets/メーターPNG/メーター90_blue.png', '/assets/メーターPNG/メーター100_blue.png', '/assets/メーターPNG/メーター10_pink.png', '/assets/メーターPNG/メーター20_pink.png', '/assets/メーターPNG/メーター30_pink.png', '/assets/メーターPNG/メーター40_pink.png', '/assets/メーターPNG/メーター50_pink.png', '/assets/メーターPNG/メーター60_pink.png', '/assets/メーターPNG/メーター70_pink.png', '/assets/メーターPNG/メーター80_pink.png', '/assets/メーターPNG/メーター90_pink.png', '/assets/メーターPNG/メーター100_pink.png', '/assets/メーターPNG/メーター10_red.png', '/assets/メーターPNG/メーター20_red.png', '/assets/メーターPNG/メーター30_red.png', '/assets/メーターPNG/メーター40_red.png', '/assets/メーターPNG/メーター50_red.png', '/assets/メーターPNG/メーター60_red.png', '/assets/メーターPNG/メーター70_red.png', '/assets/メーターPNG/メーター80_red.png', '/assets/メーターPNG/メーター90_red.png', '/assets/メーターPNG/メーター100_red.png'];\n  var romaMappingTableFirst = (_romaMappingTableFirs = {\n    \"あ\": \"a\",\n    \"い\": \"i\",\n    \"う\": \"u\",\n    \"え\": \"e\",\n    \"お\": \"o\",\n    \"か\": \"ka\",\n    \"き\": \"ki\",\n    \"く\": \"ku\",\n    \"け\": \"ke\",\n    \"こ\": \"ko\",\n    \"さ\": \"sa\",\n    \"し\": \"si\",\n    \"す\": \"su\",\n    \"せ\": \"se\",\n    \"そ\": \"so\",\n    \"た\": \"ta\",\n    \"ち\": \"ti\",\n    \"つ\": \"tu\",\n    \"て\": \"te\",\n    \"と\": \"to\",\n    \"な\": \"na\",\n    \"に\": \"ni\",\n    \"ぬ\": \"nu\",\n    \"ね\": \"ne\",\n    \"の\": \"no\",\n    \"は\": \"ha\",\n    \"ひ\": \"hi\",\n    \"ふ\": \"hu\",\n    \"へ\": \"he\",\n    \"ほ\": \"ho\",\n    \"ま\": \"ma\",\n    \"み\": \"mi\",\n    \"む\": \"mu\",\n    \"め\": \"me\",\n    \"も\": \"mo\",\n    \"や\": \"ya\",\n    \"ゆ\": \"yu\",\n    \"よ\": \"yo\",\n    \"ら\": \"ra\",\n    \"り\": \"ri\",\n    \"る\": \"ru\",\n    \"れ\": \"re\",\n    \"ろ\": \"ro\",\n    \"わ\": \"wa\",\n    \"を\": \"wo\",\n    \"が\": \"ga\",\n    \"ぎ\": \"gi\",\n    \"ぐ\": \"gu\",\n    \"げ\": \"ge\",\n    \"ご\": \"go\",\n    \"ざ\": \"za\",\n    \"じ\": \"zi\",\n    \"ず\": \"zu\",\n    \"ぜ\": \"ze\",\n    \"ぞ\": \"zo\",\n    \"だ\": \"da\",\n    \"ぢ\": \"di\",\n    \"づ\": \"du\",\n    \"で\": \"de\",\n    \"ど\": \"do\",\n    \"ば\": \"ba\",\n    \"び\": \"bi\",\n    \"ぶ\": \"bu\",\n    \"べ\": \"be\",\n    \"ぼ\": \"bo\",\n    \"ぱ\": \"pa\",\n    \"ぴ\": \"pi\",\n    \"ぷ\": \"pu\",\n    \"ぺ\": \"pe\",\n    \"ぽ\": \"po\",\n    \"ぁ\": \"la\",\n    \"ぃ\": \"li\",\n    \"ぅ\": \"lu\",\n    \"ぇ\": \"le\",\n    \"ぉ\": \"lo\",\n    \"ゃ\": \"lya\",\n    \"ゅ\": \"lyu\",\n    \"ょ\": \"lyo\",\n    \"でゃ\": \"dha\",\n    \"でぃ\": \"dhi\",\n    \"でゅ\": \"dhu\",\n    \"でぇ\": \"dhe\",\n    \"でょ\": \"dho\",\n    \"つぁ\": \"tsa\",\n    \"つぃ\": \"tsi\",\n    \"つぇ\": \"tse\",\n    \"つぉ\": \"tso\",\n    \"てゃ\": \"tha\",\n    \"てぃ\": \"thi\",\n    \"てゅ\": \"thu\",\n    \"てぇ\": \"the\",\n    \"てょ\": \"tho\",\n    \"ふぁ\": \"fa\",\n    \"ふぃ\": \"fi\",\n    \"ふぇ\": \"fe\",\n    \"ふぉ\": \"fo\",\n    \"うぁ\": \"wha\",\n    \"うぃ\": \"wi\",\n    \"うぇ\": \"we\",\n    \"うぉ\": \"who\",\n    \"ゔぁ\": \"va\",\n    \"ゔぃ\": \"vi\",\n    \"ゔ\": \"vu\",\n    \"ゔぇ\": \"ve\",\n    \"ゔぉ\": \"vo\",\n    \"きゃ\": \"kya\",\n    \"きぃ\": \"kyi\",\n    \"きゅ\": \"kyu\",\n    \"きぇ\": \"kye\",\n    \"きょ\": \"kyo\",\n    \"ぎゃ\": \"gya\",\n    \"ぎぃ\": \"gyi\",\n    \"ぎゅ\": \"gyu\",\n    \"ぎぇ\": \"gye\",\n    \"ぎょ\": \"gyo\",\n    \"しゃ\": \"sya\",\n    \"しぃ\": \"syi\",\n    \"しゅ\": \"syu\",\n    \"しぇ\": \"sye\",\n    \"しょ\": \"syo\",\n    \"じゃ\": \"zya\",\n    \"じぃ\": \"zyi\",\n    \"じゅ\": \"zyu\",\n    \"じぇ\": \"zye\",\n    \"じょ\": \"zyo\",\n    \"ちゃ\": \"tya\",\n    \"ちぃ\": \"tyi\",\n    \"ちゅ\": \"tyu\",\n    \"ちぇ\": \"tye\",\n    \"ちょ\": \"tyo\",\n    \"ぢゃ\": \"dya\",\n    \"ぢぃ\": \"dyi\",\n    \"ぢゅ\": \"dyu\",\n    \"ぢぇ\": \"dye\",\n    \"ぢょ\": \"dyo\",\n    \"にゃ\": \"nya\",\n    \"にぃ\": \"nyi\",\n    \"にゅ\": \"nyu\",\n    \"にぇ\": \"nye\",\n    \"にょ\": \"nyo\",\n    \"ひゃ\": \"hya\",\n    \"ひぃ\": \"hyi\",\n    \"ひゅ\": \"hyu\",\n    \"ひぇ\": \"hye\",\n    \"ひょ\": \"hyo\",\n    \"びゃ\": \"bya\",\n    \"びぃ\": \"byi\",\n    \"びゅ\": \"byu\",\n    \"びぇ\": \"bye\",\n    \"びょ\": \"byo\",\n    \"ぴゃ\": \"pya\",\n    \"ぴぃ\": \"pyi\",\n    \"ぴゅ\": \"pyu\",\n    \"ぴぇ\": \"pye\",\n    \"ぴょ\": \"pyo\",\n    \"ふゃ\": \"fya\"\n  }, _defineProperty(_romaMappingTableFirs, \"\\u3075\\u3043\", \"fyi\"), _defineProperty(_romaMappingTableFirs, \"ふゅ\", \"fyu\"), _defineProperty(_romaMappingTableFirs, \"\\u3075\\u3047\", \"fye\"), _defineProperty(_romaMappingTableFirs, \"ふょ\", \"fyo\"), _defineProperty(_romaMappingTableFirs, \"みゃ\", \"mya\"), _defineProperty(_romaMappingTableFirs, \"みぃ\", \"myi\"), _defineProperty(_romaMappingTableFirs, \"みゅ\", \"myu\"), _defineProperty(_romaMappingTableFirs, \"みぇ\", \"mye\"), _defineProperty(_romaMappingTableFirs, \"みょ\", \"myo\"), _defineProperty(_romaMappingTableFirs, \"りゃ\", \"rya\"), _defineProperty(_romaMappingTableFirs, \"りぃ\", \"ryi\"), _defineProperty(_romaMappingTableFirs, \"りゅ\", \"ryu\"), _defineProperty(_romaMappingTableFirs, \"りぇ\", \"rye\"), _defineProperty(_romaMappingTableFirs, \"りょ\", \"ryo\"), _defineProperty(_romaMappingTableFirs, \"くぁ\", \"kwa\"), _defineProperty(_romaMappingTableFirs, \"ぐぁ\", \"gwa\"), _defineProperty(_romaMappingTableFirs, \"とぅ\", \"twu\"), _defineProperty(_romaMappingTableFirs, \"どぅ\", \"dwu\"), _defineProperty(_romaMappingTableFirs, \"いぇ\", \"ye\"), _defineProperty(_romaMappingTableFirs, \"ー\", \"-\"), _romaMappingTableFirs);\n  var romaMappingTableSecond = {\n    \"い\": \"yi\",\n    \"か\": \"ca\",\n    \"く\": \"cu\",\n    \"こ\": \"co\",\n    \"し\": \"shi\",\n    \"せ\": \"ce\",\n    \"ち\": \"chi\",\n    \"つ\": \"tsu\",\n    \"ふ\": \"fu\",\n    \"じ\": \"ji\",\n    \"ぁ\": \"xa\",\n    \"ぃ\": \"xi\",\n    \"ぅ\": \"xu\",\n    \"ぇ\": \"xe\",\n    \"ぉ\": \"xo\",\n    \"ゃ\": \"xya\",\n    \"ゅ\": \"xyu\",\n    \"ょ\": \"xyo\",\n    \"しゃ\": \"sha\",\n    \"しゅ\": \"shu\",\n    \"しぇ\": \"she\",\n    \"しょ\": \"sho\",\n    \"じゃ\": \"ja\",\n    \"じぃ\": \"jyi\",\n    \"じゅ\": \"ju\",\n    \"じぇ\": \"je\",\n    \"じょ\": \"jo\",\n    \"ちゃ\": \"cha\",\n    \"ちぃ\": \"cyi\",\n    \"ちゅ\": \"chu\",\n    \"ちぇ\": \"che\",\n    \"ちょ\": \"cho\",\n    \"うぃ\": \"whi\",\n    \"うぇ\": \"whe\"\n  };\n  var romaMappingTableThird = {\n    \"し\": \"ci\",\n    \"じゃ\": \"jya\",\n    \"じゅ\": \"jyu\",\n    \"じぇ\": \"jye\",\n    \"じょ\": \"jyo\",\n    \"ちゃ\": \"cya\",\n    \"ちゅ\": \"cyu\",\n    \"ちぇ\": \"cye\",\n    \"ちょ\": \"cyo\"\n  }; // タイピングの正誤判定に使用する変数を定義する。\n\n  var wordLetterWithSmallLetter = \"\";\n  var wordLetterSole = \"\";\n  var charArrayInDisplayWordAlphaFirst = [];\n  var charArrayInDisplayWordAlphaSecond = [];\n  var charArrayInDisplayWordAlphaThird = [];\n  var charArrayInDisplayWordAlphaSole = [];\n  var charArrayInDisplayWordAlphaSoleSecond = [];\n  var charArrayInDisplayWordAlphaSoleThird = [];\n  var shiftAlreadyStartedCountAll = 0;\n  var shiftAlreadyStartedCountFirst = 0;\n  var shiftAlreadyStartedCountSecond = 0;\n  var shiftAlreadyStartedCountThird = 0;\n  var shiftAlreadyStartedCountSoleFirst = 0;\n  var shiftAlreadyStartedCountSoleSecond = 0;\n  var shiftAlreadyStartedCountSoleThird = 0;\n  var keyTempForSmallTsuPreWithNext = \"\";\n  var keyTempForSmallTsuPreFirst = \"\";\n  var keyTempForSmallTsuPreSecond = \"\";\n  var keyTempForSmallTsuPreThird = \"\";\n  var keyTempForNnPre = \"\"; // 英単語を順番に出題する場合の番号の初期値を定義する。\n\n  var sortById = 0; // 表示するメーター初期値を定義する。\n\n  var bonusCountMeter = 0; // 表示するメーター最大値を定義する。\n\n  var bonusCountMeterMax = 50; // 表示するプレイ延長時間を定義する。\n\n  var displayBonusAddPlayTime = document.getElementById(\"displayBonusAddPlayTime\");\n  displayBonusAddPlayTime.className = \"displayBonusAddPlayTime\"; // メーター最大値に達した際の延長するプレイ時間を定義する。\n\n  var bonusAddPlayTime = 3000; // メーターの初期値を表示する。\n\n  document.getElementById(\"meterImg\").src = imgArray[bonusCountMeter]; // ゲーム開始までをカウントダウン変数を定義する。\n\n  var countDownPopup = document.getElementById(\"countDownPopup\"); // class属性を付与する。\n\n  countDownPopup.className = \"countDownPopup\"; // ゲーム開始までをカウントダウン変数の初期値を定義する。\n\n  var countDownPopupNumber = 3; // ゲーム開始までをカウントダウン変数の初期値を表示する。\n\n  countDownPopup.textContent = countDownPopupNumber; // ゲーム開始までをカウントダウンを1秒ごとに実施するように定義する。\n\n  var timerIdToStart = setInterval(countDownTimeToStart, 1000); // ゲーム開始までをカウントダウンを実施する処理を定義する。\n\n  function countDownTimeToStart() {\n    // カウントダウン文字を１ずつ減らす。\n    countDownPopupNumber = countDownPopupNumber - 1; //カウントダウンが0になれば、ゲームを開始する。\n\n    if (countDownPopupNumber <= 0) {\n      clearInterval(timerIdToStart);\n      countDownPopup.className = \"countDownPopupAfterClose\";\n      typingPlayStart();\n    } else {\n      countDownPopup.textContent = countDownPopupNumber;\n    }\n  } // ゲームを開始する処理を定義する。\n\n\n  function typingPlayStart() {\n    // 表示する単語を定義する。\n    var displayWord = document.getElementById(\"displayWord\");\n    displayWord.className = \"displayWord\";\n    var displayWordEnglish = document.getElementById(\"displayWordEnglish\");\n    displayWordEnglish.className = \"displayWordEnglish\";\n    var displayWordKanji = document.getElementById(\"displayWordKanji\");\n    displayWordKanji.className = \"displayWordKanji\"; // 表示する単語を一文字ずつに分ける変数を定義する。\n\n    var charArrayInDisplayWordJap = []; // ゲーム終了を判定するフラグを定義する。\n\n    var playEndFlag = \"0\"; // 「答えを見る」ボタン押下有無を判定するフラグを定義する。\n\n    var answerOpenFlag = \"0\"; // プレイモード：タイムアタックですべての出題範囲に解答済み判定フラグを設定する。\n\n    var gameCompleteTimeAttackFlag = \"0\"; // 表示する単語を作成する。\n\n    createDisplayWord(); // プレイ開始時間を取得する。\n\n    var startTime = Date.now(); // 表示する残りのプレイ可能時間を定義する。\n\n    var remainPlayingTime = document.getElementById(\"remainPlayingTime\");\n    remainPlayingTime.className = \"remainPlayingTime\"; // 表示するスタート時のプレイ可能時間を定義する。--------------------------------------------------------------\n    // プレイモード：タイムアタックの場合は5分とする。\n\n    var initialPlayingTimeMSec = 300000; // プレイモード：タイムアタックの場合は30分とする。\n\n    if (playMode == \"タイムアタック\") {\n      initialPlayingTimeMSec = 1800000;\n    }\n\n    ; // プレイモード：タイムアタックの場合、ゲームクリア後に合計プレイ時間表示する。\n\n    var totalPlayingTimeMSec = 0; // スタート時に残りのプレイ可能時間の初期値を表示するためにcountDownTimeを実施する。\n\n    setTimeout(countDownTime, 0); // 1秒ごとにプレイ時間のcountDownTimeを実施するように定義する。\n\n    var timerId = setInterval(countDownTime, 1000); // 正解時に表示する丸を定義する。\n\n    document.getElementById(\"circleImg\").src = '/assets/正解○.png';\n    circleImg.classList.add('transparent'); // \"発音を聞く\"ボタンを表示する。\n\n    var pronounceAgainButton = document.getElementById(\"pronounceAgainButton\");\n    pronounceAgainButton.innerHTML = \"発音を聞く\";\n    pronounceAgainButton.className = \"pronounceAgainButton\";\n\n    pronounceAgainButton.onclick = function () {\n      pronounce(displayWordInList.eng_word);\n    }; // \"ヒントを見る\"ボタンを表示する。(プレイモード普通、タイムアタックの時のみ機能)\n\n\n    var hintButton = document.getElementById(\"hintButton\");\n    hintButton.innerHTML = \"ヒントを見る\";\n\n    if (playMode == \"普通\" || playMode == \"タイムアタック\") {\n      hintButton.className = \"hintButton\";\n\n      hintButton.onclick = function () {\n        charArrayInDisplayWordJap[0].classList.remove('transparent');\n      };\n    } else {\n      hintButton.className = \"hintButtonPractice\";\n    }\n\n    ; // \"答えを見る\"ボタンを表示する。(プレイモード普通、タイムアタックの時のみ機能)\n\n    var answerButton = document.getElementById(\"answerButton\");\n    answerButton.innerHTML = \"答えを見る\";\n\n    if (playMode == \"普通\" || playMode == \"タイムアタック\") {\n      answerButton.className = \"answerButton\";\n\n      answerButton.onclick = function () {\n        for (var i = 0; i < charArrayInDisplayWordJap.length; i++) {\n          charArrayInDisplayWordJap[i].classList.remove('transparent');\n        }\n\n        displayWordKanji.className = \"displayWordKanji\"; // 連続正解数を0に戻す。\n\n        totalConsecutiveNumCorrectNum = 0;\n        displayConsecutiveNumCorrectNum.textContent = totalConsecutiveNumCorrectNum; // メーターを初期値に戻す。\n\n        bonusCountMeter = 0;\n        document.getElementById(\"meterImg\").src = imgArray[bonusCountMeter]; // 「答えを見る」判定フラグを更新する。\n\n        answerOpenFlag = \"1\";\n      };\n    } else {\n      // (プレイモード練習の時)\n      answerButton.className = \"answerButtonPractice\";\n    }\n\n    ; // \"最初からやり直す\"ボタンを表示する。\n\n    var restartButtonMidGame = document.getElementById(\"restartButtonMidGame\");\n    restartButtonMidGame.classList.remove('transparent'); // \"コース選択画面に戻る\"ボタンを表示する。\n\n    var courseSettingBackButtonMidGame = document.getElementById(\"courseSettingBackButtonMidGame\");\n    courseSettingBackButtonMidGame.classList.remove('transparent'); // 以下、スコア定義---------------------------------------------------------------------------------------------------\n    // -----------------------------------------------------------------------------------------------------------------\n    // プレイモード：練習・普通の場合はスコアを表示させる。\n    // プレイモード：タイムアタックはスコアを表示させない。\n\n    if (playMode == \"練習\" || playMode == \"普通\") {\n      // 表示するスコアを定義する。\n      var _displayScoreEntire = document.getElementById(\"displayScoreEntire\");\n\n      _displayScoreEntire.className = \"displayScoreEntire\";\n\n      var _displayScore = document.getElementById(\"displayScore\");\n\n      _displayScore.className = \"displayScore\";\n\n      var _displayP = document.getElementById(\"displayP\");\n\n      _displayP.className = \"displayP\";\n    }\n\n    ; // プレモード：練習・普通の場合のみ使用する。----------------------------\n    // ---------------------------------------------------------------\n    // 合計スコアの初期値を定義する。\n\n    var totalScore = 0; // スコアアップする基準を定義する。\n\n    var refTextLengthForCountUpLevel1 = 4;\n    var addScoreLevel1 = 50;\n    var addScoreLevel2 = 50; // ---------------------------------------------------------------\n    // ---------------------------------------------------------------\n    // 表示する正解数全体のクラス\n\n    var NumCorrectMidGamePlay = document.getElementById(\"NumCorrectMidGamePlay\");\n    NumCorrectMidGamePlay.className = \"NumCorrectMidGamePlay\"; // 表示する正解数を定義する。\n\n    var displayNumCorrectWord = document.getElementById(\"displayNumCorrectWord\");\n    displayNumCorrectWord.className = \"displayNumCorrectWord\";\n    displayNumCorrectWord.textContent = \"合計正解数\";\n    var displayNumCorrectNum = document.getElementById(\"displayNumCorrectNum\");\n    displayNumCorrectNum.className = \"displayNumCorrectNum\";\n    var totalNumCorrectNum = 0;\n    displayNumCorrectNum.textContent = totalNumCorrectNum; // 表示する連続正解数を定義する。\n\n    var displayConsecutiveNumCorrectWord = document.getElementById(\"displayConsecutiveNumCorrectWord\");\n    displayConsecutiveNumCorrectWord.className = \"displayConsecutiveNumCorrectWord\";\n    displayConsecutiveNumCorrectWord.textContent = \"連続正解数\";\n    var displayConsecutiveNumCorrectNum = document.getElementById(\"displayConsecutiveNumCorrectNum\");\n    displayConsecutiveNumCorrectNum.className = \"displayConsecutiveNumCorrectNum\";\n    var totalConsecutiveNumCorrectNum = 0;\n    displayConsecutiveNumCorrectNum.textContent = totalConsecutiveNumCorrectNum; // 表示する最高連続正解数を定義する。\n\n    var displayMaxConsecutiveNumCorrectWord = document.getElementById(\"displayMaxConsecutiveNumCorrectWord\");\n    displayMaxConsecutiveNumCorrectWord.className = \"displayMaxConsecutiveNumCorrectWord\";\n    displayMaxConsecutiveNumCorrectWord.textContent = \"最高連続正解数\";\n    var displayMaxConsecutiveNumCorrectNum = document.getElementById(\"displayMaxConsecutiveNumCorrectNum\");\n    displayMaxConsecutiveNumCorrectNum.className = \"displayMaxConsecutiveNumCorrectNum\";\n    var totalMaxConsecutiveNumCorrectNum = 0;\n    displayMaxConsecutiveNumCorrectNum.textContent = totalMaxConsecutiveNumCorrectNum; // 以上、スコア定義---------------------------------------------------------------------------------------------------\n    // -----------------------------------------------------------------------------------------------------------------\n    // タイプされる度にkeyDownCharCountUpを実施するように定義する。\n\n    document.addEventListener(\"keydown\", keyDownCharCountUp); // 表示する単語を作成する処理を定義する。\n\n    function createDisplayWord() {\n      // すでにゲームが終了している場合、新規ワードを生成しない。ゲーム中のみ生成する。\n      // ギリギリで問題に正解した場合、○を表示した後、500m秒後にワードを生成する処理が走るため。\n      if (playEndFlag === \"0\") {\n        // 表示単語を初期化する。\n        displayWord.textContent = \"\"; // 出題順の設定により、displayWordInListを変更\n\n        if (questionOrderMode == \"番号順\") {\n          // 英単語を順番に出題する場合の番号の初期値を定義する。\n          displayWordInList = wordList[sortById];\n          sortById++; // sortByIdが出題英単語数を超えた場合、初期値に戻す。\n\n          if (sortById >= wordList.length) {\n            sortById = 0; // プレイモード：タイムアタックの場合、次の問題に正解した時点でゲーム終了とする。\n\n            if (playMode == \"タイムアタック\") {\n              // フラグを1に更新する。\n              gameCompleteTimeAttackFlag = \"1\";\n            }\n\n            ;\n          }\n\n          ;\n        } else {\n          // 出題順がランダムの場合\n          // 0〜textListsの総数間で整数値をランダムで算出する。\n          var randomIntegerInTotalWordList = Math.floor(Math.random() * wordList.length); // 表示する単語をランダムで選定する。\n\n          displayWordInList = wordList[randomIntegerInTotalWordList]; // プレイモード：タイムアタックの場合は、wordListから表示単語を削除する。\n\n          if (playMode == \"タイムアタック\") {\n            // 同じ問題を２度出題しないように、一度出題した問題はwordListから削除する。\n            wordList.splice(randomIntegerInTotalWordList, 1); // wordList.length == 0になった場合、次の問題に正解した時点でゲーム終了とする。\n\n            if (wordList.length == 0) {\n              // フラグを1に更新する。\n              gameCompleteTimeAttackFlag = \"1\";\n            }\n\n            ;\n          }\n\n          ;\n        }\n\n        ; // 英単語を生成した際に、発音させる。（発音ありの場合のみ）\n\n        if (pronounceMode == \"発音あり\") {\n          pronounce(displayWordInList.eng_word);\n        }\n\n        ; // 英単語を表示させる。\n\n        displayWordEnglish.textContent = displayWordInList.eng_word; // 日本語訳(漢字)を表示させる。\n\n        displayWordKanji.textContent = displayWordInList.jap_trans_1; // プレイモード練習の時は、答えとして漢字を表示させ、普通、タイムアタックでは非表示にする。\n\n        if (playMode == \"練習\") {\n          displayWordKanji.className = \"displayWordKanji\";\n        } else if (playMode == \"普通\" || playMode == \"タイムアタック\") {\n          displayWordKanji.className = \"transparent\";\n        } else {\n          displayWordKanji.className = \"transparent\";\n        } // 表示する単語を一文字ごとに区切り、spanタグで閉じる。\n        // spanタグで閉じた単語を表示する。\n\n\n        charArrayInDisplayWordJap = displayWordInList.jap_trans_1_yomi.split(\"\").map(function (value) {\n          // spanタグを作成する。\n          var spanValue = document.createElement(\"span\"); // spanタグに一文字を挿入する。\n\n          spanValue.textContent = value; // 各文字（ひらがな）に対して、transparentクラスを付与する。（プレイモード普通、タイムアタックのときのみ）\n\n          if (playMode == \"普通\" || playMode == \"タイムアタック\") {\n            spanValue.className = \"transparent\";\n          }\n\n          ; // 表示する単語にspanタグで閉じた一文字を追加する。\n\n          displayWord.appendChild(spanValue);\n          return spanValue;\n        });\n      }\n\n      ;\n    }\n\n    ; // プレイ時間をカウントダウンする処理を定義する。\n\n    function countDownTime() {\n      var currentTime = Date.now();\n      var diffBetweenCurrentTimeAndStartTime = currentTime - startTime;\n      var remainMSec = initialPlayingTimeMSec - diffBetweenCurrentTimeAndStartTime;\n      var remainAllSec = Math.ceil(remainMSec / 1000);\n      var remainMin = Math.floor(remainAllSec / 60);\n      var remainSec = Math.ceil(remainAllSec % 60);\n      var remainSecLabel = \"\\u6B8B\\u308A\".concat(\"0\".concat(remainMin).slice(-2), \"\\u5206\").concat(\"0\".concat(remainSec).slice(-2), \"\\u79D2\"); // 残り時間が0になった場合の処理を定義する。\n\n      if (remainMSec <= 0) {\n        gameClose();\n      } // 残りプレイ可能時間を更新する。\n\n\n      remainPlayingTime.textContent = remainSecLabel; // プレイモード：タイムアタックの場合は、使用時間を最後に表示する。\n\n      if (playMode == \"タイムアタック\") {\n        totalPlayingTimeMSec = diffBetweenCurrentTimeAndStartTime;\n      }\n\n      ;\n    }\n\n    ; // 以下、ゲーム終了時の処理を定義する。------------------------------------------------------\n    // ------------------------------------------------------------------------------------\n\n    function gameClose() {\n      // ゲーム終了後にplayEndFlagを1に更新する。\n      playEndFlag = \"1\"; // プレイ時間のカウントダウンを止める。\n\n      clearInterval(timerId); // 残り時間の表示を消す。\n\n      remainPlayingTime.className = \"transparent\"; // 現在のスコア（左上）の表示を消す。\n      // プレイモード：練習・普通の場合のみ\n\n      if (playMode == \"練習\" || playMode == \"普通\") {\n        displayScoreEntire.className = \"transparent\";\n        displayScore.className = \"transparent\";\n        displayP.className = \"transparent\";\n      }\n\n      ; //正解数全体のクラスを非表示にする。\n\n      NumCorrectMidGamePlay.className = \"transparent\"; // 正解数の表示を消す。\n\n      displayNumCorrectWord.className = \"transparent\";\n      displayNumCorrectNum.className = \"transparent\"; // 連続正解数の表示を消す。\n\n      displayConsecutiveNumCorrectWord.className = \"transparent\";\n      displayConsecutiveNumCorrectNum.className = \"transparent\"; // 最高連続正解数の表示を消す。\n\n      displayMaxConsecutiveNumCorrectWord.className = \"transparent\";\n      displayMaxConsecutiveNumCorrectNum.className = \"transparent\"; // 問題の英単語の表示を消す。\n\n      displayWordEnglish.textContent = \"\"; // 解答の日本語の表示を消す。\n\n      displayWord.textContent = \"\"; // 解答の日本語訳の漢字の表示を消す。\n\n      displayWordKanji.textContent = \"\"; // 発音を聞くボタンを消す。\n\n      pronounceAgainButton.className = \"transparent\"; // ヒントを見るボタンを消す。\n\n      hintButton.className = \"transparent\"; // 答えを見るボタンを消す。\n\n      answerButton.className = \"transparent\"; // \"最初からやり直す\"ボタンを消す。\n\n      restartButtonMidGame.className = \"transparent\"; // \"コース選択画面に戻る\"ボタンを消す。\n\n      courseSettingBackButtonMidGame.className = \"transparent\"; // 正解時に表示される○の画像を消す。\n\n      circleImg.className = \"transparent\"; // ゲーム終了後に終了を知らせるポップアップを作成する。\n      // ゲーム終了を知らせるポップアップを定義する。\n\n      var closePopup = document.getElementById(\"closePopup\");\n      closePopup.textContent = \"終了\";\n      closePopup.className = \"closePopup\"; // もう一度ボタンを定義する。\n\n      var restartBtn = document.getElementById(\"restartBtn\"); // 戻るボタンを定義する。\n\n      var backBtn = document.getElementById(\"backBtn\"); // 2秒後に得点を表示させる。また、もう一度ボタンと戻るボタンを表示させる。\n\n      setTimeout(function () {\n        // 得点の表示\n        // プレイモード：練習・普通の場合は、スコアを表示する。\n        if (playMode == \"練習\" || playMode == \"普通\") {\n          closePopup.textContent = \"\\u3042\\u306A\\u305F\\u306E\\u5F97\\u70B9\\u306F\".concat(totalScore.toLocaleString(), \"\\u70B9\\u3067\\u3059!\");\n          closePopup.className = \"endResultPopup\";\n        } else {\n          // プレイモード：タイムアタックの場合は、かかった時間を表示する。\n          // ただし、すべての出題範囲に解答できた場合のみ。\n          if (gameCompleteTimeAttackFlag == \"1\") {\n            var remainAllSecTimeAttack = Math.ceil(totalPlayingTimeMSec / 1000);\n            var remainMinTimeAttack = Math.floor(remainAllSecTimeAttack / 60);\n            var remainSecTimeAttack = Math.ceil(remainAllSecTimeAttack % 60);\n            closePopup.textContent = \"\\u3042\\u306A\\u305F\\u304C\\u304B\\u304B\\u3063\\u305F\\u6642\\u9593\\u306F\".concat(\"0\".concat(remainMinTimeAttack).slice(-2), \"\\u5206\").concat(\"0\".concat(remainSecTimeAttack).slice(-2), \"\\u79D2\\u3067\\u3059!\");\n            closePopup.className = \"endResultPopup\";\n          } else {\n            // 時間切れの場合は、クリアできなかったと表示する。\n            closePopup.textContent = \"\\u6B8B\\u5FF5\\u306A\\u304C\\u3089\\u30AF\\u30EA\\u30A2\\u3067\\u304D\\u307E\\u305B\\u3093\\u3067\\u3057\\u305F\\u3002\";\n            closePopup.className = \"endResultPopup\";\n          }\n        }\n\n        ; // もう一度ボタンの表示（transparentを消して表示させる）\n\n        restartBtn.classList.remove('transparent'); // 戻るボタンの表示（transparentを消して表示させる）\n\n        backBtn.classList.remove('transparent');\n      }, 2000);\n    } // 以上、ゲーム終了時の処理を定義する。------------------------------------------------------\n    // ------------------------------------------------------------------------------------\n    // スコアをアップし、現在のtotalScoreを表示する処理を定義する。\n\n\n    function countUpScore() {\n      if (displayWord.textContent.length < refTextLengthForCountUpLevel1) {\n        addPoint = addScoreLevel1;\n      } else {\n        addPoint = addScoreLevel2;\n      }\n\n      ; // 合計得点を定義する。\n\n      totalScore = totalScore + addPoint;\n      displayScore.setAttribute('data-num', totalScore);\n      var countElm = $('.displayScore'),\n          countSpeed = 10;\n      countElm.each(function () {\n        var self = $(this),\n            // 合計得点を定義する。\n        countMax = self.attr('data-num'),\n            thisCount = self.text(),\n            countTimer;\n        countUpAnime(); // 数値をカウントアップするアニメーションを定義する。\n\n        function countUpAnime() {\n          countTimer = setInterval(function () {\n            var countNext = thisCount++;\n            self.text(countNext); //\n\n            if (countNext == countMax) {\n              clearInterval(countTimer);\n            }\n          }, countSpeed);\n        }\n\n        ;\n      });\n    }\n\n    ; // 正解数をカウントアップする処理を定義する。\n\n    function countUpCorrectNum() {\n      // 合計正解数のカウントアップ\n      totalNumCorrectNum = totalNumCorrectNum + 1;\n      displayNumCorrectNum.textContent = totalNumCorrectNum; // 連続正解数のカウントアップ\n\n      totalConsecutiveNumCorrectNum = totalConsecutiveNumCorrectNum + 1;\n      displayConsecutiveNumCorrectNum.textContent = totalConsecutiveNumCorrectNum; // 最高連続正解数のカウントアップ\n\n      if (totalMaxConsecutiveNumCorrectNum < totalConsecutiveNumCorrectNum) {\n        totalMaxConsecutiveNumCorrectNum = totalMaxConsecutiveNumCorrectNum + 1;\n        displayMaxConsecutiveNumCorrectNum.textContent = totalMaxConsecutiveNumCorrectNum;\n      }\n\n      ;\n    }\n\n    ; // タイプした文字が表示文字と一致する場合の処理を定義する。\n\n    function keyDownCharCountUp(keyDownChar) {\n      if (playEndFlag === \"0\") {\n        // 文字によって、文字列の最後にあるかどうかで入力形式が変わるため、\"っ\"\"ん\"は個別に処理を定義する。\n        // 先頭文字が小さい\"っ\"の場合\n        // uはxtsuなどで\"っ\"を打ち込めるため、条件分岐要。\n        if (charArrayInDisplayWordJap[0].textContent === \"っ\") {\n          if (keyDownChar.key !== \"a\" && keyDownChar.key !== \"i\" && keyDownChar.key !== \"e\" && keyDownChar.key !== \"o\" && keyDownChar.key !== \"n\") {\n            // \"っ\"が最後の文字ではない場合、同じキーを２回連続でタイプしてOKとする。\n            if (charArrayInDisplayWordJap[1] != null) {\n              // 入力対象文字に対して、入力処理が開始していない場合\n              if (shiftAlreadyStartedCountAll === 0 && keyDownChar.key !== \"u\") {\n                keyTempForSmallTsuPreWithNext = keyDownChar.key;\n                shiftAlreadyStartedCountAll = 1;\n                correctTyping();\n              } else {\n                // 同じアルファベットを入力した場合、\"っ\"を入力完了にし、再度keyDownCharCountUpを実施する。\n                if (keyDownChar.key === keyTempForSmallTsuPreWithNext && keyDownChar.key !== \"u\") {\n                  keyTempForSmallTsuPreWithNext = \"\";\n                  keyTempForSmallTsuPreFirst = \"\";\n                  keyTempForSmallTsuPreSecond = \"\";\n                  keyTempForSmallTsuPreThird = \"\";\n                  charArrayInDisplayWordJap[0].className = \"add_red\";\n                  charArrayInDisplayWordJap.shift();\n                  shiftAlreadyStartedCountAll = 0;\n                  correctTyping();\n                  keyDownCharCountUp(keyDownChar); // 異なる場合は前回入力アルファベットに入力したアルファベットを上書き\n                } else {\n                  if (keyDownChar.key === \"t\" && (keyTempForSmallTsuPreFirst === \"l\" || keyTempForSmallTsuPreFirst === \"x\")) {} else if ((keyDownChar.key === \"u\" || keyDownChar.key === \"s\") && keyTempForSmallTsuPreSecond === \"t\" && (keyTempForSmallTsuPreFirst === \"l\" || keyTempForSmallTsuPreFirst === \"x\")) {} else {\n                    typeMissAudio();\n                  }\n\n                  ;\n\n                  if (keyDownChar.key !== \"u\") {\n                    keyTempForSmallTsuPreWithNext = keyDownChar.key;\n                  }\n\n                  ;\n                }\n\n                ;\n              }\n\n              ;\n            }\n\n            ; // 先頭文字が小さい\"っ\"の場合(上記の2連続同一キータイプにより\"っ\"の入力処理が完了した場合に、下記処理が開始するのを防ぐために条件分岐を設定)\n\n            if (charArrayInDisplayWordJap[0].textContent === \"っ\") {\n              // \"っ\"の単独入力を可能にする。\n              if (keyDownChar.key === \"l\" || keyDownChar.key === \"x\") {\n                keyTempForSmallTsuPreFirst = keyDownChar.key;\n\n                if (keyTempForSmallTsuPreWithNext !== \"l\" && keyTempForSmallTsuPreWithNext !== \"x\") {\n                  correctTyping();\n                }\n\n                ;\n              }\n\n              ;\n\n              if ((keyTempForSmallTsuPreFirst === \"l\" || keyTempForSmallTsuPreFirst === \"x\") && keyDownChar.key === \"t\") {\n                keyTempForSmallTsuPreSecond = keyDownChar.key;\n                correctTyping();\n              }\n\n              ;\n\n              if ((keyTempForSmallTsuPreFirst === \"l\" || keyTempForSmallTsuPreFirst === \"x\") && keyTempForSmallTsuPreSecond === \"t\" && keyDownChar.key === \"s\") {\n                keyTempForSmallTsuPreThird = keyDownChar.key;\n                correctTyping();\n              }\n\n              ;\n\n              if ((keyTempForSmallTsuPreFirst === \"l\" || keyTempForSmallTsuPreFirst === \"x\") && keyTempForSmallTsuPreSecond === \"t\" && keyDownChar.key === \"u\") {\n                keyTempForSmallTsuPreWithNext = \"\";\n                keyTempForSmallTsuPreFirst = \"\";\n                keyTempForSmallTsuPreSecond = \"\";\n                keyTempForSmallTsuPreThird = \"\";\n                charArrayInDisplayWordJap[0].className = \"add_red\";\n                charArrayInDisplayWordJap.shift();\n                shiftAlreadyStartedCountAll = 0;\n                correctTyping();\n              }\n\n              ;\n            }\n\n            ;\n          } else {\n            // \"a\"\"i\"\"e\"\"o\"\"n\"が入力された時点でNGとする。\n            typeMissAudio();\n          }\n\n          ; // 先頭文字が\"ん\"の場合、かつ次の文字あり、その文字が母音でない場合は \"n\"+\"n以外の子音\"でもOKとする。\n          // それ以外の場合は、マッピング表の通り\"nn\"\"xn\"でしか入力できない。\n        } else if (charArrayInDisplayWordJap[0].textContent === \"ん\") {\n          if (shiftAlreadyStartedCountAll === 0) {\n            if (keyDownChar.key === \"n\" || keyDownChar.key === \"x\") {\n              keyTempForNnPre = keyDownChar.key;\n              shiftAlreadyStartedCountAll = 1;\n              correctTyping();\n            } else {\n              typeMissAudio();\n            }\n\n            ;\n          } else {\n            if (keyTempForNnPre === \"n\") {\n              if (charArrayInDisplayWordJap[1] != null) {\n                if (charArrayInDisplayWordJap[1].textContent !== \"あ\" && charArrayInDisplayWordJap[1].textContent !== \"い\" && charArrayInDisplayWordJap[1].textContent !== \"う\" && charArrayInDisplayWordJap[1].textContent !== \"え\" && charArrayInDisplayWordJap[1].textContent !== \"お\") {\n                  if (keyDownChar.key !== \"a\" && keyDownChar.key !== \"i\" && keyDownChar.key !== \"u\" && keyDownChar.key !== \"e\" && keyDownChar.key !== \"o\" && keyDownChar.key !== \"y\") {\n                    keyTempForNnPre = \"\";\n                    charArrayInDisplayWordJap[0].className = \"add_red\";\n                    charArrayInDisplayWordJap.shift();\n                    shiftAlreadyStartedCountAll = 0;\n                    correctTyping();\n\n                    if (keyDownChar.key !== \"n\") {\n                      keyDownCharCountUp(keyDownChar);\n                    }\n\n                    ;\n                  } else {\n                    typeMissAudio();\n                  }\n\n                  ;\n                } else {\n                  if (keyDownChar.key !== \"a\" && keyDownChar.key !== \"i\" && keyDownChar.key !== \"u\" && keyDownChar.key !== \"e\" && keyDownChar.key !== \"o\" && keyDownChar.key !== \"y\") {\n                    keyTempForNnPre = \"\";\n                    charArrayInDisplayWordJap[0].className = \"add_red\";\n                    charArrayInDisplayWordJap.shift();\n                    shiftAlreadyStartedCountAll = 0;\n                    correctTyping();\n\n                    if (keyDownChar.key !== \"n\") {\n                      keyDownCharCountUp(keyDownChar);\n                    }\n\n                    ;\n                  } else {\n                    typeMissAudio();\n                  }\n\n                  ;\n                }\n\n                ;\n              } else {\n                if (keyDownChar.key === \"n\") {\n                  keyTempForNnPre = \"\";\n                  charArrayInDisplayWordJap[0].className = \"add_red\";\n                  charArrayInDisplayWordJap.shift();\n                  shiftAlreadyStartedCountAll = 0;\n                  correctTyping();\n                } else {\n                  typeMissAudio();\n                }\n\n                ;\n              }\n\n              ;\n            } else if (keyTempForNnPre === \"x\") {\n              if (keyDownChar.key === \"n\") {\n                keyTempForNnPre = \"\";\n                charArrayInDisplayWordJap[0].className = \"add_red\";\n                charArrayInDisplayWordJap.shift();\n                shiftAlreadyStartedCountAll = 0;\n                correctTyping();\n              } else {\n                typeMissAudio();\n              }\n\n              ;\n            }\n\n            ;\n          }\n\n          ; // \"っ\"\"ん\"以外の文字の場合\n        } else {\n          // 入力対象文字をアルファベットに分解する。\n          // 入力対象文字に対して、入力処理が開始していない場合\n          if (shiftAlreadyStartedCountAll === 0) {\n            // 2文字目が存在する場合(最後の文字でない場合)\n            if (charArrayInDisplayWordJap[1] != null) {\n              // 2文字を一緒に入力するパターンに対応する処理を定義する。\n              wordLetterWithSmallLetter = charArrayInDisplayWordJap[0].textContent + charArrayInDisplayWordJap[1].textContent; // 文字をローマ字に変換し、アルファベットごとに分ける。\n              // 2文字に対して、ローマ字変換パターン１をsplitする。\n\n              if (romaMappingTableFirst[wordLetterWithSmallLetter] != null) {\n                charArrayInDisplayWordAlphaFirst = romaMappingTableFirst[wordLetterWithSmallLetter].split(\"\").map(function (value) {\n                  var spanValue = document.createElement(\"span\");\n                  spanValue.textContent = value;\n                  return spanValue;\n                });\n              }\n\n              ; // 2文字に対してローマ字変換パターン２が存在する場合はsplitする。\n\n              if (romaMappingTableSecond[wordLetterWithSmallLetter] != null) {\n                charArrayInDisplayWordAlphaSecond = romaMappingTableSecond[wordLetterWithSmallLetter].split(\"\").map(function (value) {\n                  var spanValue = document.createElement(\"span\");\n                  spanValue.textContent = value;\n                  return spanValue;\n                });\n              }\n\n              ; // 2文字に対してローマ字変換パターン３が存在する場合はsplitする。\n\n              if (romaMappingTableThird[wordLetterWithSmallLetter] != null) {\n                charArrayInDisplayWordAlphaThird = romaMappingTableThird[wordLetterWithSmallLetter].split(\"\").map(function (value) {\n                  var spanValue = document.createElement(\"span\");\n                  spanValue.textContent = value;\n                  return spanValue;\n                });\n              }\n\n              ;\n            }\n\n            ; // 1文字のみを先に入力するパターンに対応する処理を定義する。\n\n            wordLetterSole = charArrayInDisplayWordJap[0].textContent; // 1文字目のみ対して、ローマ字変換パターン１をsplitする。\n            // 母音の場合はsplit不可のため処理を分ける。\n\n            if (wordLetterSole !== \"あ\" && wordLetterSole !== \"い\" && wordLetterSole !== \"う\" && wordLetterSole !== \"え\" && wordLetterSole !== \"お\") {\n              charArrayInDisplayWordAlphaSole = romaMappingTableFirst[wordLetterSole].split(\"\").map(function (value) {\n                var spanValue = document.createElement(\"span\");\n                spanValue.textContent = value;\n                return spanValue;\n              });\n            } else {\n              var spanValue = document.createElement(\"span\");\n              spanValue.textContent = romaMappingTableFirst[wordLetterSole];\n              charArrayInDisplayWordAlphaSole = [spanValue];\n            }\n\n            ; // 1文字目のみ対してローマ字変換パターン２が存在する場合はsplitする。\n\n            if (romaMappingTableSecond[wordLetterSole] != null) {\n              charArrayInDisplayWordAlphaSoleSecond = romaMappingTableSecond[wordLetterSole].split(\"\").map(function (value) {\n                var spanValue = document.createElement(\"span\");\n                spanValue.textContent = value;\n                return spanValue;\n              });\n            }\n\n            ; // 1文字目のみ対してローマ字変換パターン３が存在する場合はsplitする。\n\n            if (romaMappingTableThird[wordLetterSole] != null) {\n              charArrayInDisplayWordAlphaSoleThird = romaMappingTableThird[wordLetterSole].split(\"\").map(function (value) {\n                var spanValue = document.createElement(\"span\");\n                spanValue.textContent = value;\n                return spanValue;\n              });\n            }\n\n            ;\n          }\n\n          ; // 文字入力によるアルファベットに対する処理を開始する。\n          // 文字の入力開始前である場合\n\n          if (shiftAlreadyStartedCountAll === 0) {\n            // 2文字目が存在する場合(最後の文字でない場合)\n            if (charArrayInDisplayWordJap[1] != null) {\n              // 2文字に対してタイプキーがローマ字変換パターン１に該当する場合\n              if (romaMappingTableFirst[wordLetterWithSmallLetter] != null) {\n                if (keyDownChar.key === charArrayInDisplayWordAlphaFirst[0].textContent) {\n                  charArrayInDisplayWordAlphaFirst.shift();\n                  shiftAlreadyStartedCountAll = 1;\n                  shiftAlreadyStartedCountFirst = 1;\n\n                  if (charArrayInDisplayWordAlphaFirst.length === 0) {\n                    charArrayInDisplayWordJap[0].className = \"add_red\";\n                    charArrayInDisplayWordJap[1].className = \"add_red\";\n                    charArrayInDisplayWordJap.shift();\n                    charArrayInDisplayWordJap.shift();\n                    shiftAlreadyStartedCountAll = 0;\n                  }\n                }\n              }\n\n              ; // 2文字に対してタイプキーがローマ字変換パターン２に該当する場合\n\n              if (romaMappingTableSecond[wordLetterWithSmallLetter] != null) {\n                if (keyDownChar.key === charArrayInDisplayWordAlphaSecond[0].textContent) {\n                  charArrayInDisplayWordAlphaSecond.shift();\n                  shiftAlreadyStartedCountAll = 1;\n                  shiftAlreadyStartedCountSecond = 1;\n\n                  if (charArrayInDisplayWordAlphaSecond.length === 0) {\n                    charArrayInDisplayWordJap[0].className = \"add_red\";\n                    charArrayInDisplayWordJap[1].className = \"add_red\";\n                    charArrayInDisplayWordJap.shift();\n                    charArrayInDisplayWordJap.shift();\n                    shiftAlreadyStartedCountAll = 0;\n                  }\n                }\n              }\n\n              ; // 2文字に対してタイプキーがローマ字変換パターン３に該当する場合\n\n              if (romaMappingTableThird[wordLetterWithSmallLetter] != null) {\n                if (keyDownChar.key === charArrayInDisplayWordAlphaThird[0].textContent) {\n                  charArrayInDisplayWordAlphaThird.shift();\n                  shiftAlreadyStartedCountAll = 1;\n                  shiftAlreadyStartedCountThird = 1;\n\n                  if (charArrayInDisplayWordAlphaThird.length === 0) {\n                    charArrayInDisplayWordJap[0].className = \"add_red\";\n                    charArrayInDisplayWordJap[1].className = \"add_red\";\n                    charArrayInDisplayWordJap.shift();\n                    charArrayInDisplayWordJap.shift();\n                    shiftAlreadyStartedCountAll = 0;\n                  }\n                }\n              }\n            }\n\n            ; // 1文字目のみに対してタイプキーがローマ字変換パターン１に該当する場合\n\n            if (keyDownChar.key === charArrayInDisplayWordAlphaSole[0].textContent) {\n              charArrayInDisplayWordAlphaSole.shift();\n              shiftAlreadyStartedCountAll = 1;\n              shiftAlreadyStartedCountSoleFirst = 1;\n\n              if (charArrayInDisplayWordAlphaSole.length === 0) {\n                charArrayInDisplayWordJap[0].className = \"add_red\";\n                charArrayInDisplayWordJap.shift();\n                shiftAlreadyStartedCountAll = 0;\n              }\n            }\n\n            ; // 1文字目のみに対してタイプキーがローマ字変換パターン２に該当する場合\n\n            if (romaMappingTableSecond[wordLetterSole] != null) {\n              if (keyDownChar.key === charArrayInDisplayWordAlphaSoleSecond[0].textContent && charArrayInDisplayWordAlphaSole.length !== 0) {\n                charArrayInDisplayWordAlphaSoleSecond.shift();\n                shiftAlreadyStartedCountAll = 1;\n                shiftAlreadyStartedCountSoleSecond = 1;\n\n                if (charArrayInDisplayWordAlphaSoleSecond.length === 0) {\n                  charArrayInDisplayWordJap[0].className = \"add_red\";\n                  charArrayInDisplayWordJap.shift();\n                  shiftAlreadyStartedCountAll = 0;\n                }\n              }\n            }\n\n            ; // 1文字目のみに対してタイプキーがローマ字変換パターン３に該当する場合\n\n            if (romaMappingTableThird[wordLetterSole] != null) {\n              if (keyDownChar.key === charArrayInDisplayWordAlphaSoleThird[0].textContent && charArrayInDisplayWordAlphaSole.length !== 0 && charArrayInDisplayWordAlphaSoleSecond.length !== 0) {\n                charArrayInDisplayWordAlphaSoleThird.shift();\n                shiftAlreadyStartedCountAll = 1;\n                shiftAlreadyStartedCountSoleThird = 1;\n\n                if (charArrayInDisplayWordAlphaSoleThird.length === 0) {\n                  charArrayInDisplayWordJap[0].className = \"add_red\";\n                  charArrayInDisplayWordJap.shift();\n                  shiftAlreadyStartedCountAll = 0;\n                }\n              }\n            }\n\n            ; // タイプキーがローマ字変換パターン１〜３のいずれかに該当する場合\n\n            if (shiftAlreadyStartedCountFirst === 1 || shiftAlreadyStartedCountSecond === 1 || shiftAlreadyStartedCountThird === 1 || shiftAlreadyStartedCountSoleFirst === 1 || shiftAlreadyStartedCountSoleSecond === 1 || shiftAlreadyStartedCountSoleThird === 1) {\n              correctTyping();\n            } else {\n              typeMissAudio();\n            }\n\n            ; // 文字入力が完了している場合、カウントを0にする。\n\n            if (shiftAlreadyStartedCountAll === 0) {\n              shiftAlreadyStartedCountFirst = 0;\n              shiftAlreadyStartedCountSecond = 0;\n              shiftAlreadyStartedCountThird = 0;\n              shiftAlreadyStartedCountSoleFirst = 0;\n              shiftAlreadyStartedCountSoleSecond = 0;\n              shiftAlreadyStartedCountSoleThird = 0;\n            }\n\n            ; // すでに1つのアルファベットを入力済みの場合\n          } else if (shiftAlreadyStartedCountAll === 1) {\n            // 2文字目が存在する場合(最後の文字でない場合)\n            if (charArrayInDisplayWordJap[1] != null) {\n              // 2文字に対してタイプキーがローマ字変換パターン１に該当する場合\n              if (shiftAlreadyStartedCountFirst === 1) {\n                if (keyDownChar.key === charArrayInDisplayWordAlphaFirst[0].textContent) {\n                  charArrayInDisplayWordAlphaFirst.shift();\n                  shiftAlreadyStartedCountAll = 2;\n                  shiftAlreadyStartedCountFirst = 2;\n\n                  if (charArrayInDisplayWordAlphaFirst.length === 0) {\n                    charArrayInDisplayWordJap[0].className = \"add_red\";\n                    charArrayInDisplayWordJap[1].className = \"add_red\";\n                    charArrayInDisplayWordJap.shift();\n                    charArrayInDisplayWordJap.shift();\n                    shiftAlreadyStartedCountAll = 0;\n                  }\n                }\n              }\n\n              ; // 2文字に対してタイプキーがローマ字変換パターン２に該当する場合\n\n              if (romaMappingTableSecond[wordLetterWithSmallLetter] != null) {\n                if (shiftAlreadyStartedCountSecond === 1) {\n                  if (keyDownChar.key === charArrayInDisplayWordAlphaSecond[0].textContent) {\n                    charArrayInDisplayWordAlphaSecond.shift();\n                    shiftAlreadyStartedCountAll = 2;\n                    shiftAlreadyStartedCountSecond = 2;\n\n                    if (charArrayInDisplayWordAlphaSecond.length === 0) {\n                      charArrayInDisplayWordJap[0].className = \"add_red\";\n                      charArrayInDisplayWordJap[1].className = \"add_red\";\n                      charArrayInDisplayWordJap.shift();\n                      charArrayInDisplayWordJap.shift();\n                      shiftAlreadyStartedCountAll = 0;\n                    }\n                  }\n                }\n              }\n\n              ; // 2文字に対してタイプキーがローマ字変換パターン３に該当する場合\n\n              if (romaMappingTableThird[wordLetterWithSmallLetter] != null) {\n                if (shiftAlreadyStartedCountThird === 1) {\n                  if (keyDownChar.key === charArrayInDisplayWordAlphaThird[0].textContent) {\n                    charArrayInDisplayWordAlphaThird.shift();\n                    shiftAlreadyStartedCountAll = 2;\n                    shiftAlreadyStartedCountThird = 2;\n\n                    if (charArrayInDisplayWordAlphaThird.length === 0) {\n                      charArrayInDisplayWordJap[0].className = \"add_red\";\n                      charArrayInDisplayWordJap[1].className = \"add_red\";\n                      charArrayInDisplayWordJap.shift();\n                      charArrayInDisplayWordJap.shift();\n                      shiftAlreadyStartedCountAll = 0;\n                    }\n                  }\n                }\n              }\n            }\n\n            ; // 1文字目のみに対してタイプキーがローマ字変換パターン１に該当する場合\n\n            if (shiftAlreadyStartedCountSoleFirst === 1) {\n              if (keyDownChar.key === charArrayInDisplayWordAlphaSole[0].textContent) {\n                charArrayInDisplayWordAlphaSole.shift();\n                shiftAlreadyStartedCountAll = 2;\n                shiftAlreadyStartedCountSoleFirst = 2;\n\n                if (charArrayInDisplayWordAlphaSole.length === 0) {\n                  charArrayInDisplayWordJap[0].className = \"add_red\";\n                  charArrayInDisplayWordJap.shift();\n                  shiftAlreadyStartedCountAll = 0;\n                }\n              }\n            }\n\n            ; // 1文字目のみに対してタイプキーがローマ字変換パターン２に該当する場合\n\n            if (romaMappingTableSecond[wordLetterSole] != null) {\n              if (shiftAlreadyStartedCountSoleSecond === 1) {\n                if (keyDownChar.key === charArrayInDisplayWordAlphaSoleSecond[0].textContent) {\n                  charArrayInDisplayWordAlphaSoleSecond.shift();\n                  shiftAlreadyStartedCountAll = 2;\n                  shiftAlreadyStartedCountSoleSecond = 2;\n\n                  if (charArrayInDisplayWordAlphaSoleSecond.length === 0) {\n                    charArrayInDisplayWordJap[0].className = \"add_red\";\n                    charArrayInDisplayWordJap.shift();\n                    shiftAlreadyStartedCountAll = 0;\n                  }\n                }\n              }\n            }\n\n            ; // 1文字目のみに対してタイプキーがローマ字変換パターン３に該当する場合\n\n            if (romaMappingTableThird[wordLetterSole] != null) {\n              if (shiftAlreadyStartedCountSoleThird === 1) {\n                if (keyDownChar.key === charArrayInDisplayWordAlphaSoleThird[0].textContent) {\n                  charArrayInDisplayWordAlphaSoleThird.shift();\n                  shiftAlreadyStartedCountAll = 2;\n                  shiftAlreadyStartedCountSoleThird = 2;\n\n                  if (charArrayInDisplayWordAlphaSoleThird.length === 0) {\n                    charArrayInDisplayWordJap[0].className = \"add_red\";\n                    charArrayInDisplayWordJap.shift();\n                    shiftAlreadyStartedCountAll = 0;\n                  }\n                }\n              }\n            }\n\n            ; // タイプキーがローマ字変換パターン１〜３のいずれかに該当する場合\n\n            if (shiftAlreadyStartedCountFirst === 2 || shiftAlreadyStartedCountSecond === 2 || shiftAlreadyStartedCountThird === 2 || shiftAlreadyStartedCountSoleFirst === 2 || shiftAlreadyStartedCountSoleSecond === 2 || shiftAlreadyStartedCountSoleThird === 2) {\n              correctTyping();\n            } else {\n              typeMissAudio();\n            }\n\n            ; // 文字入力が完了している場合、カウントを0にする。\n\n            if (shiftAlreadyStartedCountAll === 0) {\n              shiftAlreadyStartedCountFirst = 0;\n              shiftAlreadyStartedCountSecond = 0;\n              shiftAlreadyStartedCountThird = 0;\n              shiftAlreadyStartedCountSoleFirst = 0;\n              shiftAlreadyStartedCountSoleSecond = 0;\n              shiftAlreadyStartedCountSoleThird = 0;\n            }\n\n            ; // すでに2つのアルファベットを入力済みの場合\n          } else if (shiftAlreadyStartedCountAll === 2) {\n            // 2文字目が存在する場合(最後の文字でない場合)\n            if (charArrayInDisplayWordJap[1] != null) {\n              // 2文字に対してタイプキーがローマ字変換パターン１に該当する場合\n              if (shiftAlreadyStartedCountFirst === 2) {\n                if (keyDownChar.key === charArrayInDisplayWordAlphaFirst[0].textContent) {\n                  charArrayInDisplayWordAlphaFirst.shift();\n                  shiftAlreadyStartedCountAll = 3;\n                  shiftAlreadyStartedCountFirst = 3;\n\n                  if (charArrayInDisplayWordAlphaFirst.length === 0) {\n                    charArrayInDisplayWordJap[0].className = \"add_red\";\n                    charArrayInDisplayWordJap[1].className = \"add_red\";\n                    charArrayInDisplayWordJap.shift();\n                    charArrayInDisplayWordJap.shift();\n                    shiftAlreadyStartedCountAll = 0;\n                  }\n                }\n              }\n\n              ; // 2文字に対してタイプキーがローマ字変換パターン２に該当する場合\n\n              if (romaMappingTableSecond[wordLetterWithSmallLetter] != null) {\n                if (shiftAlreadyStartedCountSecond === 2) {\n                  if (keyDownChar.key === charArrayInDisplayWordAlphaSecond[0].textContent) {\n                    charArrayInDisplayWordAlphaSecond.shift();\n                    shiftAlreadyStartedCountAll = 3;\n                    shiftAlreadyStartedCountSecond = 3;\n\n                    if (charArrayInDisplayWordAlphaSecond.length === 0) {\n                      charArrayInDisplayWordJap[0].className = \"add_red\";\n                      charArrayInDisplayWordJap[1].className = \"add_red\";\n                      charArrayInDisplayWordJap.shift();\n                      charArrayInDisplayWordJap.shift();\n                      shiftAlreadyStartedCountAll = 0;\n                    }\n                  }\n                }\n              }\n\n              ; // 2文字に対してタイプキーがローマ字変換パターン３に該当する場合\n\n              if (romaMappingTableThird[wordLetterWithSmallLetter] != null) {\n                if (shiftAlreadyStartedCountThird === 2) {\n                  if (keyDownChar.key === charArrayInDisplayWordAlphaThird[0].textContent) {\n                    charArrayInDisplayWordAlphaThird.shift();\n                    shiftAlreadyStartedCountAll = 3;\n                    shiftAlreadyStartedCountThird = 3;\n\n                    if (charArrayInDisplayWordAlphaThird.length === 0) {\n                      charArrayInDisplayWordJap[0].className = \"add_red\";\n                      charArrayInDisplayWordJap[1].className = \"add_red\";\n                      charArrayInDisplayWordJap.shift();\n                      charArrayInDisplayWordJap.shift();\n                      shiftAlreadyStartedCountAll = 0;\n                    }\n                  }\n                }\n              }\n            }\n\n            ; // 1文字目のみに対してタイプキーがローマ字変換パターン１に該当する場合\n\n            if (shiftAlreadyStartedCountSoleFirst === 2) {\n              if (keyDownChar.key === charArrayInDisplayWordAlphaSole[0].textContent) {\n                charArrayInDisplayWordAlphaSole.shift();\n                shiftAlreadyStartedCountAll = 3;\n                shiftAlreadyStartedCountSoleFirst = 3;\n\n                if (charArrayInDisplayWordAlphaSole.length === 0) {\n                  charArrayInDisplayWordJap[0].className = \"add_red\";\n                  charArrayInDisplayWordJap.shift();\n                  shiftAlreadyStartedCountAll = 0;\n                }\n              }\n            }\n\n            ; // 1文字目のみに対してタイプキーがローマ字変換パターン２に該当する場合\n\n            if (romaMappingTableSecond[wordLetterSole] != null) {\n              if (shiftAlreadyStartedCountSoleSecond === 2) {\n                if (keyDownChar.key === charArrayInDisplayWordAlphaSoleSecond[0].textContent) {\n                  charArrayInDisplayWordAlphaSoleSecond.shift();\n                  shiftAlreadyStartedCountAll = 3;\n                  shiftAlreadyStartedCountSoleSecond = 3;\n\n                  if (charArrayInDisplayWordAlphaSoleSecond.length === 0) {\n                    charArrayInDisplayWordJap[0].className = \"add_red\";\n                    charArrayInDisplayWordJap.shift();\n                    shiftAlreadyStartedCountAll = 0;\n                  }\n                }\n              }\n            }\n\n            ; // 1文字目のみに対してタイプキーがローマ字変換パターン３に該当する場合\n\n            if (romaMappingTableThird[wordLetterSole] != null) {\n              if (shiftAlreadyStartedCountSoleThird === 2) {\n                if (keyDownChar.key === charArrayInDisplayWordAlphaSoleThird[0].textContent) {\n                  charArrayInDisplayWordAlphaSoleThird.shift();\n                  shiftAlreadyStartedCountAll = 3;\n                  shiftAlreadyStartedCountSoleThird = 3;\n\n                  if (charArrayInDisplayWordAlphaSoleThird.length === 0) {\n                    charArrayInDisplayWordJap[0].className = \"add_red\";\n                    charArrayInDisplayWordJap.shift();\n                    shiftAlreadyStartedCountAll = 0;\n                  }\n                }\n              }\n            }\n\n            ; // タイプキーがローマ字変換パターン１〜３のいずれかに該当する場合\n\n            if (shiftAlreadyStartedCountFirst === 3 || shiftAlreadyStartedCountSecond === 3 || shiftAlreadyStartedCountThird === 3 || shiftAlreadyStartedCountSoleFirst === 3 || shiftAlreadyStartedCountSoleSecond === 3 || shiftAlreadyStartedCountSoleThird === 3) {\n              correctTyping();\n            } else {\n              typeMissAudio();\n            }\n\n            ; // 文字入力が完了している場合、カウントを0にする。\n\n            if (shiftAlreadyStartedCountAll === 0) {\n              shiftAlreadyStartedCountFirst = 0;\n              shiftAlreadyStartedCountSecond = 0;\n              shiftAlreadyStartedCountThird = 0;\n              shiftAlreadyStartedCountSoleFirst = 0;\n              shiftAlreadyStartedCountSoleSecond = 0;\n              shiftAlreadyStartedCountSoleThird = 0;\n            }\n\n            ;\n          }\n        }\n      }\n    }\n\n    ; // タイプした文字が解答文字と一致する場合の共通処理を定義する。\n\n    function correctTyping() {\n      // タイプ音を定義する。\n      // タイプ音ありの場合のみ\n      if (typeAudioMode == \"タイプ音あり\") {\n        var _typeAudioMode = new Audio('/assets/typeAudio.mp3'); // タイプ音を発生させる。\n\n\n        _typeAudioMode.volume = 0.3;\n\n        _typeAudioMode.play();\n      }\n\n      ; // メーターを更新する。\n\n      bonusCountMeter = bonusCountMeter + 1; // メーターがメーター最大値以上になった場合、メーターを初期化し、プレイ可能時間を延長する。\n\n      if (bonusCountMeter >= bonusCountMeterMax) {\n        bonusCountMeter = 0; // 初期プレイ時間を更新することで、残りプレイ可能時間を延長する。\n\n        initialPlayingTimeMSec = initialPlayingTimeMSec + bonusAddPlayTime; // 延長した残りプレイ時間を表示する。\n\n        displayBonusAddPlayTime.textContent = \"+ \" + Math.ceil(bonusAddPlayTime / 1000) + \"秒\"; // 延長した残りプレイ時間をフェードアウトする。\n\n        displayBonusAddPlayTime.classList.add('fadeout'); // fadeoutのclassを取り除くことで、2回目以降も延長した残りプレイ時間が表示されるようにする。\n\n        setTimeout(function () {\n          displayBonusAddPlayTime.textContent = \"\";\n          displayBonusAddPlayTime.classList.remove('fadeout');\n        }, 2000);\n      }\n\n      ; // 更新したメーターを表示する。\n\n      document.getElementById(\"meterImg\").src = imgArray[bonusCountMeter]; // 表示文字全てタイプした場合、スコアアップ処理を実施し、次の表示文字を作成する処理を実施する。\n\n      if (charArrayInDisplayWordJap.length === 0) {\n        // 正解音を定義する。\n        // 正解音ありの場合のみ\n        if (correctAudioMode == \"正解音あり\") {\n          var correctAudio = new Audio('/assets/correctAudio.mp3'); // 正解した場合、効果音を発生させる。\n\n          correctAudio.volume = 0.3;\n          correctAudio.play();\n        }\n\n        ; // 「答えを見る」を押していなければ、スコアと正解数をカウントアップする。\n\n        if (answerOpenFlag == \"0\") {\n          // プレイモード：練習・普通の場合のみ、スコアアップする。\n          if (playMode == \"練習\" || playMode == \"普通\") {\n            countUpScore();\n          }\n\n          ;\n          countUpCorrectNum();\n        } else {\n          // 「答えを見る」を押していれば、フラグを0に戻す。\n          answerOpenFlag = \"0\";\n        }\n\n        ;\n        circleImg.classList.add('circle');\n        circleImg.classList.remove('transparent');\n        displayWordKanji.classList.add('add_gray');\n        displayWordKanji.classList.add('displayWordKanji');\n        displayWordKanji.classList.remove('transparent');\n        setTimeout(createDisplayWord, 500);\n        setTimeout(function () {\n          circleImg.classList.add('transparent');\n          circleImg.classList.remove('circle');\n        }, 500);\n\n        if (playMode == \"タイムアタック\" && gameCompleteTimeAttackFlag == \"1\") {\n          gameClose();\n        }\n\n        ;\n      }\n\n      ;\n    }\n\n    ; // タイプした文字が表示文字と不一致の場合の処理を定義する。\n\n    function typeMissAudio() {\n      // ミス音を定義する。\n      // ミス音ありの場合のみ\n      if (incorrectAudioMode == \"ミス音あり\") {\n        var incorrectAudio = new Audio('/assets/incorrectAudio.mp3'); // 不正解の場合、効果音を発生させる。\n\n        incorrectAudio.volume = 0.3;\n        incorrectAudio.play();\n      }\n\n      ;\n    }\n\n    ; // 英単語を生成した際に、発音させる処理を定義する。\n\n    function pronounce(eng_word) {\n      // résuméの場合は音声ファイルの検索ができないため、ファイルを変更\n      if (eng_word == \"résumé\") {\n        eng_word = \"rezumei\";\n      }\n\n      ;\n      var pronunciation = new Audio('/assets/発音/' + eng_word + '.mp3');\n      pronunciation.play();\n    }\n\n    ;\n  }\n\n  ;\n}\n\n;","map":{"version":3,"sources":["/Users/mondenhiroki/projects/eigomonster/app/javascript/packs/typingplay_jap.js"],"names":["window","addEventListener","document","keyDownGameStart","gameStartEnterOnlyOnce","keyDownEnter","key","getElementById","className","gameStart","wordList","gon","wordListAll","playMode","pronounceMode","questionOrderMode","bgmMode","typeAudioMode","correctAudioMode","incorrectAudioMode","imgArray","romaMappingTableFirst","romaMappingTableSecond","romaMappingTableThird","wordLetterWithSmallLetter","wordLetterSole","charArrayInDisplayWordAlphaFirst","charArrayInDisplayWordAlphaSecond","charArrayInDisplayWordAlphaThird","charArrayInDisplayWordAlphaSole","charArrayInDisplayWordAlphaSoleSecond","charArrayInDisplayWordAlphaSoleThird","shiftAlreadyStartedCountAll","shiftAlreadyStartedCountFirst","shiftAlreadyStartedCountSecond","shiftAlreadyStartedCountThird","shiftAlreadyStartedCountSoleFirst","shiftAlreadyStartedCountSoleSecond","shiftAlreadyStartedCountSoleThird","keyTempForSmallTsuPreWithNext","keyTempForSmallTsuPreFirst","keyTempForSmallTsuPreSecond","keyTempForSmallTsuPreThird","keyTempForNnPre","sortById","bonusCountMeter","bonusCountMeterMax","displayBonusAddPlayTime","bonusAddPlayTime","src","countDownPopup","countDownPopupNumber","textContent","timerIdToStart","setInterval","countDownTimeToStart","clearInterval","typingPlayStart","displayWord","displayWordEnglish","displayWordKanji","charArrayInDisplayWordJap","playEndFlag","answerOpenFlag","gameCompleteTimeAttackFlag","createDisplayWord","startTime","Date","now","remainPlayingTime","initialPlayingTimeMSec","totalPlayingTimeMSec","setTimeout","countDownTime","timerId","circleImg","classList","add","pronounceAgainButton","innerHTML","onclick","pronounce","displayWordInList","eng_word","hintButton","remove","answerButton","i","length","totalConsecutiveNumCorrectNum","displayConsecutiveNumCorrectNum","restartButtonMidGame","courseSettingBackButtonMidGame","displayScoreEntire","displayScore","displayP","totalScore","refTextLengthForCountUpLevel1","addScoreLevel1","addScoreLevel2","NumCorrectMidGamePlay","displayNumCorrectWord","displayNumCorrectNum","totalNumCorrectNum","displayConsecutiveNumCorrectWord","displayMaxConsecutiveNumCorrectWord","displayMaxConsecutiveNumCorrectNum","totalMaxConsecutiveNumCorrectNum","keyDownCharCountUp","randomIntegerInTotalWordList","Math","floor","random","splice","jap_trans_1","jap_trans_1_yomi","split","map","value","spanValue","createElement","appendChild","currentTime","diffBetweenCurrentTimeAndStartTime","remainMSec","remainAllSec","ceil","remainMin","remainSec","remainSecLabel","slice","gameClose","closePopup","restartBtn","backBtn","toLocaleString","remainAllSecTimeAttack","remainMinTimeAttack","remainSecTimeAttack","countUpScore","addPoint","setAttribute","countElm","$","countSpeed","each","self","countMax","attr","thisCount","text","countTimer","countUpAnime","countNext","countUpCorrectNum","keyDownChar","correctTyping","shift","typeMissAudio","Audio","volume","play","correctAudio","incorrectAudio","pronunciation"],"mappings":"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","sourcesContent":["// ゲーム開始画面から遷移してきた際に処理を実施する。\nwindow.addEventListener('load', function(){\n\t// Enterを押下するとゲーム開始のカウントダウンがスタートする処理を呼び出す。\n\tdocument.addEventListener(`keydown`, keyDownGameStart);\n});\n\n// スペースかEnterキー押下によるゲームスタートを一回限りとするフラグを設定する。\nlet gameStartEnterOnlyOnce = \"0\";\n\n// Enterを押下するとゲーム開始のカウントダウンがスタートする。\nfunction keyDownGameStart(keyDownEnter){\n\tif ((keyDownEnter.key === 'Enter' || keyDownEnter.key === \" \") && gameStartEnterOnlyOnce == \"0\") {\n\t\t// 表示されている文字を非表示にする。\n\t\tdocument.getElementById(\"useKeyboardPopup\").className = \"transparent\";\n\t\tdocument.getElementById(\"pressEnterPopup\").className = \"transparent\";\n\t\tdocument.getElementById(\"annotationAudio\").className = \"transparent\";\n\t\tdocument.getElementById(\"backBtnTypingPlay\").className = \"transparent\";\n\t\tgameStartEnterOnlyOnce = \"1\";\n\t\tgameStart();\n\t};\n};\n\n\n\t// 選択した英単語難易度によって変わるwordListの定義\n\tconst wordList = gon.wordListAll;\n\n\t// 選択したプレイモードによって変わるplayModeの定義\n\tconst playMode = gon.playMode;\n\n\t// 英単語の発音有無の設定によって変わるpronounceModeの定義\n\tconst pronounceMode = gon.pronounceMode;\n\n\t// 出題順の設定によって変わるpronounceModeの定義\n\tconst questionOrderMode = gon.questionOrderMode;\n\n\t// BGMの設定によって変わるbgmModeの定義\n\tconst bgmMode = gon.bgmMode;\n\n\t// タイプ音の設定によって変わるtypeAudioModeの定義\n\tconst typeAudioMode = gon.typeAudioMode;\n\n\t// 正解音の設定によって変わるcorrectAudioModeの定義\n\tconst correctAudioMode = gon.correctAudioMode;\n\n\t// ミス音の設定によって変わるincorrectAudioModeの定義\n\tconst incorrectAudioMode = gon.incorrectAudioMode;\n\n\nfunction gameStart(){\n\n  // 表示する単語リストを定義する。\n  // chromeの場合\"ff\"が正常に動作しない。\n\n  // 表示するメーターリストを定義する。\n  const imgArray =[\n    '/assets/メーターPNG/メーター0.png',\n    '/assets/メーターPNG/メーター10_yellow.png',\n    '/assets/メーターPNG/メーター20_yellow.png',\n    '/assets/メーターPNG/メーター30_yellow.png',\n    '/assets/メーターPNG/メーター40_yellow.png',\n    '/assets/メーターPNG/メーター50_yellow.png',\n    '/assets/メーターPNG/メーター60_yellow.png',\n    '/assets/メーターPNG/メーター70_yellow.png',\n    '/assets/メーターPNG/メーター80_yellow.png',\n    '/assets/メーターPNG/メーター90_yellow.png',\n    '/assets/メーターPNG/メーター100_yellow.png',\n\t'/assets/メーターPNG/メーター10_green.png',\n    '/assets/メーターPNG/メーター20_green.png',\n    '/assets/メーターPNG/メーター30_green.png',\n    '/assets/メーターPNG/メーター40_green.png',\n    '/assets/メーターPNG/メーター50_green.png',\n    '/assets/メーターPNG/メーター60_green.png',\n    '/assets/メーターPNG/メーター70_green.png',\n    '/assets/メーターPNG/メーター80_green.png',\n    '/assets/メーターPNG/メーター90_green.png',\n    '/assets/メーターPNG/メーター100_green.png',\n\t'/assets/メーターPNG/メーター10_blue.png',\n    '/assets/メーターPNG/メーター20_blue.png',\n    '/assets/メーターPNG/メーター30_blue.png',\n    '/assets/メーターPNG/メーター40_blue.png',\n    '/assets/メーターPNG/メーター50_blue.png',\n    '/assets/メーターPNG/メーター60_blue.png',\n    '/assets/メーターPNG/メーター70_blue.png',\n    '/assets/メーターPNG/メーター80_blue.png',\n    '/assets/メーターPNG/メーター90_blue.png',\n    '/assets/メーターPNG/メーター100_blue.png',\n\t'/assets/メーターPNG/メーター10_pink.png',\n    '/assets/メーターPNG/メーター20_pink.png',\n    '/assets/メーターPNG/メーター30_pink.png',\n    '/assets/メーターPNG/メーター40_pink.png',\n    '/assets/メーターPNG/メーター50_pink.png',\n    '/assets/メーターPNG/メーター60_pink.png',\n    '/assets/メーターPNG/メーター70_pink.png',\n    '/assets/メーターPNG/メーター80_pink.png',\n    '/assets/メーターPNG/メーター90_pink.png',\n    '/assets/メーターPNG/メーター100_pink.png',\n\t'/assets/メーターPNG/メーター10_red.png',\n    '/assets/メーターPNG/メーター20_red.png',\n    '/assets/メーターPNG/メーター30_red.png',\n    '/assets/メーターPNG/メーター40_red.png',\n    '/assets/メーターPNG/メーター50_red.png',\n    '/assets/メーターPNG/メーター60_red.png',\n    '/assets/メーターPNG/メーター70_red.png',\n    '/assets/メーターPNG/メーター80_red.png',\n    '/assets/メーターPNG/メーター90_red.png',\n    '/assets/メーターPNG/メーター100_red.png'\n  ];\n\n  const romaMappingTableFirst = {\n    \"あ\":\"a\",\n    \"い\":\"i\",\n    \"う\":\"u\",\n    \"え\":\"e\",\n    \"お\":\"o\",\n    \"か\":\"ka\",\n    \"き\":\"ki\",\n    \"く\":\"ku\",\n    \"け\":\"ke\",\n    \"こ\":\"ko\",\n    \"さ\":\"sa\",\n    \"し\":\"si\",\n    \"す\":\"su\",\n    \"せ\":\"se\",\n    \"そ\":\"so\",\n    \"た\":\"ta\",\n    \"ち\":\"ti\",\n    \"つ\":\"tu\",\n    \"て\":\"te\",\n    \"と\":\"to\",\n    \"な\":\"na\",\n    \"に\":\"ni\",\n    \"ぬ\":\"nu\",\n    \"ね\":\"ne\",\n    \"の\":\"no\",\n    \"は\":\"ha\",\n    \"ひ\":\"hi\",\n    \"ふ\":\"hu\",\n    \"へ\":\"he\",\n    \"ほ\":\"ho\",\n    \"ま\":\"ma\",\n    \"み\":\"mi\",\n    \"む\":\"mu\",\n    \"め\":\"me\",\n    \"も\":\"mo\",\n    \"や\":\"ya\",\n    \"ゆ\":\"yu\",\n    \"よ\":\"yo\",\n    \"ら\":\"ra\",\n    \"り\":\"ri\",\n    \"る\":\"ru\",\n    \"れ\":\"re\",\n    \"ろ\":\"ro\",\n    \"わ\":\"wa\",\n    \"を\":\"wo\",\n    \"が\":\"ga\",\n    \"ぎ\":\"gi\",\n    \"ぐ\":\"gu\",\n    \"げ\":\"ge\",\n    \"ご\":\"go\",\n    \"ざ\":\"za\",\n    \"じ\":\"zi\",\n    \"ず\":\"zu\",\n    \"ぜ\":\"ze\",\n    \"ぞ\":\"zo\",\n    \"だ\":\"da\",\n    \"ぢ\":\"di\",\n    \"づ\":\"du\",\n    \"で\":\"de\",\n    \"ど\":\"do\",\n    \"ば\":\"ba\",\n    \"び\":\"bi\",\n    \"ぶ\":\"bu\",\n    \"べ\":\"be\",\n    \"ぼ\":\"bo\",\n    \"ぱ\":\"pa\",\n    \"ぴ\":\"pi\",\n    \"ぷ\":\"pu\",\n    \"ぺ\":\"pe\",\n    \"ぽ\":\"po\",\n    \"ぁ\":\"la\",\n    \"ぃ\":\"li\",\n    \"ぅ\":\"lu\",\n    \"ぇ\":\"le\",\n    \"ぉ\":\"lo\",\n    \"ゃ\":\"lya\",\n    \"ゅ\":\"lyu\",\n    \"ょ\":\"lyo\",\n    \"でゃ\":\"dha\",\n    \"でぃ\":\"dhi\",\n    \"でゅ\":\"dhu\",\n    \"でぇ\":\"dhe\",\n    \"でょ\":\"dho\",\n    \"つぁ\":\"tsa\",\n    \"つぃ\":\"tsi\",\n    \"つぇ\":\"tse\",\n    \"つぉ\":\"tso\",\n    \"てゃ\":\"tha\",\n    \"てぃ\":\"thi\",\n    \"てゅ\":\"thu\",\n    \"てぇ\":\"the\",\n    \"てょ\":\"tho\",\n    \"ふぁ\":\"fa\",\n    \"ふぃ\":\"fi\",\n    \"ふぇ\":\"fe\",\n    \"ふぉ\":\"fo\",\n    \"うぁ\":\"wha\",\n    \"うぃ\":\"wi\",\n    \"うぇ\":\"we\",\n    \"うぉ\":\"who\",\n    \"ゔぁ\":\"va\",\n    \"ゔぃ\":\"vi\",\n    \"ゔ\":\"vu\",\n    \"ゔぇ\":\"ve\",\n    \"ゔぉ\":\"vo\",\n    \"きゃ\":\"kya\",\n    \"きぃ\":\"kyi\",\n    \"きゅ\":\"kyu\",\n    \"きぇ\":\"kye\",\n    \"きょ\":\"kyo\",\n    \"ぎゃ\":\"gya\",\n    \"ぎぃ\":\"gyi\",\n    \"ぎゅ\":\"gyu\",\n    \"ぎぇ\":\"gye\",\n    \"ぎょ\":\"gyo\",\n    \"しゃ\":\"sya\",\n    \"しぃ\":\"syi\",\n    \"しゅ\":\"syu\",\n    \"しぇ\":\"sye\",\n    \"しょ\":\"syo\",\n    \"じゃ\":\"zya\",\n    \"じぃ\":\"zyi\",\n    \"じゅ\":\"zyu\",\n    \"じぇ\":\"zye\",\n    \"じょ\":\"zyo\",\n    \"ちゃ\":\"tya\",\n    \"ちぃ\":\"tyi\",\n    \"ちゅ\":\"tyu\",\n    \"ちぇ\":\"tye\",\n    \"ちょ\":\"tyo\",\n    \"ぢゃ\":\"dya\",\n    \"ぢぃ\":\"dyi\",\n    \"ぢゅ\":\"dyu\",\n    \"ぢぇ\":\"dye\",\n    \"ぢょ\":\"dyo\",\n    \"にゃ\":\"nya\",\n    \"にぃ\":\"nyi\",\n    \"にゅ\":\"nyu\",\n    \"にぇ\":\"nye\",\n    \"にょ\":\"nyo\",\n    \"ひゃ\":\"hya\",\n    \"ひぃ\":\"hyi\",\n    \"ひゅ\":\"hyu\",\n    \"ひぇ\":\"hye\",\n    \"ひょ\":\"hyo\",\n    \"びゃ\":\"bya\",\n    \"びぃ\":\"byi\",\n    \"びゅ\":\"byu\",\n    \"びぇ\":\"bye\",\n    \"びょ\":\"byo\",\n    \"ぴゃ\":\"pya\",\n    \"ぴぃ\":\"pyi\",\n    \"ぴゅ\":\"pyu\",\n    \"ぴぇ\":\"pye\",\n    \"ぴょ\":\"pyo\",\n    \"ふゃ\":\"fya\",\n    \"ふぃ\":\"fyi\",\n    \"ふゅ\":\"fyu\",\n    \"ふぇ\":\"fye\",\n    \"ふょ\":\"fyo\",\n    \"みゃ\":\"mya\",\n    \"みぃ\":\"myi\",\n    \"みゅ\":\"myu\",\n    \"みぇ\":\"mye\",\n    \"みょ\":\"myo\",\n    \"りゃ\":\"rya\",\n    \"りぃ\":\"ryi\",\n    \"りゅ\":\"ryu\",\n    \"りぇ\":\"rye\",\n    \"りょ\":\"ryo\",\n    \"くぁ\":\"kwa\",\n    \"ぐぁ\":\"gwa\",\n    \"とぅ\":\"twu\",\n    \"どぅ\":\"dwu\",\n    \"いぇ\":\"ye\",\n\t\"ー\":\"-\"\n  };\n\n  const romaMappingTableSecond = {\n    \"い\":\"yi\",\n    \"か\":\"ca\",\n    \"く\":\"cu\",\n    \"こ\":\"co\",\n    \"し\":\"shi\",\n    \"せ\":\"ce\",\n    \"ち\":\"chi\",\n    \"つ\":\"tsu\",\n    \"ふ\":\"fu\",\n    \"じ\":\"ji\",\n    \"ぁ\":\"xa\",\n    \"ぃ\":\"xi\",\n    \"ぅ\":\"xu\",\n    \"ぇ\":\"xe\",\n    \"ぉ\":\"xo\",\n    \"ゃ\":\"xya\",\n    \"ゅ\":\"xyu\",\n    \"ょ\":\"xyo\",\n    \"しゃ\":\"sha\",\n    \"しゅ\":\"shu\",\n    \"しぇ\":\"she\",\n    \"しょ\":\"sho\",\n    \"じゃ\":\"ja\",\n    \"じぃ\":\"jyi\",\n    \"じゅ\":\"ju\",\n    \"じぇ\":\"je\",\n    \"じょ\":\"jo\",\n    \"ちゃ\":\"cha\",\n    \"ちぃ\":\"cyi\",\n    \"ちゅ\":\"chu\",\n    \"ちぇ\":\"che\",\n    \"ちょ\":\"cho\",\n    \"うぃ\":\"whi\",\n    \"うぇ\":\"whe\"\n  };\n\n  const romaMappingTableThird = {\n    \"し\":\"ci\",\n    \"じゃ\":\"jya\",\n    \"じゅ\":\"jyu\",\n    \"じぇ\":\"jye\",\n    \"じょ\":\"jyo\",\n    \"ちゃ\":\"cya\",\n    \"ちゅ\":\"cyu\",\n    \"ちぇ\":\"cye\",\n    \"ちょ\":\"cyo\"\n  };\n\n// タイピングの正誤判定に使用する変数を定義する。\n\tlet wordLetterWithSmallLetter = \"\";\n\tlet wordLetterSole = \"\";\n\n\tlet charArrayInDisplayWordAlphaFirst = [];\n\tlet charArrayInDisplayWordAlphaSecond = [];\n\tlet charArrayInDisplayWordAlphaThird = [];\n\tlet charArrayInDisplayWordAlphaSole = [];\n\tlet charArrayInDisplayWordAlphaSoleSecond = [];\n\tlet charArrayInDisplayWordAlphaSoleThird = [];\n\n\tlet shiftAlreadyStartedCountAll = 0;\n\tlet shiftAlreadyStartedCountFirst = 0;\n\tlet shiftAlreadyStartedCountSecond = 0;\n\tlet shiftAlreadyStartedCountThird = 0;\n\tlet shiftAlreadyStartedCountSoleFirst = 0;\n\tlet shiftAlreadyStartedCountSoleSecond = 0;\n\tlet shiftAlreadyStartedCountSoleThird = 0;\n\n\tlet keyTempForSmallTsuPreWithNext = \"\";\n\tlet keyTempForSmallTsuPreFirst = \"\";\n\tlet keyTempForSmallTsuPreSecond = \"\";\n\tlet keyTempForSmallTsuPreThird = \"\";\n\tlet keyTempForNnPre = \"\";\n\n\n  // 英単語を順番に出題する場合の番号の初期値を定義する。\n  let sortById = 0;\n\n  // 表示するメーター初期値を定義する。\n  let bonusCountMeter = 0;\n  // 表示するメーター最大値を定義する。\n  const bonusCountMeterMax = 50;\n  // 表示するプレイ延長時間を定義する。\n  const displayBonusAddPlayTime = document.getElementById(\"displayBonusAddPlayTime\");\n  displayBonusAddPlayTime.className =  \"displayBonusAddPlayTime\";\n  // メーター最大値に達した際の延長するプレイ時間を定義する。\n  const bonusAddPlayTime = 3000;\n\n\n  // メーターの初期値を表示する。\n  document.getElementById(\"meterImg\").src=imgArray[bonusCountMeter];\n  // ゲーム開始までをカウントダウン変数を定義する。\n  let countDownPopup = document.getElementById(\"countDownPopup\");\n  // class属性を付与する。\n  countDownPopup.className = \"countDownPopup\";\n  // ゲーム開始までをカウントダウン変数の初期値を定義する。\n  let countDownPopupNumber = 3;\n  // ゲーム開始までをカウントダウン変数の初期値を表示する。\n  countDownPopup.textContent = countDownPopupNumber;\n\n  // ゲーム開始までをカウントダウンを1秒ごとに実施するように定義する。\n  const timerIdToStart = setInterval(countDownTimeToStart,1000);\n\n\n\n\n\n  // ゲーム開始までをカウントダウンを実施する処理を定義する。\n  function countDownTimeToStart(){\n\t  \t// カウントダウン文字を１ずつ減らす。\n\t\tcountDownPopupNumber = countDownPopupNumber - 1;\n\t\t//カウントダウンが0になれば、ゲームを開始する。\n\t\tif (countDownPopupNumber <= 0){\n\t\tclearInterval(timerIdToStart);\n\t\tcountDownPopup.className = \"countDownPopupAfterClose\";\n\t\ttypingPlayStart();\n\t\t} else {\n\t\tcountDownPopup.textContent = countDownPopupNumber;\n\t\t}\n  }\n\n  // ゲームを開始する処理を定義する。\n  function typingPlayStart(){\n\n    // 表示する単語を定義する。\n    const displayWord = document.getElementById(\"displayWord\");\n    displayWord.className =  \"displayWord\";\n    const displayWordEnglish = document.getElementById(\"displayWordEnglish\");\n    displayWordEnglish.className =  \"displayWordEnglish\";\n\tconst displayWordKanji = document.getElementById(\"displayWordKanji\");\n    displayWordKanji.className =  \"displayWordKanji\";\n    // 表示する単語を一文字ずつに分ける変数を定義する。\n    let charArrayInDisplayWordJap =[];\n\n\n\t// ゲーム終了を判定するフラグを定義する。\n    let playEndFlag = \"0\";\n\n\t// 「答えを見る」ボタン押下有無を判定するフラグを定義する。\n\tlet answerOpenFlag = \"0\";\n\n\t// プレイモード：タイムアタックですべての出題範囲に解答済み判定フラグを設定する。\n\tlet gameCompleteTimeAttackFlag = \"0\";\n\n    // 表示する単語を作成する。\n    createDisplayWord();\n\n    // プレイ開始時間を取得する。\n    const startTime = Date.now();\n    // 表示する残りのプレイ可能時間を定義する。\n    let remainPlayingTime = document.getElementById(\"remainPlayingTime\");\n    remainPlayingTime.className =  \"remainPlayingTime\";\n    // 表示するスタート時のプレイ可能時間を定義する。--------------------------------------------------------------\n    // プレイモード：タイムアタックの場合は5分とする。\n\tlet initialPlayingTimeMSec = 300000;\n\t// プレイモード：タイムアタックの場合は30分とする。\n\tif ( playMode == \"タイムアタック\") {\n\t\tinitialPlayingTimeMSec = 1800000;\n\t};\n\t// プレイモード：タイムアタックの場合、ゲームクリア後に合計プレイ時間表示する。\n\tlet totalPlayingTimeMSec = 0;\n\n    // スタート時に残りのプレイ可能時間の初期値を表示するためにcountDownTimeを実施する。\n    setTimeout(countDownTime,0);\n    // 1秒ごとにプレイ時間のcountDownTimeを実施するように定義する。\n    const timerId = setInterval(countDownTime,1000);\n\n    // 正解時に表示する丸を定義する。\n    document.getElementById(\"circleImg\").src= '/assets/正解○.png';\n    circleImg.classList.add('transparent');\n\n\n\t// \"発音を聞く\"ボタンを表示する。\n\tlet pronounceAgainButton = document.getElementById(\"pronounceAgainButton\");\n\tpronounceAgainButton.innerHTML = \"発音を聞く\";\n\tpronounceAgainButton.className = \"pronounceAgainButton\";\n\tpronounceAgainButton.onclick = function() {\n\t\tpronounce(displayWordInList.eng_word);\n\t};\n\t// \"ヒントを見る\"ボタンを表示する。(プレイモード普通、タイムアタックの時のみ機能)\n\t\tlet hintButton = document.getElementById(\"hintButton\");\n\t\thintButton.innerHTML = \"ヒントを見る\";\n\t\tif (playMode == \"普通\" || playMode == \"タイムアタック\" ) {\n\t\t\thintButton.className = \"hintButton\";\n\t\t\thintButton.onclick = function() {\n\t\t\t\tcharArrayInDisplayWordJap[0].classList.remove('transparent');\n\t\t\t};\n\t\t} else {\n\t\t\thintButton.className = \"hintButtonPractice\";\n\t\t};\n    // \"答えを見る\"ボタンを表示する。(プレイモード普通、タイムアタックの時のみ機能)\n\t\tlet answerButton = document.getElementById(\"answerButton\");\n\t\tanswerButton.innerHTML = \"答えを見る\";\n\t\tif (playMode == \"普通\" || playMode == \"タイムアタック\" ) {\n\t\t\tanswerButton.className = \"answerButton\";\n\t\t\tanswerButton.onclick = function() {\n\t\t\t\tfor (let i = 0; i < charArrayInDisplayWordJap.length; i++) {\n\t\t\t\t\tcharArrayInDisplayWordJap[i].classList.remove('transparent');\n\t\t\t\t}\n\t\t\t\tdisplayWordKanji.className =  \"displayWordKanji\";\n\n\t\t\t\t// 連続正解数を0に戻す。\n\t\t\t\ttotalConsecutiveNumCorrectNum = 0;\n\t\t\t\tdisplayConsecutiveNumCorrectNum.textContent = totalConsecutiveNumCorrectNum;\n\n\t\t\t\t// メーターを初期値に戻す。\n\t\t\t\tbonusCountMeter = 0;\n\t\t\t\tdocument.getElementById(\"meterImg\").src=imgArray[bonusCountMeter];\n\n\t\t\t\t// 「答えを見る」判定フラグを更新する。\n\t\t\t\tanswerOpenFlag = \"1\";\n\n\t\t\t};\n\t\t} else { // (プレイモード練習の時)\n\t\t\t\tanswerButton.className = \"answerButtonPractice\";\n\t\t\t};\n\t// \"最初からやり直す\"ボタンを表示する。\n\tconst restartButtonMidGame = document.getElementById(\"restartButtonMidGame\");\n\trestartButtonMidGame.classList.remove('transparent');\n\t// \"コース選択画面に戻る\"ボタンを表示する。\n\tconst courseSettingBackButtonMidGame = document.getElementById(\"courseSettingBackButtonMidGame\");\n\tcourseSettingBackButtonMidGame.classList.remove('transparent');\n\n\n\t// 以下、スコア定義---------------------------------------------------------------------------------------------------\n\t// -----------------------------------------------------------------------------------------------------------------\n\n\t// プレイモード：練習・普通の場合はスコアを表示させる。\n\t// プレイモード：タイムアタックはスコアを表示させない。\n\tif ( playMode == \"練習\" || playMode == \"普通\") {\n\t\t// 表示するスコアを定義する。\n\t\tlet displayScoreEntire = document.getElementById(\"displayScoreEntire\");\n\t\tdisplayScoreEntire.className =  \"displayScoreEntire\";\n\t\tlet displayScore = document.getElementById(\"displayScore\");\n\t\tdisplayScore.className =  \"displayScore\";\n\t\tlet displayP = document.getElementById(\"displayP\");\n\t\tdisplayP.className =  \"displayP\";\n\t};\n\n\t// プレモード：練習・普通の場合のみ使用する。----------------------------\n\t// ---------------------------------------------------------------\n    // 合計スコアの初期値を定義する。\n    let totalScore = 0;\n    // スコアアップする基準を定義する。\n    const refTextLengthForCountUpLevel1 = 4;\n    const addScoreLevel1 = 50;\n    const addScoreLevel2 = 50;\n\t// ---------------------------------------------------------------\n\t// ---------------------------------------------------------------\n\n\n\t// 表示する正解数全体のクラス\n\tlet NumCorrectMidGamePlay = document.getElementById(\"NumCorrectMidGamePlay\");\n\tNumCorrectMidGamePlay.className =  \"NumCorrectMidGamePlay\";\n\n\t// 表示する正解数を定義する。\n\tlet displayNumCorrectWord = document.getElementById(\"displayNumCorrectWord\");\n\tdisplayNumCorrectWord.className =  \"displayNumCorrectWord\";\n\tdisplayNumCorrectWord.textContent = \"合計正解数\";\n\tlet displayNumCorrectNum = document.getElementById(\"displayNumCorrectNum\");\n\tdisplayNumCorrectNum.className =  \"displayNumCorrectNum\";\n\tlet totalNumCorrectNum = 0;\n\tdisplayNumCorrectNum.textContent = totalNumCorrectNum;\n\n\t// 表示する連続正解数を定義する。\n\tlet displayConsecutiveNumCorrectWord = document.getElementById(\"displayConsecutiveNumCorrectWord\");\n\tdisplayConsecutiveNumCorrectWord.className =  \"displayConsecutiveNumCorrectWord\";\n\tdisplayConsecutiveNumCorrectWord.textContent = \"連続正解数\";\n\tlet displayConsecutiveNumCorrectNum = document.getElementById(\"displayConsecutiveNumCorrectNum\");\n\tdisplayConsecutiveNumCorrectNum.className =  \"displayConsecutiveNumCorrectNum\";\n\tlet totalConsecutiveNumCorrectNum = 0;\n\tdisplayConsecutiveNumCorrectNum.textContent = totalConsecutiveNumCorrectNum;\n\n\t// 表示する最高連続正解数を定義する。\n\tlet displayMaxConsecutiveNumCorrectWord = document.getElementById(\"displayMaxConsecutiveNumCorrectWord\");\n\tdisplayMaxConsecutiveNumCorrectWord.className =  \"displayMaxConsecutiveNumCorrectWord\";\n\tdisplayMaxConsecutiveNumCorrectWord.textContent = \"最高連続正解数\";\n\tlet displayMaxConsecutiveNumCorrectNum = document.getElementById(\"displayMaxConsecutiveNumCorrectNum\");\n\tdisplayMaxConsecutiveNumCorrectNum.className =  \"displayMaxConsecutiveNumCorrectNum\";\n\tlet totalMaxConsecutiveNumCorrectNum = 0;\n\tdisplayMaxConsecutiveNumCorrectNum.textContent = totalMaxConsecutiveNumCorrectNum;\n\n\t// 以上、スコア定義---------------------------------------------------------------------------------------------------\n\t// -----------------------------------------------------------------------------------------------------------------\n\n    // タイプされる度にkeyDownCharCountUpを実施するように定義する。\n    document.addEventListener(`keydown`, keyDownCharCountUp);\n\n\t\t// 表示する単語を作成する処理を定義する。\n\t\tfunction createDisplayWord(){\n\t\t\t// すでにゲームが終了している場合、新規ワードを生成しない。ゲーム中のみ生成する。\n\t\t\t// ギリギリで問題に正解した場合、○を表示した後、500m秒後にワードを生成する処理が走るため。\n\t\t\tif(playEndFlag === \"0\"){\n\n\t\t\t\t// 表示単語を初期化する。\n\t\t\t\tdisplayWord.textContent = \"\";\n\n\t\t\t\t// 出題順の設定により、displayWordInListを変更\n\t\t\t\tif (questionOrderMode == \"番号順\") {\n\t\t\t\t\t// 英単語を順番に出題する場合の番号の初期値を定義する。\n\t\t\t\t\tdisplayWordInList = wordList[sortById];\n\t\t\t\t\tsortById++;\n\t\t\t\t\t// sortByIdが出題英単語数を超えた場合、初期値に戻す。\n\t\t\t\t\tif (sortById >= wordList.length) {\n\t\t\t\t\t\tsortById = 0;\n\t\t\t\t\t\t// プレイモード：タイムアタックの場合、次の問題に正解した時点でゲーム終了とする。\n\t\t\t\t\t\tif ( playMode == \"タイムアタック\" ) {\n\t\t\t\t\t\t\t// フラグを1に更新する。\n\t\t\t\t\t\t\tgameCompleteTimeAttackFlag = \"1\";\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\n\t\t\t\t} else { // 出題順がランダムの場合\n\t\t\t\t\t// 0〜textListsの総数間で整数値をランダムで算出する。\n\t\t\t\t\tlet randomIntegerInTotalWordList = Math.floor(Math.random() * wordList.length);\n\n\t\t\t\t\t// 表示する単語をランダムで選定する。\n\t\t\t\t\tdisplayWordInList = wordList[randomIntegerInTotalWordList];\n\n\t\t\t\t\t// プレイモード：タイムアタックの場合は、wordListから表示単語を削除する。\n\t\t\t\t\tif ( playMode == \"タイムアタック\" ) {\n\t\t\t\t\t\t// 同じ問題を２度出題しないように、一度出題した問題はwordListから削除する。\n\t\t\t\t\t\twordList.splice( randomIntegerInTotalWordList, 1);\n\t\t\t\t\t\t// wordList.length == 0になった場合、次の問題に正解した時点でゲーム終了とする。\n\t\t\t\t\t\tif (wordList.length == 0){\n\t\t\t\t\t\t\t// フラグを1に更新する。\n\t\t\t\t\t\t\tgameCompleteTimeAttackFlag = \"1\";\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// 英単語を生成した際に、発音させる。（発音ありの場合のみ）\n\t\t\t\tif (pronounceMode == \"発音あり\") {\n\t\t\t\t\tpronounce(displayWordInList.eng_word);\n\t\t\t\t};\n\n\t\t\t\t// 英単語を表示させる。\n\t\t\t\tdisplayWordEnglish.textContent = displayWordInList.eng_word;\n\t\t\t\t// 日本語訳(漢字)を表示させる。\n\t\t\t\tdisplayWordKanji.textContent = displayWordInList.jap_trans_1;\n\t\t\t\t// プレイモード練習の時は、答えとして漢字を表示させ、普通、タイムアタックでは非表示にする。\n\t\t\t\tif ( playMode == \"練習\" ) {\n\t\t\t\t\tdisplayWordKanji.className =  \"displayWordKanji\";\n\t\t\t\t} else if ( playMode == \"普通\" || playMode == \"タイムアタック\") {\n\t\t\t\t\tdisplayWordKanji.className =  \"transparent\";\n\t\t\t\t} else {\n\t\t\t\t\tdisplayWordKanji.className =  \"transparent\";\n\t\t\t\t}\n\t\t\t\t// 表示する単語を一文字ごとに区切り、spanタグで閉じる。\n\t\t\t\t// spanタグで閉じた単語を表示する。\n\t\t\t\tcharArrayInDisplayWordJap = displayWordInList.jap_trans_1_yomi.split(\"\").map(function(value){\n\t\t\t\t\t// spanタグを作成する。\n\t\t\t\t\tlet spanValue = document.createElement(\"span\");\n\t\t\t\t\t// spanタグに一文字を挿入する。\n\t\t\t\t\tspanValue.textContent = value;\n\t\t\t\t\t// 各文字（ひらがな）に対して、transparentクラスを付与する。（プレイモード普通、タイムアタックのときのみ）\n\t\t\t\t\tif ( playMode == \"普通\" || playMode == \"タイムアタック\") {\n\t\t\t\t\t\tspanValue.className = \"transparent\";\n\t\t\t\t\t};\n\t\t\t\t\t// 表示する単語にspanタグで閉じた一文字を追加する。\n\t\t\t\t\tdisplayWord.appendChild(spanValue);\n\t\t\t\t\treturn spanValue;\n\t\t\t\t});\n\t\t\t};\n\t\t};\n\n\n\t\t// プレイ時間をカウントダウンする処理を定義する。\n\t\tfunction countDownTime(){\n\t\t\tconst currentTime = Date.now();\n\t\t\tconst diffBetweenCurrentTimeAndStartTime = currentTime - startTime;\n\t\t\tconst remainMSec = initialPlayingTimeMSec - diffBetweenCurrentTimeAndStartTime;\n\t\t\tconst remainAllSec = Math.ceil(remainMSec/1000);\n\t\t\tconst remainMin = Math.floor(remainAllSec / 60);\n\t\t\tconst remainSec = Math.ceil(remainAllSec % 60);\n\t\t\tlet  remainSecLabel = `残り${(`0${remainMin}` ).slice( -2 )}分${(`0${remainSec}` ).slice( -2 )}秒`;\n\n\t\t\t// 残り時間が0になった場合の処理を定義する。\n\t\t\tif (remainMSec <= 0){\n\t\t\t\tgameClose();\n\t\t\t}\n\t\t\t// 残りプレイ可能時間を更新する。\n\t\t\tremainPlayingTime.textContent = remainSecLabel;\n\n\t\t\t// プレイモード：タイムアタックの場合は、使用時間を最後に表示する。\n\t\t\tif (playMode == \"タイムアタック\"){\n\t\t\t\ttotalPlayingTimeMSec = diffBetweenCurrentTimeAndStartTime;\n\t\t\t};\n\t\t};\n\n\t// 以下、ゲーム終了時の処理を定義する。------------------------------------------------------\n\t// ------------------------------------------------------------------------------------\n\t\tfunction gameClose(){\n\t\t\t// ゲーム終了後にplayEndFlagを1に更新する。\n\t\t\tplayEndFlag = \"1\";\n\t\t\t// プレイ時間のカウントダウンを止める。\n\t\t\tclearInterval(timerId);\n\t\t\t// 残り時間の表示を消す。\n\t\t\tremainPlayingTime.className = \"transparent\";\n\t\t\t// 現在のスコア（左上）の表示を消す。\n\t\t\t// プレイモード：練習・普通の場合のみ\n\t\t\tif ( playMode == \"練習\" || playMode == \"普通\") {\n\t\t\t\tdisplayScoreEntire.className = \"transparent\";\n\t\t\t\tdisplayScore.className = \"transparent\";\n\t\t\t\tdisplayP.className = \"transparent\";\n\t\t\t};\n\n\t\t\t//正解数全体のクラスを非表示にする。\n\t\t\tNumCorrectMidGamePlay.className = \"transparent\";\n\t\t\t// 正解数の表示を消す。\n\t\t\tdisplayNumCorrectWord.className = \"transparent\";\n\t\t\tdisplayNumCorrectNum.className = \"transparent\";\n\t\t\t// 連続正解数の表示を消す。\n\t\t\tdisplayConsecutiveNumCorrectWord.className = \"transparent\";\n\t\t\tdisplayConsecutiveNumCorrectNum.className = \"transparent\";\n\t\t\t// 最高連続正解数の表示を消す。\n\t\t\tdisplayMaxConsecutiveNumCorrectWord.className = \"transparent\";\n\t\t\tdisplayMaxConsecutiveNumCorrectNum.className = \"transparent\";\n\t\t\t// 問題の英単語の表示を消す。\n\t\t\tdisplayWordEnglish.textContent =\"\";\n\t\t\t// 解答の日本語の表示を消す。\n\t\t\tdisplayWord.textContent =\"\";\n\t\t\t// 解答の日本語訳の漢字の表示を消す。\n\t\t\tdisplayWordKanji.textContent =\"\";\n\t\t\t// 発音を聞くボタンを消す。\n\t\t\tpronounceAgainButton.className = \"transparent\";\n\t\t\t// ヒントを見るボタンを消す。\n\t\t\thintButton.className = \"transparent\";\n\t\t\t// 答えを見るボタンを消す。\n\t\t\tanswerButton.className = \"transparent\";\n\t\t\t// \"最初からやり直す\"ボタンを消す。\n\t\t\trestartButtonMidGame.className = \"transparent\";\n\t\t\t// \"コース選択画面に戻る\"ボタンを消す。\n\t\t\tcourseSettingBackButtonMidGame.className = \"transparent\";\n\n\t\t\t// 正解時に表示される○の画像を消す。\n\t\t\tcircleImg.className = \"transparent\";\n\n\t\t\t// ゲーム終了後に終了を知らせるポップアップを作成する。\n\t\t\t// ゲーム終了を知らせるポップアップを定義する。\n\t\t\tconst closePopup = document.getElementById(\"closePopup\");\n\t\t\tclosePopup.textContent =\"終了\";\n\t\t\tclosePopup.className = \"closePopup\";\n\t\t\t// もう一度ボタンを定義する。\n\t\t\tconst restartBtn = document.getElementById(\"restartBtn\");\n\t\t\t// 戻るボタンを定義する。\n\t\t\tconst backBtn = document.getElementById(\"backBtn\");\n\t\t\t// 2秒後に得点を表示させる。また、もう一度ボタンと戻るボタンを表示させる。\n\t\t\tsetTimeout(function(){\n\t\t\t// 得点の表示\n\t\t\t// プレイモード：練習・普通の場合は、スコアを表示する。\n\t\t\tif ( playMode == \"練習\" || playMode == \"普通\") {\n\t\t\t\tclosePopup.textContent = `あなたの得点は${totalScore.toLocaleString()}点です!`;\n\t\t\t\tclosePopup.className = \"endResultPopup\";\n\t\t\t} else { // プレイモード：タイムアタックの場合は、かかった時間を表示する。\n\t\t\t\t\t// ただし、すべての出題範囲に解答できた場合のみ。\n\t\t\t\tif ( gameCompleteTimeAttackFlag == \"1\") {\n\t\t\t\t\tconst remainAllSecTimeAttack = Math.ceil(totalPlayingTimeMSec/1000);\n\t\t\t\t\tconst remainMinTimeAttack = Math.floor(remainAllSecTimeAttack / 60);\n\t\t\t\t\tconst remainSecTimeAttack = Math.ceil(remainAllSecTimeAttack % 60);\n\t\t\t\t\tclosePopup.textContent = `あなたがかかった時間は${(`0${remainMinTimeAttack}` ).slice( -2 )}分${(`0${remainSecTimeAttack}` ).slice( -2 )}秒です!`;\n\t\t\t\t\tclosePopup.className = \"endResultPopup\";\n\t\t\t\t} else { // 時間切れの場合は、クリアできなかったと表示する。\n\t\t\t\t\tclosePopup.textContent = `残念ながらクリアできませんでした。`;\n\t\t\t\t\tclosePopup.className = \"endResultPopup\";\n\t\t\t\t}\n\t\t\t};\n\t\t\t// もう一度ボタンの表示（transparentを消して表示させる）\n\t\t\trestartBtn.classList.remove('transparent');\n\t\t\t// 戻るボタンの表示（transparentを消して表示させる）\n\t\t\tbackBtn.classList.remove('transparent');\n\t\t\t},2000);\n\t\t}\n\t// 以上、ゲーム終了時の処理を定義する。------------------------------------------------------\n\t// ------------------------------------------------------------------------------------\n\n\t\t// スコアをアップし、現在のtotalScoreを表示する処理を定義する。\n\t\tfunction countUpScore(){\n\t\t\tif (displayWord.textContent.length < refTextLengthForCountUpLevel1){\n\t\t\t\taddPoint = addScoreLevel1;\n\t\t\t} else {\n\t\t\t\taddPoint = addScoreLevel2;\n\t\t\t};\n\t\t\t// 合計得点を定義する。\n\t\t\ttotalScore = totalScore + addPoint;\n\t\t\tdisplayScore.setAttribute('data-num', totalScore);\n\n\t\t\tvar countElm = $('.displayScore'),\n\t\t\tcountSpeed = 10;\n\n\t\t\tcountElm.each(function(){\n\t\t\t\tvar self = $(this),\n\t\t\t\t// 合計得点を定義する。\n\t\t\t\tcountMax = self.attr('data-num'),\n\t\t\t\tthisCount = self.text(),\n\t\t\t\tcountTimer;\n\t\t\t\tcountUpAnime();\n\n\t\t\t\t// 数値をカウントアップするアニメーションを定義する。\n\t\t\t\tfunction countUpAnime(){\n\t\t\t\t\tcountTimer = setInterval(function(){\n\t\t\t\t\t\tvar countNext = thisCount++;\n\t\t\t\t\t\tself.text(countNext);\n\t\t\t\t\t\t//\n\t\t\t\t\t\tif(countNext == countMax){\n\t\t\t\t\t\t\tclearInterval(countTimer);\n\t\t\t\t\t\t}\n\t\t\t\t\t},countSpeed);\n\t\t\t\t};\n\t\t\t});\n\t\t};\n\n\t\t// 正解数をカウントアップする処理を定義する。\n\t\tfunction countUpCorrectNum(){\n\t\t\t// 合計正解数のカウントアップ\n\t\t\ttotalNumCorrectNum = totalNumCorrectNum + 1;\n\t\t\tdisplayNumCorrectNum.textContent = totalNumCorrectNum;\n\n\t\t\t// 連続正解数のカウントアップ\n\t\t\ttotalConsecutiveNumCorrectNum = totalConsecutiveNumCorrectNum + 1;\n\t\t\tdisplayConsecutiveNumCorrectNum.textContent = totalConsecutiveNumCorrectNum;\n\n\t\t\t// 最高連続正解数のカウントアップ\n\t\t\tif (totalMaxConsecutiveNumCorrectNum < totalConsecutiveNumCorrectNum) {\n\t\t\t\ttotalMaxConsecutiveNumCorrectNum = totalMaxConsecutiveNumCorrectNum + 1;\n\t\t\t\tdisplayMaxConsecutiveNumCorrectNum.textContent = totalMaxConsecutiveNumCorrectNum;\n\t\t\t};\n\t\t};\n\n\n\t\t// タイプした文字が表示文字と一致する場合の処理を定義する。\n\t\tfunction keyDownCharCountUp(keyDownChar){\n\t\tif(playEndFlag === \"0\"){\n\t\t// 文字によって、文字列の最後にあるかどうかで入力形式が変わるため、\"っ\"\"ん\"は個別に処理を定義する。\n\t\t// 先頭文字が小さい\"っ\"の場合\n\t\t// uはxtsuなどで\"っ\"を打ち込めるため、条件分岐要。\n\t\tif (charArrayInDisplayWordJap[0].textContent === \"っ\") {\n\t\t\tif (keyDownChar.key !== \"a\"\n\t\t\t&& keyDownChar.key !== \"i\"\n\t\t\t&& keyDownChar.key !== \"e\"\n\t\t\t&& keyDownChar.key !== \"o\"\n\t\t\t&& keyDownChar.key !== \"n\") {\n\t\t\t\t// \"っ\"が最後の文字ではない場合、同じキーを２回連続でタイプしてOKとする。\n\t\t\t\tif (charArrayInDisplayWordJap[1] != null){\n\t\t\t\t\t// 入力対象文字に対して、入力処理が開始していない場合\n\t\t\t\t\tif (shiftAlreadyStartedCountAll === 0 && keyDownChar.key !== \"u\") {\n\t\t\t\t\t\tkeyTempForSmallTsuPreWithNext = keyDownChar.key;\n\t\t\t\t\t\tshiftAlreadyStartedCountAll = 1;\n\t\t\t\t\t\tcorrectTyping();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// 同じアルファベットを入力した場合、\"っ\"を入力完了にし、再度keyDownCharCountUpを実施する。\n\t\t\t\t\t\tif(keyDownChar.key === keyTempForSmallTsuPreWithNext && keyDownChar.key !== \"u\"){\n\t\t\t\t\t\t\tkeyTempForSmallTsuPreWithNext = \"\";\n\t\t\t\t\t\t\tkeyTempForSmallTsuPreFirst = \"\";\n\t\t\t\t\t\t\tkeyTempForSmallTsuPreSecond = \"\";\n\t\t\t\t\t\t\tkeyTempForSmallTsuPreThird = \"\";\n\t\t\t\t\t\t\tcharArrayInDisplayWordJap[0].className = \"add_red\";\n\t\t\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\t\t\tshiftAlreadyStartedCountAll = 0;\n\t\t\t\t\t\t\tcorrectTyping();\n\t\t\t\t\t\t\tkeyDownCharCountUp(keyDownChar);\n\t\t\t\t\t\t// 異なる場合は前回入力アルファベットに入力したアルファベットを上書き\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (keyDownChar.key === \"t\" && (keyTempForSmallTsuPreFirst === \"l\" || keyTempForSmallTsuPreFirst === \"x\")){\n\t\t\t\t\t\t\t} else if ((keyDownChar.key === \"u\" || keyDownChar.key === \"s\") && keyTempForSmallTsuPreSecond === \"t\"\n\t\t\t\t\t\t\t\t\t&& (keyTempForSmallTsuPreFirst === \"l\" || keyTempForSmallTsuPreFirst === \"x\")){\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttypeMissAudio();\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tif (keyDownChar.key !== \"u\"){\n\t\t\t\t\t\t\tkeyTempForSmallTsuPreWithNext = keyDownChar.key;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// 先頭文字が小さい\"っ\"の場合(上記の2連続同一キータイプにより\"っ\"の入力処理が完了した場合に、下記処理が開始するのを防ぐために条件分岐を設定)\n\t\t\t\tif (charArrayInDisplayWordJap[0].textContent === \"っ\") {\n\t\t\t\t// \"っ\"の単独入力を可能にする。\n\t\t\t\t\tif(keyDownChar.key === \"l\" || keyDownChar.key === \"x\"){\n\t\t\t\t\t\tkeyTempForSmallTsuPreFirst = keyDownChar.key;\n\t\t\t\t\t\tif (keyTempForSmallTsuPreWithNext !== \"l\"\n\t\t\t\t\t\t&& keyTempForSmallTsuPreWithNext !== \"x\"){\n\t\t\t\t\t\tcorrectTyping();\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t\tif ((keyTempForSmallTsuPreFirst === \"l\" || keyTempForSmallTsuPreFirst === \"x\")\n\t\t\t\t\t\t&& keyDownChar.key === \"t\") {\n\t\t\t\t\t\tkeyTempForSmallTsuPreSecond = keyDownChar.key;\n\t\t\t\t\t\tcorrectTyping();\n\t\t\t\t\t};\n\t\t\t\t\tif ((keyTempForSmallTsuPreFirst === \"l\" || keyTempForSmallTsuPreFirst === \"x\")\n\t\t\t\t\t&& keyTempForSmallTsuPreSecond === \"t\" && keyDownChar.key === \"s\") {\n\t\t\t\t\t\tkeyTempForSmallTsuPreThird = keyDownChar.key;\n\t\t\t\t\t\tcorrectTyping();\n\t\t\t\t\t};\n\t\t\t\t\tif ((keyTempForSmallTsuPreFirst === \"l\" || keyTempForSmallTsuPreFirst === \"x\")\n\t\t\t\t\t&& keyTempForSmallTsuPreSecond === \"t\" && keyDownChar.key === \"u\") {\n\t\t\t\t\t\tkeyTempForSmallTsuPreWithNext = \"\";\n\t\t\t\t\t\tkeyTempForSmallTsuPreFirst = \"\";\n\t\t\t\t\t\tkeyTempForSmallTsuPreSecond = \"\";\n\t\t\t\t\t\tkeyTempForSmallTsuPreThird = \"\";\n\t\t\t\t\t\tcharArrayInDisplayWordJap[0].className = \"add_red\";\n\t\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\t\tshiftAlreadyStartedCountAll = 0;\n\t\t\t\t\t\tcorrectTyping();\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t// \"a\"\"i\"\"e\"\"o\"\"n\"が入力された時点でNGとする。\n\t\t\t\ttypeMissAudio();\n\t\t\t};\n\n\t\t// 先頭文字が\"ん\"の場合、かつ次の文字あり、その文字が母音でない場合は \"n\"+\"n以外の子音\"でもOKとする。\n\t\t// それ以外の場合は、マッピング表の通り\"nn\"\"xn\"でしか入力できない。\n\t\t} else if (charArrayInDisplayWordJap[0].textContent === \"ん\"){\n\t\t\t\t\tif (shiftAlreadyStartedCountAll === 0){\n\t\t\t\t\t\tif (keyDownChar.key === \"n\" || keyDownChar.key === \"x\"){\n\t\t\t\t\t\t\tkeyTempForNnPre = keyDownChar.key;\n\t\t\t\t\t\t\tshiftAlreadyStartedCountAll = 1;\n\t\t\t\t\t\t\tcorrectTyping();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\ttypeMissAudio();\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (keyTempForNnPre === \"n\"){\n\t\t\t\t\t\t\tif(charArrayInDisplayWordJap[1] != null){\n\t\t\t\t\t\t\t\tif (charArrayInDisplayWordJap[1].textContent !== \"あ\"\n\t\t\t\t\t\t\t\t&& charArrayInDisplayWordJap[1].textContent !== \"い\"\n\t\t\t\t\t\t\t\t&& charArrayInDisplayWordJap[1].textContent !== \"う\"\n\t\t\t\t\t\t\t\t&& charArrayInDisplayWordJap[1].textContent !== \"え\"\n\t\t\t\t\t\t\t\t&& charArrayInDisplayWordJap[1].textContent !== \"お\"){\n\t\t\t\t\t\t\t\t\tif(keyDownChar.key !== \"a\"\n\t\t\t\t\t\t\t\t\t&& keyDownChar.key !== \"i\"\n\t\t\t\t\t\t\t\t\t&& keyDownChar.key !== \"u\"\n\t\t\t\t\t\t\t\t\t&& keyDownChar.key !== \"e\"\n\t\t\t\t\t\t\t\t\t&& keyDownChar.key !== \"o\"\n\t\t\t\t\t\t\t\t\t&& keyDownChar.key !== \"y\"){\n\t\t\t\t\t\t\t\t\t\tkeyTempForNnPre = \"\";\n\t\t\t\t\t\t\t\t\t\tcharArrayInDisplayWordJap[0].className = \"add_red\";\n\t\t\t\t\t\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\t\t\t\t\t\tshiftAlreadyStartedCountAll = 0;\n\t\t\t\t\t\t\t\t\t\tcorrectTyping();\n\t\t\t\t\t\t\t\t\t\tif(keyDownChar.key !== \"n\"){\n\t\t\t\t\t\t\t\t\t\t\tkeyDownCharCountUp(keyDownChar);\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\ttypeMissAudio();\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif(keyDownChar.key !== \"a\"\n\t\t\t\t\t\t\t\t\t&& keyDownChar.key !== \"i\"\n\t\t\t\t\t\t\t\t\t&& keyDownChar.key !== \"u\"\n\t\t\t\t\t\t\t\t\t&& keyDownChar.key !== \"e\"\n\t\t\t\t\t\t\t\t\t&& keyDownChar.key !== \"o\"\n\t\t\t\t\t\t\t\t\t&& keyDownChar.key !== \"y\"){\n\t\t\t\t\t\t\t\t\t\tkeyTempForNnPre = \"\";\n\t\t\t\t\t\t\t\t\t\tcharArrayInDisplayWordJap[0].className = \"add_red\";\n\t\t\t\t\t\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\t\t\t\t\t\tshiftAlreadyStartedCountAll = 0;\n\t\t\t\t\t\t\t\t\t\tcorrectTyping();\n\t\t\t\t\t\t\t\t\t\tif(keyDownChar.key !== \"n\"){\n\t\t\t\t\t\t\t\t\t\t\tkeyDownCharCountUp(keyDownChar);\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\ttypeMissAudio();\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (keyDownChar.key === \"n\"){\n\t\t\t\t\t\t\t\t\tkeyTempForNnPre = \"\";\n\t\t\t\t\t\t\t\t\tcharArrayInDisplayWordJap[0].className = \"add_red\";\n\t\t\t\t\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\t\t\t\t\tshiftAlreadyStartedCountAll = 0;\n\t\t\t\t\t\t\t\t\tcorrectTyping();\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ttypeMissAudio();\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else if (keyTempForNnPre === \"x\"){\n\t\t\t\t\t\t\tif(keyDownChar.key === \"n\"){\n\t\t\t\t\t\t\t\tkeyTempForNnPre = \"\";\n\t\t\t\t\t\t\t\tcharArrayInDisplayWordJap[0].className = \"add_red\";\n\t\t\t\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\t\t\t\tshiftAlreadyStartedCountAll = 0;\n\t\t\t\t\t\t\t\tcorrectTyping();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttypeMissAudio();\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t// \"っ\"\"ん\"以外の文字の場合\n\t\t\t} else {\n\t\t\t\t// 入力対象文字をアルファベットに分解する。\n\t\t\t\t\t// 入力対象文字に対して、入力処理が開始していない場合\n\t\t\t\t\tif (shiftAlreadyStartedCountAll === 0 ){\n\t\t\t\t\t// 2文字目が存在する場合(最後の文字でない場合)\n\t\t\t\t\tif(charArrayInDisplayWordJap[1] != null){\n\t\t\t\t\t\t// 2文字を一緒に入力するパターンに対応する処理を定義する。\n\t\t\t\t\t\twordLetterWithSmallLetter = charArrayInDisplayWordJap[0].textContent + charArrayInDisplayWordJap[1].textContent;\n\t\t\t\t\t// 文字をローマ字に変換し、アルファベットごとに分ける。\n\t\t\t\t\t// 2文字に対して、ローマ字変換パターン１をsplitする。\n\t\t\t\t\tif (romaMappingTableFirst[wordLetterWithSmallLetter] != null){\n\t\t\t\t\tcharArrayInDisplayWordAlphaFirst = romaMappingTableFirst[wordLetterWithSmallLetter].split(\"\").map(function(value){\n\t\t\t\t\t\tlet spanValue = document.createElement(\"span\");\n\t\t\t\t\t\tspanValue.textContent = value;\n\t\t\t\t\t\treturn spanValue;\n\t\t\t\t\t})};\n\t\t\t\t\t// 2文字に対してローマ字変換パターン２が存在する場合はsplitする。\n\t\t\t\t\tif (romaMappingTableSecond[wordLetterWithSmallLetter] != null){\n\t\t\t\t\t\tcharArrayInDisplayWordAlphaSecond = romaMappingTableSecond[wordLetterWithSmallLetter].split(\"\").map(function(value){\n\t\t\t\t\t\tlet spanValue = document.createElement(\"span\");\n\t\t\t\t\t\tspanValue.textContent = value;\n\t\t\t\t\t\treturn spanValue;\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\t// 2文字に対してローマ字変換パターン３が存在する場合はsplitする。\n\t\t\t\t\tif (romaMappingTableThird[wordLetterWithSmallLetter] != null){\n\t\t\t\t\t\tcharArrayInDisplayWordAlphaThird = romaMappingTableThird[wordLetterWithSmallLetter].split(\"\").map(function(value){\n\t\t\t\t\t\tlet spanValue = document.createElement(\"span\");\n\t\t\t\t\t\tspanValue.textContent = value;\n\t\t\t\t\t\treturn spanValue;\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\t};\n\n\t\t\t\t\t// 1文字のみを先に入力するパターンに対応する処理を定義する。\n\t\t\t\t\twordLetterSole = charArrayInDisplayWordJap[0].textContent;\n\t\t\t\t\t// 1文字目のみ対して、ローマ字変換パターン１をsplitする。\n\t\t\t\t\t// 母音の場合はsplit不可のため処理を分ける。\n\t\t\t\t\tif (wordLetterSole !== \"あ\"\n\t\t\t\t\t\t&& wordLetterSole !== \"い\"\n\t\t\t\t\t\t&& wordLetterSole !== \"う\"\n\t\t\t\t\t\t&& wordLetterSole !== \"え\"\n\t\t\t\t\t\t&& wordLetterSole !== \"お\"){\n\t\t\t\t\tcharArrayInDisplayWordAlphaSole = romaMappingTableFirst[wordLetterSole].split(\"\").map(function(value){\n\t\t\t\t\t\tlet spanValue = document.createElement(\"span\");\n\t\t\t\t\t\tspanValue.textContent = value;\n\t\t\t\t\t\treturn spanValue;\n\t\t\t\t\t})} else {\n\t\t\t\t\t\tlet spanValue = document.createElement(\"span\");\n\t\t\t\t\t\tspanValue.textContent = romaMappingTableFirst[wordLetterSole];\n\t\t\t\t\t\tcharArrayInDisplayWordAlphaSole = [spanValue];\n\t\t\t\t\t};\n\n\t\t\t\t\t// 1文字目のみ対してローマ字変換パターン２が存在する場合はsplitする。\n\t\t\t\t\tif (romaMappingTableSecond[wordLetterSole] != null){\n\t\t\t\t\t\tcharArrayInDisplayWordAlphaSoleSecond = romaMappingTableSecond[wordLetterSole].split(\"\").map(function(value){\n\t\t\t\t\t\tlet spanValue = document.createElement(\"span\");\n\t\t\t\t\t\tspanValue.textContent = value;\n\t\t\t\t\t\treturn spanValue;\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\t// 1文字目のみ対してローマ字変換パターン３が存在する場合はsplitする。\n\t\t\t\t\tif (romaMappingTableThird[wordLetterSole] != null){\n\t\t\t\t\t\tcharArrayInDisplayWordAlphaSoleThird = romaMappingTableThird[wordLetterSole].split(\"\").map(function(value){\n\t\t\t\t\t\tlet spanValue = document.createElement(\"span\");\n\t\t\t\t\t\tspanValue.textContent = value;\n\t\t\t\t\t\treturn spanValue;\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\t};\n\n\t\t\t// 文字入力によるアルファベットに対する処理を開始する。\n\t\t\t\t// 文字の入力開始前である場合\n\t\t\t\tif (shiftAlreadyStartedCountAll === 0){\n\t\t\t\t\t// 2文字目が存在する場合(最後の文字でない場合)\n\t\t\t\t\tif(charArrayInDisplayWordJap[1] != null){\n\t\t\t\t\t// 2文字に対してタイプキーがローマ字変換パターン１に該当する場合\n\t\t\t\t\tif (romaMappingTableFirst[wordLetterWithSmallLetter] != null){\n\t\t\t\t\tif(keyDownChar.key === charArrayInDisplayWordAlphaFirst[0].textContent) {\n\t\t\t\t\tcharArrayInDisplayWordAlphaFirst.shift();\n\t\t\t\t\tshiftAlreadyStartedCountAll = 1;\n\t\t\t\t\tshiftAlreadyStartedCountFirst = 1;\n\t\t\t\t\tif(charArrayInDisplayWordAlphaFirst.length === 0){\n\t\t\t\t\t\tcharArrayInDisplayWordJap[0].className = \"add_red\";\n\t\t\t\t\t\tcharArrayInDisplayWordJap[1].className = \"add_red\";\n\t\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\t\tshiftAlreadyStartedCountAll = 0;\n\t\t\t\t\t}}};\n\t\t\t\t\t// 2文字に対してタイプキーがローマ字変換パターン２に該当する場合\n\t\t\t\t\tif (romaMappingTableSecond[wordLetterWithSmallLetter] != null){\n\t\t\t\t\t\tif(keyDownChar.key === charArrayInDisplayWordAlphaSecond[0].textContent){\n\t\t\t\t\t\tcharArrayInDisplayWordAlphaSecond.shift();\n\t\t\t\t\t\tshiftAlreadyStartedCountAll = 1;\n\t\t\t\t\t\tshiftAlreadyStartedCountSecond = 1;\n\t\t\t\t\t\tif(charArrayInDisplayWordAlphaSecond.length === 0){\n\t\t\t\t\t\t\tcharArrayInDisplayWordJap[0].className = \"add_red\";\n\t\t\t\t\t\t\tcharArrayInDisplayWordJap[1].className = \"add_red\";\n\t\t\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\t\t\tshiftAlreadyStartedCountAll = 0;\n\t\t\t\t\t}}};\n\t\t\t\t\t// 2文字に対してタイプキーがローマ字変換パターン３に該当する場合\n\t\t\t\t\tif (romaMappingTableThird[wordLetterWithSmallLetter] != null){\n\t\t\t\t\t\tif(keyDownChar.key === charArrayInDisplayWordAlphaThird[0].textContent){\n\t\t\t\t\t\tcharArrayInDisplayWordAlphaThird.shift();\n\t\t\t\t\t\tshiftAlreadyStartedCountAll = 1;\n\t\t\t\t\t\tshiftAlreadyStartedCountThird = 1;\n\t\t\t\t\t\tif(charArrayInDisplayWordAlphaThird.length === 0){\n\t\t\t\t\t\t\tcharArrayInDisplayWordJap[0].className = \"add_red\";\n\t\t\t\t\t\t\tcharArrayInDisplayWordJap[1].className = \"add_red\";\n\t\t\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\t\t\tshiftAlreadyStartedCountAll = 0;\n\t\t\t\t\t}}}};\n\n\t\t\t\t\t// 1文字目のみに対してタイプキーがローマ字変換パターン１に該当する場合\n\t\t\t\t\tif(keyDownChar.key === charArrayInDisplayWordAlphaSole[0].textContent) {\n\t\t\t\t\t\tcharArrayInDisplayWordAlphaSole.shift();\n\t\t\t\t\t\tshiftAlreadyStartedCountAll = 1;\n\t\t\t\t\t\tshiftAlreadyStartedCountSoleFirst = 1;\n\t\t\t\t\tif(charArrayInDisplayWordAlphaSole.length === 0){\n\t\t\t\t\t\tcharArrayInDisplayWordJap[0].className = \"add_red\";\n\t\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\t\tshiftAlreadyStartedCountAll = 0;\n\t\t\t\t\t}};\n\t\t\t\t\t// 1文字目のみに対してタイプキーがローマ字変換パターン２に該当する場合\n\t\t\t\t\tif (romaMappingTableSecond[wordLetterSole] != null){\n\t\t\t\t\t\tif(keyDownChar.key === charArrayInDisplayWordAlphaSoleSecond[0].textContent\n\t\t\t\t\t\t&& charArrayInDisplayWordAlphaSole.length !== 0){\n\t\t\t\t\t\tcharArrayInDisplayWordAlphaSoleSecond.shift();\n\t\t\t\t\t\tshiftAlreadyStartedCountAll = 1;\n\t\t\t\t\t\tshiftAlreadyStartedCountSoleSecond = 1;\n\t\t\t\t\t\tif(charArrayInDisplayWordAlphaSoleSecond.length === 0){\n\t\t\t\t\t\t\tcharArrayInDisplayWordJap[0].className = \"add_red\";\n\t\t\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\t\t\tshiftAlreadyStartedCountAll = 0;\n\t\t\t\t\t\t}}};\n\t\t\t\t\t// 1文字目のみに対してタイプキーがローマ字変換パターン３に該当する場合\n\t\t\t\t\tif (romaMappingTableThird[wordLetterSole] != null){\n\t\t\t\t\t\tif(keyDownChar.key === charArrayInDisplayWordAlphaSoleThird[0].textContent\n\t\t\t\t\t\t&& charArrayInDisplayWordAlphaSole.length !== 0\n\t\t\t\t\t\t&& charArrayInDisplayWordAlphaSoleSecond.length !== 0){\n\t\t\t\t\t\tcharArrayInDisplayWordAlphaSoleThird.shift();\n\t\t\t\t\t\tshiftAlreadyStartedCountAll = 1;\n\t\t\t\t\t\tshiftAlreadyStartedCountSoleThird = 1;\n\t\t\t\t\t\tif(charArrayInDisplayWordAlphaSoleThird.length === 0){\n\t\t\t\t\t\t\tcharArrayInDisplayWordJap[0].className = \"add_red\";\n\t\t\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\t\t\tshiftAlreadyStartedCountAll = 0;\n\t\t\t\t\t\t}}};\n\n\t\t\t\t\t// タイプキーがローマ字変換パターン１〜３のいずれかに該当する場合\n\t\t\t\t\tif (shiftAlreadyStartedCountFirst === 1\n\t\t\t\t\t\t|| shiftAlreadyStartedCountSecond === 1\n\t\t\t\t\t\t|| shiftAlreadyStartedCountThird === 1\n\t\t\t\t\t\t|| shiftAlreadyStartedCountSoleFirst === 1\n\t\t\t\t\t\t|| shiftAlreadyStartedCountSoleSecond === 1\n\t\t\t\t\t\t|| shiftAlreadyStartedCountSoleThird === 1) {\n\t\t\t\t\tcorrectTyping();\n\t\t\t\t\t} else {\n\t\t\t\t\ttypeMissAudio();\n\t\t\t\t\t};\n\n\t\t\t\t\t// 文字入力が完了している場合、カウントを0にする。\n\t\t\t\t\tif (shiftAlreadyStartedCountAll === 0){\n\t\t\t\t\tshiftAlreadyStartedCountFirst = 0;\n\t\t\t\t\tshiftAlreadyStartedCountSecond = 0;\n\t\t\t\t\tshiftAlreadyStartedCountThird = 0;\n\t\t\t\t\tshiftAlreadyStartedCountSoleFirst = 0;\n\t\t\t\t\tshiftAlreadyStartedCountSoleSecond = 0;\n\t\t\t\t\tshiftAlreadyStartedCountSoleThird = 0;\n\t\t\t\t\t};\n\n\n\t\t// すでに1つのアルファベットを入力済みの場合\n\t\t} else if (shiftAlreadyStartedCountAll === 1){\n\t\t\t// 2文字目が存在する場合(最後の文字でない場合)\n\t\t\tif(charArrayInDisplayWordJap[1] != null){\n\t\t\t\t// 2文字に対してタイプキーがローマ字変換パターン１に該当する場合\n\t\t\t\tif(shiftAlreadyStartedCountFirst === 1){\n\t\t\t\tif(keyDownChar.key === charArrayInDisplayWordAlphaFirst[0].textContent) {\n\t\t\t\t\tcharArrayInDisplayWordAlphaFirst.shift();\n\t\t\t\t\tshiftAlreadyStartedCountAll = 2;\n\t\t\t\t\tshiftAlreadyStartedCountFirst = 2;\n\t\t\t\t\tif(charArrayInDisplayWordAlphaFirst.length === 0){\n\t\t\t\t\tcharArrayInDisplayWordJap[0].className = \"add_red\";\n\t\t\t\t\tcharArrayInDisplayWordJap[1].className = \"add_red\";\n\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\tshiftAlreadyStartedCountAll = 0;\n\t\t\t\t}}};\n\t\t\t\t// 2文字に対してタイプキーがローマ字変換パターン２に該当する場合\n\t\t\t\tif (romaMappingTableSecond[wordLetterWithSmallLetter] != null){\n\t\t\t\t\tif(shiftAlreadyStartedCountSecond === 1){\n\t\t\t\t\tif(keyDownChar.key === charArrayInDisplayWordAlphaSecond[0].textContent){\n\t\t\t\t\t\tcharArrayInDisplayWordAlphaSecond.shift();\n\t\t\t\t\t\tshiftAlreadyStartedCountAll = 2;\n\t\t\t\t\t\tshiftAlreadyStartedCountSecond = 2;\n\t\t\t\t\t\tif(charArrayInDisplayWordAlphaSecond.length === 0){\n\t\t\t\t\t\tcharArrayInDisplayWordJap[0].className = \"add_red\";\n\t\t\t\t\t\tcharArrayInDisplayWordJap[1].className = \"add_red\";\n\t\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\t\tshiftAlreadyStartedCountAll = 0;\n\t\t\t\t}}}};\n\t\t\t\t// 2文字に対してタイプキーがローマ字変換パターン３に該当する場合\n\t\t\t\tif (romaMappingTableThird[wordLetterWithSmallLetter] != null){\n\t\t\t\t\tif(shiftAlreadyStartedCountThird === 1){\n\t\t\t\t\tif(keyDownChar.key === charArrayInDisplayWordAlphaThird[0].textContent){\n\t\t\t\t\t\tcharArrayInDisplayWordAlphaThird.shift();\n\t\t\t\t\t\tshiftAlreadyStartedCountAll = 2;\n\t\t\t\t\t\tshiftAlreadyStartedCountThird = 2;\n\t\t\t\t\t\tif(charArrayInDisplayWordAlphaThird.length === 0){\n\t\t\t\t\t\tcharArrayInDisplayWordJap[0].className = \"add_red\";\n\t\t\t\t\t\tcharArrayInDisplayWordJap[1].className = \"add_red\";\n\t\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\t\tshiftAlreadyStartedCountAll = 0;\n\t\t\t\t}}}}};\n\n\t\t\t\t// 1文字目のみに対してタイプキーがローマ字変換パターン１に該当する場合\n\t\t\t\tif(shiftAlreadyStartedCountSoleFirst === 1){\n\t\t\t\tif(keyDownChar.key === charArrayInDisplayWordAlphaSole[0].textContent) {\n\t\t\t\t\tcharArrayInDisplayWordAlphaSole.shift();\n\t\t\t\t\tshiftAlreadyStartedCountAll = 2;\n\t\t\t\t\tshiftAlreadyStartedCountSoleFirst = 2;\n\t\t\t\t\tif(charArrayInDisplayWordAlphaSole.length === 0){\n\t\t\t\t\tcharArrayInDisplayWordJap[0].className = \"add_red\";\n\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\tshiftAlreadyStartedCountAll = 0;\n\t\t\t\t\t}}};\n\t\t\t\t// 1文字目のみに対してタイプキーがローマ字変換パターン２に該当する場合\n\t\t\t\tif (romaMappingTableSecond[wordLetterSole] != null){\n\t\t\t\t\tif(shiftAlreadyStartedCountSoleSecond === 1){\n\t\t\t\t\tif(keyDownChar.key === charArrayInDisplayWordAlphaSoleSecond[0].textContent){\n\t\t\t\t\t\tcharArrayInDisplayWordAlphaSoleSecond.shift();\n\t\t\t\t\t\tshiftAlreadyStartedCountAll = 2;\n\t\t\t\t\t\tshiftAlreadyStartedCountSoleSecond = 2;\n\t\t\t\t\t\tif(charArrayInDisplayWordAlphaSoleSecond.length === 0){\n\t\t\t\t\t\tcharArrayInDisplayWordJap[0].className = \"add_red\";\n\t\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\t\tshiftAlreadyStartedCountAll = 0;\n\t\t\t\t\t}}}};\n\t\t\t\t// 1文字目のみに対してタイプキーがローマ字変換パターン３に該当する場合\n\t\t\t\tif (romaMappingTableThird[wordLetterSole] != null){\n\t\t\t\t\tif(shiftAlreadyStartedCountSoleThird === 1){\n\t\t\t\t\tif(keyDownChar.key === charArrayInDisplayWordAlphaSoleThird[0].textContent){\n\t\t\t\t\t\tcharArrayInDisplayWordAlphaSoleThird.shift();\n\t\t\t\t\t\tshiftAlreadyStartedCountAll = 2;\n\t\t\t\t\t\tshiftAlreadyStartedCountSoleThird = 2;\n\t\t\t\t\t\tif(charArrayInDisplayWordAlphaSoleThird.length === 0){\n\t\t\t\t\t\tcharArrayInDisplayWordJap[0].className = \"add_red\";\n\t\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\t\tshiftAlreadyStartedCountAll = 0;\n\t\t\t\t\t\t}}}};\n\n\n\n\t\t\t\t// タイプキーがローマ字変換パターン１〜３のいずれかに該当する場合\n\t\t\t\tif (shiftAlreadyStartedCountFirst === 2\n\t\t\t\t\t|| shiftAlreadyStartedCountSecond === 2\n\t\t\t\t\t|| shiftAlreadyStartedCountThird === 2\n\t\t\t\t\t|| shiftAlreadyStartedCountSoleFirst === 2\n\t\t\t\t\t|| shiftAlreadyStartedCountSoleSecond === 2\n\t\t\t\t\t|| shiftAlreadyStartedCountSoleThird === 2) {\n\t\t\t\t\tcorrectTyping();\n\t\t\t\t} else {\n\t\t\t\t\ttypeMissAudio();\n\t\t\t\t};\n\n\t\t\t\t\t// 文字入力が完了している場合、カウントを0にする。\n\t\t\t\t\tif (shiftAlreadyStartedCountAll === 0){\n\t\t\t\t\tshiftAlreadyStartedCountFirst = 0;\n\t\t\t\t\tshiftAlreadyStartedCountSecond = 0;\n\t\t\t\t\tshiftAlreadyStartedCountThird = 0;\n\t\t\t\t\tshiftAlreadyStartedCountSoleFirst = 0;\n\t\t\t\t\tshiftAlreadyStartedCountSoleSecond = 0;\n\t\t\t\t\tshiftAlreadyStartedCountSoleThird = 0;\n\t\t\t\t\t};\n\n\n\t\t\t// すでに2つのアルファベットを入力済みの場合\n\t\t\t} else if (shiftAlreadyStartedCountAll === 2){\n\t\t\t// 2文字目が存在する場合(最後の文字でない場合)\n\t\t\tif(charArrayInDisplayWordJap[1] != null){\n\t\t\t\t// 2文字に対してタイプキーがローマ字変換パターン１に該当する場合\n\t\t\t\tif(shiftAlreadyStartedCountFirst === 2){\n\t\t\t\tif(keyDownChar.key === charArrayInDisplayWordAlphaFirst[0].textContent) {\n\t\t\t\t\tcharArrayInDisplayWordAlphaFirst.shift();\n\t\t\t\t\tshiftAlreadyStartedCountAll = 3;\n\t\t\t\t\tshiftAlreadyStartedCountFirst = 3;\n\t\t\t\t\tif(charArrayInDisplayWordAlphaFirst.length === 0){\n\t\t\t\t\tcharArrayInDisplayWordJap[0].className = \"add_red\";\n\t\t\t\t\tcharArrayInDisplayWordJap[1].className = \"add_red\";\n\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\tshiftAlreadyStartedCountAll = 0;\n\t\t\t\t}}};\n\t\t\t\t// 2文字に対してタイプキーがローマ字変換パターン２に該当する場合\n\t\t\t\tif (romaMappingTableSecond[wordLetterWithSmallLetter] != null){\n\t\t\t\t\tif(shiftAlreadyStartedCountSecond === 2){\n\t\t\t\t\tif(keyDownChar.key === charArrayInDisplayWordAlphaSecond[0].textContent){\n\t\t\t\t\t\tcharArrayInDisplayWordAlphaSecond.shift();\n\t\t\t\t\t\tshiftAlreadyStartedCountAll = 3;\n\t\t\t\t\t\tshiftAlreadyStartedCountSecond = 3;\n\t\t\t\t\t\tif(charArrayInDisplayWordAlphaSecond.length === 0){\n\t\t\t\t\t\tcharArrayInDisplayWordJap[0].className = \"add_red\";\n\t\t\t\t\t\tcharArrayInDisplayWordJap[1].className = \"add_red\";\n\t\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\t\tshiftAlreadyStartedCountAll = 0;\n\t\t\t\t}}}};\n\t\t\t\t// 2文字に対してタイプキーがローマ字変換パターン３に該当する場合\n\t\t\t\tif (romaMappingTableThird[wordLetterWithSmallLetter] != null){\n\t\t\t\t\tif(shiftAlreadyStartedCountThird === 2){\n\t\t\t\t\tif(keyDownChar.key === charArrayInDisplayWordAlphaThird[0].textContent){\n\t\t\t\t\t\tcharArrayInDisplayWordAlphaThird.shift();\n\t\t\t\t\t\tshiftAlreadyStartedCountAll = 3;\n\t\t\t\t\t\tshiftAlreadyStartedCountThird = 3;\n\t\t\t\t\t\tif(charArrayInDisplayWordAlphaThird.length === 0){\n\t\t\t\t\t\tcharArrayInDisplayWordJap[0].className = \"add_red\";\n\t\t\t\t\t\tcharArrayInDisplayWordJap[1].className = \"add_red\";\n\t\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\t\tshiftAlreadyStartedCountAll = 0;\n\t\t\t\t}}}}};\n\n\t\t\t\t// 1文字目のみに対してタイプキーがローマ字変換パターン１に該当する場合\n\t\t\t\tif(shiftAlreadyStartedCountSoleFirst === 2){\n\t\t\t\tif(keyDownChar.key === charArrayInDisplayWordAlphaSole[0].textContent) {\n\t\t\t\t\tcharArrayInDisplayWordAlphaSole.shift();\n\t\t\t\t\tshiftAlreadyStartedCountAll = 3;\n\t\t\t\t\tshiftAlreadyStartedCountSoleFirst = 3;\n\t\t\t\t\tif(charArrayInDisplayWordAlphaSole.length === 0){\n\t\t\t\t\tcharArrayInDisplayWordJap[0].className = \"add_red\";\n\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\tshiftAlreadyStartedCountAll = 0;\n\t\t\t\t\t}}};\n\t\t\t\t// 1文字目のみに対してタイプキーがローマ字変換パターン２に該当する場合\n\t\t\t\tif (romaMappingTableSecond[wordLetterSole] != null){\n\t\t\t\t\tif(shiftAlreadyStartedCountSoleSecond === 2){\n\t\t\t\t\tif(keyDownChar.key === charArrayInDisplayWordAlphaSoleSecond[0].textContent){\n\t\t\t\t\t\tcharArrayInDisplayWordAlphaSoleSecond.shift();\n\t\t\t\t\t\tshiftAlreadyStartedCountAll = 3;\n\t\t\t\t\t\tshiftAlreadyStartedCountSoleSecond = 3;\n\t\t\t\t\t\tif(charArrayInDisplayWordAlphaSoleSecond.length === 0){\n\t\t\t\t\t\tcharArrayInDisplayWordJap[0].className = \"add_red\";\n\t\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\t\tshiftAlreadyStartedCountAll = 0;\n\t\t\t\t\t}}}};\n\t\t\t\t// 1文字目のみに対してタイプキーがローマ字変換パターン３に該当する場合\n\t\t\t\tif (romaMappingTableThird[wordLetterSole] != null){\n\t\t\t\t\tif(shiftAlreadyStartedCountSoleThird === 2){\n\t\t\t\t\tif(keyDownChar.key === charArrayInDisplayWordAlphaSoleThird[0].textContent){\n\t\t\t\t\t\tcharArrayInDisplayWordAlphaSoleThird.shift();\n\t\t\t\t\t\tshiftAlreadyStartedCountAll = 3;\n\t\t\t\t\t\tshiftAlreadyStartedCountSoleThird = 3;\n\t\t\t\t\t\tif(charArrayInDisplayWordAlphaSoleThird.length === 0){\n\t\t\t\t\t\tcharArrayInDisplayWordJap[0].className = \"add_red\";\n\t\t\t\t\t\tcharArrayInDisplayWordJap.shift();\n\t\t\t\t\t\tshiftAlreadyStartedCountAll = 0;\n\t\t\t\t\t\t}}}};\n\n\t\t\t\t// タイプキーがローマ字変換パターン１〜３のいずれかに該当する場合\n\t\t\t\tif (shiftAlreadyStartedCountFirst === 3\n\t\t\t\t|| shiftAlreadyStartedCountSecond === 3\n\t\t\t\t|| shiftAlreadyStartedCountThird === 3\n\t\t\t\t|| shiftAlreadyStartedCountSoleFirst === 3\n\t\t\t\t|| shiftAlreadyStartedCountSoleSecond === 3\n\t\t\t\t|| shiftAlreadyStartedCountSoleThird === 3) {\n\t\t\t\tcorrectTyping();\n\t\t\t\t} else {\n\t\t\t\ttypeMissAudio();\n\t\t\t\t};\n\n\t\t\t\t// 文字入力が完了している場合、カウントを0にする。\n\t\t\t\tif (shiftAlreadyStartedCountAll === 0){\n\t\t\t\t\tshiftAlreadyStartedCountFirst = 0;\n\t\t\t\t\tshiftAlreadyStartedCountSecond = 0;\n\t\t\t\t\tshiftAlreadyStartedCountThird = 0;\n\t\t\t\t\tshiftAlreadyStartedCountSoleFirst = 0;\n\t\t\t\t\tshiftAlreadyStartedCountSoleSecond = 0;\n\t\t\t\t\tshiftAlreadyStartedCountSoleThird = 0;\n\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// タイプした文字が解答文字と一致する場合の共通処理を定義する。\n\t\tfunction correctTyping(){\n\t\t\t// タイプ音を定義する。\n\t\t\t// タイプ音ありの場合のみ\n\t\t\tif (typeAudioMode == \"タイプ音あり\") {\n\t\t\t\tlet typeAudioMode = new Audio('/assets/typeAudio.mp3');\n\t\t\t\t// タイプ音を発生させる。\n\t\t\t\ttypeAudioMode.volume = 0.3;\n\t\t\t\ttypeAudioMode.play();\n\t\t\t};\n\t\t\t// メーターを更新する。\n\t\t\tbonusCountMeter = bonusCountMeter +1;\n\t\t\t// メーターがメーター最大値以上になった場合、メーターを初期化し、プレイ可能時間を延長する。\n\t\t\tif(bonusCountMeter >= bonusCountMeterMax){\n\t\t\t\tbonusCountMeter = 0;\n\t\t\t\t// 初期プレイ時間を更新することで、残りプレイ可能時間を延長する。\n\t\t\t\tinitialPlayingTimeMSec = initialPlayingTimeMSec +bonusAddPlayTime;\n\t\t\t\t// 延長した残りプレイ時間を表示する。\n\t\t\t\tdisplayBonusAddPlayTime.textContent = \"+ \" + Math.ceil(bonusAddPlayTime/1000) + \"秒\";\n\t\t\t\t// 延長した残りプレイ時間をフェードアウトする。\n\t\t\t\tdisplayBonusAddPlayTime.classList.add('fadeout');\n\t\t\t\t// fadeoutのclassを取り除くことで、2回目以降も延長した残りプレイ時間が表示されるようにする。\n\t\t\t\tsetTimeout(function(){\n\t\t\t\tdisplayBonusAddPlayTime.textContent = \"\";\n\t\t\t\tdisplayBonusAddPlayTime.classList.remove('fadeout');\n\t\t\t\t}, 2000);\n\t\t\t};\n\t\t\t// 更新したメーターを表示する。\n\t\t\tdocument.getElementById(\"meterImg\").src=imgArray[bonusCountMeter];\n\n\t\t\t// 表示文字全てタイプした場合、スコアアップ処理を実施し、次の表示文字を作成する処理を実施する。\n\t\t\tif(charArrayInDisplayWordJap.length === 0) {\n\t\t\t\t// 正解音を定義する。\n\t\t\t\t// 正解音ありの場合のみ\n\t\t\t\tif (correctAudioMode == \"正解音あり\") {\n\t\t\t\t\tlet correctAudio = new Audio('/assets/correctAudio.mp3');\n\t\t\t\t\t// 正解した場合、効果音を発生させる。\n\t\t\t\t\tcorrectAudio.volume = 0.3;\n\t\t\t\t\tcorrectAudio.play();\n\t\t\t\t};\n\t\t\t\t// 「答えを見る」を押していなければ、スコアと正解数をカウントアップする。\n\t\t\t\tif (answerOpenFlag == \"0\"){\n\t\t\t\t\t// プレイモード：練習・普通の場合のみ、スコアアップする。\n\t\t\t\t\tif ( playMode == \"練習\" || playMode == \"普通\") {\n\t\t\t\t\t\tcountUpScore();\n\t\t\t\t\t};\n\t\t\t\t\tcountUpCorrectNum();\n\t\t\t\t} else {\n\t\t\t\t// 「答えを見る」を押していれば、フラグを0に戻す。\n\t\t\t\t\tanswerOpenFlag = \"0\";\n\t\t\t\t};\n\n\t\t\t\tcircleImg.classList.add('circle');\n\t\t\t\tcircleImg.classList.remove('transparent');\n\t\t\t\tdisplayWordKanji.classList.add('add_gray');\n\t\t\t\tdisplayWordKanji.classList.add('displayWordKanji');\n\t\t\t\tdisplayWordKanji.classList.remove('transparent');\n\t\t\t\tsetTimeout(createDisplayWord,500);\n\t\t\t\tsetTimeout(function(){\n\t\t\t\tcircleImg.classList.add('transparent');\n\t\t\t\tcircleImg.classList.remove('circle');\n\t\t\t\t}, 500);\n\n\t\t\t\tif (playMode == \"タイムアタック\" && gameCompleteTimeAttackFlag == \"1\") {\n\t\t\t\t\tgameClose();\n\t\t\t\t};\n\n\t\t\t};\n\t\t};\n\n\t\t// タイプした文字が表示文字と不一致の場合の処理を定義する。\n\t\tfunction typeMissAudio(){\n\t\t\t// ミス音を定義する。\n\t\t\t// ミス音ありの場合のみ\n\t\t\tif (incorrectAudioMode == \"ミス音あり\") {\n\t\t\t\tlet incorrectAudio = new Audio('/assets/incorrectAudio.mp3');\n\t\t\t\t// 不正解の場合、効果音を発生させる。\n\t\t\t\tincorrectAudio.volume = 0.3;\n\t\t\t\tincorrectAudio.play();\n\t\t\t};\n\t\t};\n\n\t\t// 英単語を生成した際に、発音させる処理を定義する。\n\t\tfunction pronounce(eng_word){\n\t\t\t// résuméの場合は音声ファイルの検索ができないため、ファイルを変更\n\t\t\tif (eng_word == \"résumé\"){\n\t\t\t\teng_word = \"rezumei\";\n\t\t\t};\n\t\t\tlet pronunciation = new Audio('/assets/発音/'+ eng_word + '.mp3');\n\t\t\tpronunciation.play();\n\t\t};\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}