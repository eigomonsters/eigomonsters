{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nwindow.addEventListener('load', function () {\n  var _romaMappingTable;\n\n  // 表示する単語リストを定義する。\n  // chromeの場合\"ff\"が正常に動作しない。\n  var wordList = gon.wordListAll; // 表示するメーターリストを定義する。\n\n  var imgArray = ['/assets/メーターPNG/メーター0.png', '/assets/メーターPNG/メーター10.png', '/assets/メーターPNG/メーター20.png', '/assets/メーターPNG/メーター30.png', '/assets/メーターPNG/メーター40.png', '/assets/メーターPNG/メーター50.png', '/assets/メーターPNG/メーター60.png', '/assets/メーターPNG/メーター70.png', '/assets/メーターPNG/メーター80.png', '/assets/メーターPNG/メーター90.png', '/assets/メーターPNG/メーター100.png'];\n  var romaMappingTable = (_romaMappingTable = {\n    \"あ\": \"a\",\n    \"きょ\": \"kyo\",\n    \"じゅ\": \"zyu\"\n  }, _defineProperty(_romaMappingTable, \"\\u3058\\u3085\", \"ju\"), _defineProperty(_romaMappingTable, \"え\", \"e\"), _defineProperty(_romaMappingTable, \"ぎょ\", \"gyo\"), _defineProperty(_romaMappingTable, \"う\", \"u\"), _defineProperty(_romaMappingTable, \"りょ\", \"ryo\"), _defineProperty(_romaMappingTable, \"い\", \"i\"), _defineProperty(_romaMappingTable, \"く\", \"ku\"), _defineProperty(_romaMappingTable, \"る\", \"ru\"), _romaMappingTable); // 表示するメーター初期値を定義する。\n\n  var bonusCountMeter = 0; // 表示するメーター最大値を定義する。\n\n  var bonusCountMeterMax = 10; // メーターの初期値を表示する。\n\n  document.getElementById(\"meterImg\").src = imgArray[bonusCountMeter]; // 表示するプレイ延長時間を定義する。\n\n  var displayBonusAddPlayTime = document.getElementById(\"displayBonusAddPlayTime\");\n  displayBonusAddPlayTime.className = \"displayBonusAddPlayTime\"; // メーター最大値に達した際の延長するプレイ時間を定義する。\n\n  var bonusAddPlayTime = 3000; // ゲーム開始までをカウントダウン変数を定義する。\n\n  var countDownPopup = document.getElementById(\"countDownPopup\"); // class属性を付与する。\n\n  countDownPopup.className = \"countDownPopup\"; // ゲーム開始までをカウントダウン変数の初期値を定義する。\n\n  var countDownPopupNumber = 3; // ゲーム開始までをカウントダウン変数の初期値を表示する。\n\n  countDownPopup.textContent = countDownPopupNumber; // ゲーム開始までをカウントダウンを1秒ごとに実施するように定義する。\n\n  var timerIdToStart = setInterval(countDownTimeToStart, 1000); // ゲーム開始までをカウントダウンを実施する処理を定義する。\n\n  function countDownTimeToStart() {\n    countDownPopupNumber = countDownPopupNumber - 1;\n\n    if (countDownPopupNumber <= 0) {\n      clearInterval(timerIdToStart);\n      countDownPopup.remove();\n      typingPlayStart();\n    } else {\n      countDownPopup.textContent = countDownPopupNumber;\n    }\n  } // ゲームを開始する処理を定義する。\n\n\n  function typingPlayStart() {\n    // 表示する単語を定義する。\n    var displayWord = document.getElementById(\"displayWord\");\n    displayWord.className = \"displayWord\";\n    var displayWordEnglish = document.getElementById(\"displayWordEnglish\");\n    displayWordEnglish.className = \"displayWordEnglish\"; // 表示する単語を一文字ずつに分ける変数を定義する。\n\n    var charArrayInDisplayWordJap = []; // 表示する単語を作成する。\n\n    createDisplayWord(); // プレイ開始時間を取得する。\n\n    var startTime = Date.now(); // 表示する残りのプレイ可能時間を定義する。\n\n    var remainPlayingTime = document.getElementById(\"remainPlayingTime\");\n    remainPlayingTime.className = \"remainPlayingTime\"; // 表示するスタート時のプレイ可能時間を定義する。\n\n    var initialPlayingTimeMSec = 120000; // スタート時に残りのプレイ可能時間の初期値を表示するためにcountDownTimeを実施する。\n\n    setTimeout(countDownTime, 0); // 1秒ごとにcountDownTimeを実施するように定義する。\n\n    var timerId = setInterval(countDownTime, 1000); // 表示するスコアを定義する。\n\n    var displayScore = document.getElementById(\"displayScore\");\n    displayScore.className = \"displayScore\"; // 合計スコアの初期値を定義する。\n\n    var totalScore = 0; // 表示するスコアに初期値を定義する。\n\n    displayScore.textContent = totalScore + \" P\"; // スコアアップする基準を定義する。\n\n    var refTextLengthForCountUpLevel1 = 4;\n    var addScoreLevel1 = 1000;\n    var addScoreLevel2 = 3000; // タイプされる度にkeyDownCharCountUpを実施するように定義する。\n\n    document.addEventListener(\"keydown\", keyDownCharCountUp); // ゲーム終了を判定するフラグを定義する。\n\n    var playEndFlag = \"0\"; // 表示する単語を作成する処理を定義する。\n\n    function createDisplayWord() {\n      // 表示単語を初期化する。\n      displayWord.textContent = \"\"; // 0〜textListsの総数間で整数値をランダムで算出する。\n\n      var randomIntegerInTotalWordList = Math.floor(Math.random() * wordList.length); // 表示する単語をランダムで選定する。\n\n      displayWordInList = wordList[randomIntegerInTotalWordList]; // 英単語を表示させる。\n\n      displayWordEnglish.textContent = displayWordInList.eng_word; // 表示する単語を一文字ごとに区切り、spanタグで閉じる。\n      // spanタグで閉じた単語を表示する。\n\n      charArrayInDisplayWordJap = displayWordInList.jap_trans_1_yomi.split(\"\").map(function (value) {\n        // spanタグを作成する。\n        var spanValue = document.createElement(\"span\"); // spanタグに一文字を挿入する。\n\n        spanValue.textContent = value; // 表示する単語にspanタグで閉じた一文字を追加する。\n\n        displayWord.appendChild(spanValue);\n        return spanValue;\n      });\n    } // プレイ時間をカウントダウンする処理を定義する。\n\n\n    function countDownTime() {\n      var currentTime = Date.now();\n      var diffBetweenCurrentTimeAndStartTime = currentTime - startTime;\n      var remainMSec = initialPlayingTimeMSec - diffBetweenCurrentTimeAndStartTime;\n      var remainSec = Math.ceil(remainMSec / 1000);\n      var remainSecLabel = \"\\u6B8B\\u308A\".concat(\"00\".concat(remainSec).slice(-3), \"\\u79D2\");\n\n      if (remainMSec <= 0) {\n        clearInterval(timerId);\n        remainSecLabel = \"\";\n        displayScore.textContent = \"\";\n        displayWord.textContent = \"\";\n        displayWordEnglish.textContent = \"\"; // ゲーム終了後にplayEndFlagを1に更新する。\n\n        playEndFlag = \"1\"; // ゲーム終了後に終了を知らせるポップアップを作成する。\n        // ゲーム終了を知らせるポップアップを定義する。\n\n        var closePopup = document.getElementById(\"closePopup\");\n        closePopup.textContent = \"終了\";\n        closePopup.className = \"closePopup\"; // 戻るボタンを定義する。\n\n        var backBtn = document.getElementById(\"backBtn\"); // もう一度ボタンを定義する。\n\n        var restartBtn = document.getElementById(\"restartBtn\"); // 2秒後に得点を表示させる。また、もう一度ボタンと戻るボタンを表示させる。\n\n        setTimeout(function () {\n          closePopup.textContent = \"\\u3042\\u306A\\u305F\\u306E\\u5F97\\u70B9\\u306F\".concat(totalScore.toLocaleString(), \"\\u70B9\\u3067\\u3059!\");\n          closePopup.className = \"endResultPopup\";\n          restartBtn.innerHTML = \"<a href='../'>もう一度遊ぶ</a>\";\n          restartBtn.className = \"restartBtn\";\n          backBtn.innerHTML = \"<a href='../'>タイトルに戻る</a>\";\n          backBtn.className = \"backBtn\";\n        }, 2000);\n      } // 残りプレイ可能時間を更新する。\n\n\n      remainPlayingTime.textContent = remainSecLabel;\n    } // スコアをアップし、現在のtotalScoreを表示する処理を定義する。\n\n\n    function countUpScore() {\n      if (displayWord.textContent.length < refTextLengthForCountUpLevel1) {\n        addPoint = addScoreLevel1;\n      } else {\n        addPoint = addScoreLevel2;\n      }\n\n      totalScore = totalScore + addPoint;\n      displayScore.textContent = \"\".concat(totalScore.toLocaleString(), \" P\");\n      return totalScore;\n    }\n\n    var charArrayInDisplayWordAlpha = [];\n    var shiftAlreadyStartedFlag = 0; // タイプした文字が表示文字と一致する場合の処理を定義する。\n\n    function keyDownCharCountUp(keyDownChar) {\n      if (charArrayInDisplayWordJap[1] != null) {\n        if (charArrayInDisplayWordJap[1].textContent === \"ぁ\" || charArrayInDisplayWordJap[1].textContent === \"ぃ\" || charArrayInDisplayWordJap[1].textContent === \"ぅ\" || charArrayInDisplayWordJap[1].textContent === \"ぇ\" || charArrayInDisplayWordJap[1].textContent === \"ぉ\" || charArrayInDisplayWordJap[1].textContent === \"ゃ\" || charArrayInDisplayWordJap[1].textContent === \"ゅ\" || charArrayInDisplayWordJap[1].textContent === \"ょ\") {\n          var wordLetter = charArrayInDisplayWordJap[0].textContent + charArrayInDisplayWordJap[1].textContent;\n\n          if (shiftAlreadyStartedFlag === 0) {\n            charArrayInDisplayWordAlpha = romaMappingTable[wordLetter].split(\"\").map(function (value) {\n              var spanValue = document.createElement(\"span\");\n              spanValue.textContent = value;\n              return spanValue;\n            });\n          }\n\n          ;\n\n          if (keyDownChar.key === charArrayInDisplayWordAlpha[0].textContent) {\n            charArrayInDisplayWordAlpha.shift();\n            shiftAlreadyStartedFlag = 1;\n\n            if (charArrayInDisplayWordAlpha.length === 0) {\n              charArrayInDisplayWordJap[0].className = \"add_red\";\n              charArrayInDisplayWordJap[1].className = \"add_red\";\n              charArrayInDisplayWordJap.shift();\n              charArrayInDisplayWordJap.shift();\n              shiftAlreadyStartedFlag = 0;\n            }\n\n            ;\n            correctTyping();\n          } else {\n            bonusCountReset();\n          }\n\n          ;\n        } else if (charArrayInDisplayWordJap[0].textContent === \"あ\" || charArrayInDisplayWordJap[0].textContent === \"い\" || charArrayInDisplayWordJap[0].textContent === \"う\" || charArrayInDisplayWordJap[0].textContent === \"え\" || charArrayInDisplayWordJap[0].textContent === \"お\") {\n          var _wordLetter = charArrayInDisplayWordJap[0].textContent;\n\n          if (shiftAlreadyStartedFlag === 0) {\n            if (keyDownChar.key === romaMappingTable[_wordLetter]) {\n              charArrayInDisplayWordJap[0].className = \"add_red\";\n              charArrayInDisplayWordJap.shift();\n              correctTyping();\n            } else {\n              bonusCountReset();\n            }\n\n            ;\n          }\n\n          ;\n        } else {\n          var _wordLetter2 = charArrayInDisplayWordJap[0].textContent;\n\n          if (shiftAlreadyStartedFlag === 0) {\n            charArrayInDisplayWordAlpha = romaMappingTable[_wordLetter2].split(\"\").map(function (value) {\n              var spanValue = document.createElement(\"span\");\n              spanValue.textContent = value;\n              return spanValue;\n            });\n          }\n\n          ;\n\n          if (keyDownChar.key === charArrayInDisplayWordAlpha[0].textContent) {\n            charArrayInDisplayWordAlpha.shift();\n            shiftAlreadyStartedFlag = 1;\n\n            if (charArrayInDisplayWordAlpha.length === 0) {\n              charArrayInDisplayWordJap[0].className = \"add_red\";\n              charArrayInDisplayWordJap.shift();\n              shiftAlreadyStartedFlag = 0;\n            }\n\n            ;\n            correctTyping();\n          } else {\n            bonusCountReset();\n          }\n\n          ;\n        }\n\n        ;\n      } else if (charArrayInDisplayWordJap[0].textContent === \"あ\" || charArrayInDisplayWordJap[0].textContent === \"い\" || charArrayInDisplayWordJap[0].textContent === \"う\" || charArrayInDisplayWordJap[0].textContent === \"え\" || charArrayInDisplayWordJap[0].textContent === \"お\") {\n        var _wordLetter3 = charArrayInDisplayWordJap[0].textContent;\n\n        if (shiftAlreadyStartedFlag === 0) {\n          if (keyDownChar.key === romaMappingTable[_wordLetter3]) {\n            charArrayInDisplayWordJap[0].className = \"add_red\";\n            charArrayInDisplayWordJap.shift();\n            correctTyping();\n          } else {\n            bonusCountReset();\n          }\n\n          ;\n        }\n\n        ;\n      } else {\n        var _wordLetter4 = charArrayInDisplayWordJap[0].textContent;\n\n        if (shiftAlreadyStartedFlag === 0) {\n          charArrayInDisplayWordAlpha = romaMappingTable[_wordLetter4].split(\"\").map(function (value) {\n            var spanValue = document.createElement(\"span\");\n            spanValue.textContent = value;\n            return spanValue;\n          });\n        }\n\n        ;\n\n        if (keyDownChar.key === charArrayInDisplayWordAlpha[0].textContent) {\n          charArrayInDisplayWordAlpha.shift();\n          shiftAlreadyStartedFlag = 1;\n\n          if (charArrayInDisplayWordAlpha.length === 0) {\n            charArrayInDisplayWordJap[0].className = \"add_red\";\n            charArrayInDisplayWordJap.shift();\n            shiftAlreadyStartedFlag = 0;\n          }\n\n          ;\n          correctTyping();\n        } else {\n          bonusCountReset();\n        }\n\n        ;\n      }\n\n      ;\n      console.log(charArrayInDisplayWordJap);\n    }\n\n    ; // function secondCharIsSmall(){\n    // };\n\n    function correctTyping() {\n      // メーターを更新する。\n      bonusCountMeter = bonusCountMeter + 1; // 表示文字全てタイプした場合、スコアアップ処理を実施し、次の表示文字を作成する処理を実施する。\n\n      if (charArrayInDisplayWordJap.length === 0) countUpScore(), createDisplayWord(); // メーターがメーター最大値以上になった場合、メーターを初期化し、プレイ可能時間を延長する。\n\n      if (bonusCountMeter >= bonusCountMeterMax) {\n        bonusCountMeter = 0; // 初期プレイ時間を更新することで、残りプレイ可能時間を延長する。\n\n        initialPlayingTimeMSec = initialPlayingTimeMSec + bonusAddPlayTime; // 延長した残りプレイ時間を表示する。\n\n        displayBonusAddPlayTime.textContent = \"+ \" + Math.ceil(bonusAddPlayTime / 1000) + \"秒\"; // 延長した残りプレイ時間をフェードアウトする。\n\n        displayBonusAddPlayTime.classList.add('fadeout'); // fadeoutのclassを取り除くことで、2回目以降も延長した残りプレイ時間が表示されるようにする。\n\n        setTimeout(function () {\n          displayBonusAddPlayTime.textContent = \"\";\n          displayBonusAddPlayTime.classList.remove('fadeout');\n        }, 2000);\n      }\n\n      ; // 更新したメーターを表示する。\n\n      document.getElementById(\"meterImg\").src = imgArray[bonusCountMeter];\n    }\n\n    ;\n\n    function bonusCountReset() {\n      bonusCountMeter = 0;\n      document.getElementById(\"meterImg\").src = imgArray[bonusCountMeter];\n    }\n\n    ;\n  }\n});","map":{"version":3,"sources":["/Users/mondenhiroki/projects/eigomonster/app/javascript/packs/typingplay_jap.js"],"names":["window","addEventListener","wordList","gon","wordListAll","imgArray","romaMappingTable","bonusCountMeter","bonusCountMeterMax","document","getElementById","src","displayBonusAddPlayTime","className","bonusAddPlayTime","countDownPopup","countDownPopupNumber","textContent","timerIdToStart","setInterval","countDownTimeToStart","clearInterval","remove","typingPlayStart","displayWord","displayWordEnglish","charArrayInDisplayWordJap","createDisplayWord","startTime","Date","now","remainPlayingTime","initialPlayingTimeMSec","setTimeout","countDownTime","timerId","displayScore","totalScore","refTextLengthForCountUpLevel1","addScoreLevel1","addScoreLevel2","keyDownCharCountUp","playEndFlag","randomIntegerInTotalWordList","Math","floor","random","length","displayWordInList","eng_word","jap_trans_1_yomi","split","map","value","spanValue","createElement","appendChild","currentTime","diffBetweenCurrentTimeAndStartTime","remainMSec","remainSec","ceil","remainSecLabel","slice","closePopup","backBtn","restartBtn","toLocaleString","innerHTML","countUpScore","addPoint","charArrayInDisplayWordAlpha","shiftAlreadyStartedFlag","keyDownChar","wordLetter","key","shift","correctTyping","bonusCountReset","console","log","classList","add"],"mappings":"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","sourcesContent":["window.addEventListener('load', function(){\n\n  // 表示する単語リストを定義する。\n  // chromeの場合\"ff\"が正常に動作しない。\n\n  const wordList = gon.wordListAll;\n\n  // 表示するメーターリストを定義する。\n  const imgArray =[\n    '/assets/メーターPNG/メーター0.png',\n    '/assets/メーターPNG/メーター10.png',\n    '/assets/メーターPNG/メーター20.png',\n    '/assets/メーターPNG/メーター30.png',\n    '/assets/メーターPNG/メーター40.png',\n    '/assets/メーターPNG/メーター50.png',\n    '/assets/メーターPNG/メーター60.png',\n    '/assets/メーターPNG/メーター70.png',\n    '/assets/メーターPNG/メーター80.png',\n    '/assets/メーターPNG/メーター90.png',\n    '/assets/メーターPNG/メーター100.png'\n  ]\n\n\n  const romaMappingTable = {\n    \"あ\":\"a\",\n    \"きょ\":\"kyo\",\n    \"じゅ\":\"zyu\",\n    \"じゅ\":\"ju\",\n    \"え\":\"e\",\n    \"ぎょ\":\"gyo\",\n    \"う\":\"u\",\n    \"りょ\":\"ryo\",\n    \"い\":\"i\",\n    \"く\":\"ku\",\n    \"る\":\"ru\"\n  }\n    \n\n  // 表示するメーター初期値を定義する。\n  let bonusCountMeter = 0;\n  // 表示するメーター最大値を定義する。\n  const bonusCountMeterMax = 10;\n  // メーターの初期値を表示する。\n  document.getElementById(\"meterImg\").src=imgArray[bonusCountMeter];\n  // 表示するプレイ延長時間を定義する。\n  const displayBonusAddPlayTime = document.getElementById(\"displayBonusAddPlayTime\");\n  displayBonusAddPlayTime.className =  \"displayBonusAddPlayTime\";\n  // メーター最大値に達した際の延長するプレイ時間を定義する。\n  const bonusAddPlayTime = 3000;\n\n\n  // ゲーム開始までをカウントダウン変数を定義する。\n  let countDownPopup = document.getElementById(\"countDownPopup\");\n  // class属性を付与する。\n  countDownPopup.className = \"countDownPopup\";\n  // ゲーム開始までをカウントダウン変数の初期値を定義する。\n  let countDownPopupNumber = 3;\n  // ゲーム開始までをカウントダウン変数の初期値を表示する。\n  countDownPopup.textContent = countDownPopupNumber;\n  // ゲーム開始までをカウントダウンを1秒ごとに実施するように定義する。\n  const timerIdToStart = setInterval(countDownTimeToStart,1000);\n\n\n  // ゲーム開始までをカウントダウンを実施する処理を定義する。\n  function countDownTimeToStart(){\n    countDownPopupNumber = countDownPopupNumber - 1;\n    if (countDownPopupNumber <= 0){\n      clearInterval(timerIdToStart);\n      countDownPopup.remove();\n      typingPlayStart();\n    } else {\n      countDownPopup.textContent = countDownPopupNumber;\n    }\n  }\n\n  // ゲームを開始する処理を定義する。\n  function typingPlayStart(){\n\n    // 表示する単語を定義する。\n    const displayWord = document.getElementById(\"displayWord\");\n    displayWord.className =  \"displayWord\";\n    const displayWordEnglish = document.getElementById(\"displayWordEnglish\");\n    displayWordEnglish.className =  \"displayWordEnglish\";\n    // 表示する単語を一文字ずつに分ける変数を定義する。\n    let charArrayInDisplayWordJap =[];\n    // 表示する単語を作成する。\n    createDisplayWord();\n\n    // プレイ開始時間を取得する。\n    const startTime = Date.now();\n    // 表示する残りのプレイ可能時間を定義する。\n    let remainPlayingTime = document.getElementById(\"remainPlayingTime\");\n    remainPlayingTime.className =  \"remainPlayingTime\";\n    // 表示するスタート時のプレイ可能時間を定義する。\n    let initialPlayingTimeMSec = 120000;\n    // スタート時に残りのプレイ可能時間の初期値を表示するためにcountDownTimeを実施する。\n    setTimeout(countDownTime,0);\n    // 1秒ごとにcountDownTimeを実施するように定義する。\n    const timerId = setInterval(countDownTime,1000);\n\n    // 表示するスコアを定義する。\n    let displayScore = document.getElementById(\"displayScore\");\n    displayScore.className =  \"displayScore\";\n    // 合計スコアの初期値を定義する。\n    let totalScore = 0;\n    // 表示するスコアに初期値を定義する。\n    displayScore.textContent = totalScore + \" P\";\n    // スコアアップする基準を定義する。\n    const refTextLengthForCountUpLevel1 = 4;\n    const addScoreLevel1 = 1000;\n    const addScoreLevel2 = 3000;\n\n    // タイプされる度にkeyDownCharCountUpを実施するように定義する。\n    document.addEventListener(`keydown`, keyDownCharCountUp);\n\n    // ゲーム終了を判定するフラグを定義する。\n    let playEndFlag = \"0\";\n\n    // 表示する単語を作成する処理を定義する。\n    function createDisplayWord(){\n      // 表示単語を初期化する。\n      displayWord.textContent = \"\";\n      // 0〜textListsの総数間で整数値をランダムで算出する。\n      let randomIntegerInTotalWordList = Math.floor(Math.random() * wordList.length);\n      // 表示する単語をランダムで選定する。\n      displayWordInList = wordList[randomIntegerInTotalWordList];\n\n      // 英単語を表示させる。\n      displayWordEnglish.textContent = displayWordInList.eng_word;\n      // 表示する単語を一文字ごとに区切り、spanタグで閉じる。\n      // spanタグで閉じた単語を表示する。\n      charArrayInDisplayWordJap = displayWordInList.jap_trans_1_yomi.split(\"\").map(function(value){\n        // spanタグを作成する。\n        let spanValue = document.createElement(\"span\");\n        // spanタグに一文字を挿入する。\n        spanValue.textContent = value;\n        // 表示する単語にspanタグで閉じた一文字を追加する。\n        displayWord.appendChild(spanValue);\n        return spanValue;\n      });\n    }\n\n    // プレイ時間をカウントダウンする処理を定義する。\n    function countDownTime(){\n      const currentTime = Date.now();\n      const diffBetweenCurrentTimeAndStartTime = currentTime - startTime;\n      const remainMSec = initialPlayingTimeMSec - diffBetweenCurrentTimeAndStartTime;\n      const remainSec = Math.ceil(remainMSec/1000);\n      let  remainSecLabel = `残り${(`00${remainSec}` ).slice( -3 )}秒`;\n      if (remainMSec <= 0){\n        clearInterval(timerId);\n        remainSecLabel = \"\";\n        displayScore.textContent =\"\";\n        displayWord.textContent =\"\";\n        displayWordEnglish.textContent =\"\";\n        // ゲーム終了後にplayEndFlagを1に更新する。\n        playEndFlag = \"1\";\n        // ゲーム終了後に終了を知らせるポップアップを作成する。\n        // ゲーム終了を知らせるポップアップを定義する。\n        const closePopup = document.getElementById(\"closePopup\");\n        closePopup.textContent =\"終了\";\n        closePopup.className = \"closePopup\";\n        // 戻るボタンを定義する。\n        const backBtn = document.getElementById(\"backBtn\");\n        // もう一度ボタンを定義する。\n        const restartBtn = document.getElementById(\"restartBtn\");\n        // 2秒後に得点を表示させる。また、もう一度ボタンと戻るボタンを表示させる。\n        setTimeout(function(){\n          closePopup.textContent = `あなたの得点は${totalScore.toLocaleString()}点です!`;\n          closePopup.className = \"endResultPopup\";\n          restartBtn.innerHTML = \"<a href='../'>もう一度遊ぶ</a>\";\n          restartBtn.className = \"restartBtn\";\n          backBtn.innerHTML = \"<a href='../'>タイトルに戻る</a>\";\n          backBtn.className = \"backBtn\";\n        },2000);\n      }\n      // 残りプレイ可能時間を更新する。\n      remainPlayingTime.textContent = remainSecLabel;\n    }\n\n    // スコアをアップし、現在のtotalScoreを表示する処理を定義する。\n    function countUpScore(){\n      if (displayWord.textContent.length < refTextLengthForCountUpLevel1){\n        addPoint = addScoreLevel1;\n      } else {\n        addPoint = addScoreLevel2;\n      }\n      totalScore = totalScore + addPoint;\n      displayScore.textContent = `${totalScore.toLocaleString()} P`;\n      return totalScore;\n    }\n\n    let charArrayInDisplayWordAlpha = [];\n\n    let shiftAlreadyStartedFlag = 0;\n\n    // タイプした文字が表示文字と一致する場合の処理を定義する。\n    function keyDownCharCountUp(keyDownChar){\n      if(charArrayInDisplayWordJap[1] != null){\n        if (charArrayInDisplayWordJap[1].textContent === \"ぁ\"\n          || charArrayInDisplayWordJap[1].textContent === \"ぃ\"\n          || charArrayInDisplayWordJap[1].textContent === \"ぅ\"\n          || charArrayInDisplayWordJap[1].textContent === \"ぇ\"\n          || charArrayInDisplayWordJap[1].textContent === \"ぉ\"\n          || charArrayInDisplayWordJap[1].textContent === \"ゃ\"\n          || charArrayInDisplayWordJap[1].textContent === \"ゅ\"\n          || charArrayInDisplayWordJap[1].textContent === \"ょ\"){\n          let wordLetter = charArrayInDisplayWordJap[0].textContent + charArrayInDisplayWordJap[1].textContent;\n          if (shiftAlreadyStartedFlag === 0 ){\n            charArrayInDisplayWordAlpha = romaMappingTable[wordLetter].split(\"\").map(function(value){\n              let spanValue = document.createElement(\"span\");\n              spanValue.textContent = value;\n              return spanValue;\n            });\n          };\n          if(keyDownChar.key === charArrayInDisplayWordAlpha[0].textContent){\n            charArrayInDisplayWordAlpha.shift();\n            shiftAlreadyStartedFlag = 1;\n            if(charArrayInDisplayWordAlpha.length === 0){\n              charArrayInDisplayWordJap[0].className = \"add_red\";\n              charArrayInDisplayWordJap[1].className = \"add_red\";\n              charArrayInDisplayWordJap.shift();\n              charArrayInDisplayWordJap.shift();\n              shiftAlreadyStartedFlag = 0;\n            };\n            correctTyping();\n          } else {\n            bonusCountReset();\n          };\n        } else if (charArrayInDisplayWordJap[0].textContent === \"あ\"\n          || charArrayInDisplayWordJap[0].textContent === \"い\"\n          || charArrayInDisplayWordJap[0].textContent === \"う\"\n          || charArrayInDisplayWordJap[0].textContent === \"え\"\n          || charArrayInDisplayWordJap[0].textContent === \"お\" ){\n          let wordLetter = charArrayInDisplayWordJap[0].textContent;\n          if (shiftAlreadyStartedFlag === 0 ){\n          if (keyDownChar.key === romaMappingTable[wordLetter]){\n              charArrayInDisplayWordJap[0].className = \"add_red\";\n              charArrayInDisplayWordJap.shift();\n              correctTyping();\n            } else {\n              bonusCountReset();\n            };\n          };\n        } else {\n          let wordLetter = charArrayInDisplayWordJap[0].textContent;\n          if (shiftAlreadyStartedFlag === 0 ){\n              charArrayInDisplayWordAlpha = romaMappingTable[wordLetter].split(\"\").map(function(value){\n              let spanValue = document.createElement(\"span\");\n              spanValue.textContent = value;\n              return spanValue;\n            });\n          };\n          if(keyDownChar.key === charArrayInDisplayWordAlpha[0].textContent){\n            charArrayInDisplayWordAlpha.shift();\n            shiftAlreadyStartedFlag = 1;\n            if(charArrayInDisplayWordAlpha.length === 0){\n              charArrayInDisplayWordJap[0].className = \"add_red\";\n              charArrayInDisplayWordJap.shift();\n              shiftAlreadyStartedFlag = 0;\n            };\n            correctTyping();\n          } else {\n            bonusCountReset();\n          };\n        };\n      } else if (charArrayInDisplayWordJap[0].textContent === \"あ\"\n      || charArrayInDisplayWordJap[0].textContent === \"い\"\n      || charArrayInDisplayWordJap[0].textContent === \"う\"\n      || charArrayInDisplayWordJap[0].textContent === \"え\"\n      || charArrayInDisplayWordJap[0].textContent === \"お\" ){\n      let wordLetter = charArrayInDisplayWordJap[0].textContent;\n      if (shiftAlreadyStartedFlag === 0 ){\n      if (keyDownChar.key === romaMappingTable[wordLetter]){\n          charArrayInDisplayWordJap[0].className = \"add_red\";\n          charArrayInDisplayWordJap.shift();\n          correctTyping();\n        } else {\n          bonusCountReset();\n        };\n      };\n      } else {\n        let wordLetter = charArrayInDisplayWordJap[0].textContent;\n        if (shiftAlreadyStartedFlag === 0 ){\n            charArrayInDisplayWordAlpha = romaMappingTable[wordLetter].split(\"\").map(function(value){\n            let spanValue = document.createElement(\"span\");\n            spanValue.textContent = value;\n            return spanValue;\n          });\n        };\n        if(keyDownChar.key === charArrayInDisplayWordAlpha[0].textContent){\n          charArrayInDisplayWordAlpha.shift();\n          shiftAlreadyStartedFlag = 1;\n          if(charArrayInDisplayWordAlpha.length === 0){\n            charArrayInDisplayWordJap[0].className = \"add_red\";\n            charArrayInDisplayWordJap.shift();\n            shiftAlreadyStartedFlag = 0;\n          };\n          correctTyping();\n        } else {\n          bonusCountReset();\n        };\n      };\n        console.log(charArrayInDisplayWordJap);\n    };\n\n    // function secondCharIsSmall(){\n\n    // };\n\n\n    function correctTyping(){\n      // メーターを更新する。\n      bonusCountMeter = bonusCountMeter +1;\n      // 表示文字全てタイプした場合、スコアアップ処理を実施し、次の表示文字を作成する処理を実施する。\n      if(charArrayInDisplayWordJap.length === 0) countUpScore(), createDisplayWord();\n      // メーターがメーター最大値以上になった場合、メーターを初期化し、プレイ可能時間を延長する。\n      if(bonusCountMeter >= bonusCountMeterMax){\n        bonusCountMeter = 0;\n        // 初期プレイ時間を更新することで、残りプレイ可能時間を延長する。\n        initialPlayingTimeMSec = initialPlayingTimeMSec +bonusAddPlayTime;\n        // 延長した残りプレイ時間を表示する。\n        displayBonusAddPlayTime.textContent = \"+ \" + Math.ceil(bonusAddPlayTime/1000) + \"秒\";\n        // 延長した残りプレイ時間をフェードアウトする。\n        displayBonusAddPlayTime.classList.add('fadeout');\n        // fadeoutのclassを取り除くことで、2回目以降も延長した残りプレイ時間が表示されるようにする。\n        setTimeout(function(){ \n          displayBonusAddPlayTime.textContent = \"\";\n          displayBonusAddPlayTime.classList.remove('fadeout');\n        }, 2000);\n      };\n      // 更新したメーターを表示する。\n      document.getElementById(\"meterImg\").src=imgArray[bonusCountMeter];\n    };\n\n    function bonusCountReset(){\n      bonusCountMeter = 0;\n      document.getElementById(\"meterImg\").src=imgArray[bonusCountMeter];\n    };\n  }\n});\n"]},"metadata":{},"sourceType":"module"}